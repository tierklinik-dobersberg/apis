syntax = "proto3";

package tkd.orthanc_bridge.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/duration.proto";
import "buf/validate/validate.proto";
import "tkd/common/v1/pagination.proto";
import "tkd/common/v1/date.proto";
import "tkd/common/v1/descriptor.proto";

message DICOMTag {
    // Tag is the DICOM tag value in it's hex format
    string tag = 1;

    // ValueRepresentation is the VR of the DICOM tag.
    string value_representation = 2;

    // Value holds the DICOM tag value(s) encoded as google.protobuf.Value
    repeated google.protobuf.Value value = 3;

    // Name holds the pretty-name of the DICOM tag.
    // For private tags, this field is unset.
    string name = 4;
}

service OrthancBridge {
    // ListStudies returns a list of studies matching a given criteria.
    rpc ListStudies(ListStudiesRequest) returns (ListStudiesResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    // DownloadStudy allows to download selected instances from a study.
    // For multi-file downloads, the files are packed into a ZIP archive.
    rpc DownloadStudy(DownloadStudyRequest) returns (DownloadStudyResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }
}

message FilterTag {
    // Tag is either the well-known name or the numeric DICOM tag.
    string tag = 1;

    // Value holds the tag value represented as a string.
    repeated string value = 2;
}

message ListStudiesRequest {
    // DateRange might be set to only return studies created
    // withing the specified date-range.
    tkd.common.v1.DateRange date_range = 1;

    // OwnerName might be set to only return studies where the
    // ResponsiblePersonName matches owner_name.
    string owner_name = 2;

    // PatientName might be set to only return studies for the 
    // given patient name
    string patient_name = 3;

    // Modality might be set to only return studies for the given
    // DICOM modality.
    string modality = 4;

    // FilterTags might contain additional DICOM tag filters
    // represented by their stringified value.
    repeated FilterTag filter_tags = 5;

    // IncludeTags might hold well-known names or their numeric DICOM tag
    // values that should be included in the response.
    repeated string include_tags = 6;

    // EnableFuzzyMatching might be set to true to enable fuzzy matching
    // using the wildcard character '*'
    bool enable_fuzzy_matching = 10;

    // Pagintion can be set to enable paginated responses.
    tkd.common.v1.Pagination pagination = 11;

}

message Thumbnail {
    // Mime holds the mime type of Thumbnail.data
    string mime = 1;

    // Data holds the binary thumbnail image.
    bytes data = 2;
}

message Instance {
    // InstanceUID holds the DICOM instance UID
    string instance_uid = 1;

    // Time holds the time the instance has been created.
    google.protobuf.Timestamp time = 3;

    repeated DICOMTag tags = 4;

    // Thumbail may hold a image thumbnail of the DICOM instance.
    Thumbnail thumbnail = 5;
}

message Series {
    // SeriesUid is the DICOM UID for the series
    string series_uid = 1;

    // Instances holds all DICOM instances of this series.
    repeated Instance instances = 2;

    // Time holds the timestamp at which the series has been created.
    google.protobuf.Timestamp time = 3;

    repeated DICOMTag tags = 4;
}


message Study {
    // StudyUid is the DICOM UID of the study
    string study_uid = 1;

    // Series holds all series within the study.
    repeated Series series = 2;

    // Time holds the time at which the study has been created. 
    google.protobuf.Timestamp time = 3;

    // PatientName is the name of the patient.
    string patient_name = 4;

    // OwnerName is the name of the patient owner.
    string owner_name = 5;

    // Modalities holds all modalities available within the study.
    repeated string modalities = 6;

    repeated DICOMTag tags = 7;
}

message ListStudiesResponse {
    // Studies holds all studies that satisfied the ListStudiesRequest
    repeated Study studies = 5;

    // TotalCount holds the total count of matched studies. Only
    // the subset requested by ListStudiesRequest.pagination is
    // returned in the studies field.
    int64 total_count = 10;
}

enum DownloadType {
    DOWNLOAD_TYPE_UNSPECIFIED = 0;

    // DICOM specifies that the study/instance should be exported
    // as DICOM (.dcm) file
    DICOM = 1;

    // PNG specifies that the study/instance should be exported
    // as a PNG (.png) image
    PNG = 2;

    // JPEG specifies that the study/instance should be exported
    // as a JPEG (.jpg) image
    JPEG = 3;

    // AVI specifies that multi-frame instances should be exported
    // as a MJPEG video (.avi)
    AVI = 4;
}

message DownloadStudyRequest {
    // StudyUid holds the UID of the study that should be downloaded
    string study_uid = 1 [
        (buf.validate.field).required = true
    ];

    // InstanceUids might be set to limit wich DICOM instances should
    // be part of the download.
    // If unset, all instances of the given study will be downloaded.
    repeated string instance_uids = 2;

    // Specifies which types to download.
    repeated DownloadType types = 3 [
        (buf.validate.field).required = true
    ];

    // TimeToLive specifies how long the generated export should
    // be kept on the file-system.
    // Note that server implementation might decided to add a lower
    // or upper limit to the TTL.
    // Check the expire_time field in DownloadStudyResponse.
    google.protobuf.Duration time_to_live = 4;
}

message DownloadStudyResponse {
    // DownloadLink holds the download link for the study.
    string download_link = 1;

    // ExpireTime holds the time at which the download link expires
    // and the generated export will be deleted from the server.
    google.protobuf.Timestamp expire_time = 2;
}