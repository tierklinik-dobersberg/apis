syntax = "proto3";

package tkd.calendar.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

// Calendar describes a event calendar.
message Calendar {
    // ID is a unique ID for the calendar. The format of the ID may depend on
    // the application and the actual calendar backend.
    string id = 1;

    // Name is a human friendly name of the calendar.
    string name = 2;

    // Timezone holds the timezone information for the calendar. In the format
    // of Europe/Vienna.
    string timezone = 3;

    // Color holds the calendar color.
    string color = 4;

    // UserId is set to the user that is associated with this calendar, if any.
    // Note that if multiple users are associated with an calendar, only the first
    // is returned here.
    string user_id = 5;
}

// next-id: 12
message CalendarEvent {
    // ID is a unique ID for the calendar event.
    string id = 1;

    // CalendarId is the unique ID of the calendar this event belongs to.
    string calendar_id = 2;

    // StartTime holds the time the event begins.
    google.protobuf.Timestamp start_time = 3;

    // EndTime optionally holds the time the event ends.
    google.protobuf.Timestamp end_time = 4;

    // FullDay may be set to true for events the last the whole day. In this
    // case, the time part (HH:MM:SS) of StartTime is not important!
    bool full_day = 5;

    // Summary of the calendar event.
    string summary = 6;

    // Description of the calendar event.
    string description = 7;

    // ExtraData may holds additional information about the calendar entry. In
    // most cases, this should be CustomerAnnotation
    google.protobuf.Any extra_data = 8;

    // IsFree is set to true if the user is free (i.e. not busy).
    // The calendar service might calculate free slots for users and report them
    // during the ListEvents RPC.
    bool is_free = 9;

    // CreateTime holds the timestamp at which this calendar event has been created.
    google.protobuf.Timestamp create_time = 10;

    // Resources is a list of unique resource-calendar names that are associated
    // with this event.
    repeated string resources = 11;
}

message CustomerAnnotation {
    reserved 1;
    reserved "customer_source";

    // CustomerId is the ID of the customer within the specified source.
    string customer_id = 2;

    // AnimalIds is a list of animals that are expected to show up during the
    // event and need treatment.
    repeated string animal_ids = 3;

    // CreatedByUserId holds the ID of the user that created the event.
    string created_by_user_id = 4;
}
