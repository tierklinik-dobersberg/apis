syntax = "proto3";

package tkd.pbx3cx.v1;

import "tkd/customer/v1/customer.proto";
import "tkd/common/v1/daytime.proto";
import "tkd/common/v1/time_range.proto";
import "tkd/common/v1/descriptor.proto";
import "tkd/common/v1/list_wrappers.proto";
import "tkd/common/v1/imap.proto";
import "tkd/common/v1/view.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";
import "buf/validate/validate.proto";
import "google/protobuf/empty.proto";

message VoiceMail {
    string id = 1;
    string mailbox = 2;
    google.protobuf.Timestamp receive_time = 3;

    oneof caller {
        string number = 4;
        tkd.customer.v1.Customer customer = 5;
    }

    string subject = 6;
    string message = 7;
    string inbound_number = 8;
    string file_name = 9;
    google.protobuf.Timestamp seen_time = 10;
}

enum NotificationType {
    NOTIFICATION_TYPE_UNSPECIFIED = 0;
    NOTIFICATION_TYPE_SMS = 1;
    NOTIFICATION_TYPE_MAIL = 2;
    NOTIFICATION_TYPE_WEBPUSH = 3;
}

message NotificationSettings {
    string name = 7 [
        (buf.validate.field).required = true
    ];

    string description = 8;

    string subject_template = 1;

    string message_template = 2 [
        (buf.validate.field).required = true
    ];

    oneof recipients {
        tkd.common.v1.StringList role_ids = 3;
        tkd.common.v1.StringList user_ids = 4;

        option (buf.validate.oneof).required = true;
    }

    repeated tkd.common.v1.DayTime send_times = 5;

    repeated NotificationType types = 6 [
        (buf.validate.field).required = true
    ];
}

message Mailbox {
    // ID is a unique identifier of the mailbox.
    string id = 1;

    // DisplayName is the display-name of the mailbox.
    string display_name = 2;

    // PollInterval specifies the interval at which the mailbox
    // should be polled for updates.
    google.protobuf.Duration poll_interval = 3;

    // Config holds the IMAP configuration for the mailbox.
    tkd.common.v1.IMAPConfig config = 4;

    // NotificationSettings holds settings for notifications about new
    // voice-mails 
    repeated NotificationSettings notification_settings = 5;

    string extract_caller_regexp = 6;
    string extract_target_regexp = 7;
}

service VoiceMailService {
    option (tkd.common.v1.service_auth) = {
        admin_roles: ["idm_superuser"]
    };

    rpc CreateMailbox(CreateMailboxRequest) returns (CreateMailboxResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_ADMIN,
        };
    }

    rpc ListMailboxes(ListMailboxesRequest) returns (ListMailboxesResponse) { 
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_ADMIN,
        };
    }

    rpc DeleteMailbox(DeleteMailboxRequest) returns (google.protobuf.Empty) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_ADMIN,
        };
    }

    rpc ListVoiceMails(ListVoiceMailsRequest) returns (ListVoiceMailsResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    rpc GetVoiceMail(GetVoiceMailRequest) returns (GetVoiceMailResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    rpc MarkVoiceMails(MarkVoiceMailsRequest) returns (MarkVoiceMailsResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }
}

message CreateMailboxRequest {
    Mailbox mailbox = 1 [
        (buf.validate.field).required = true
    ];
}
message CreateMailboxResponse {
}

message ListMailboxesRequest {
    tkd.common.v1.View view = 1;
}

message ListMailboxesResponse {
    repeated Mailbox mailboxes = 1;
}

message DeleteMailboxRequest {
    string id = 1 [
        (buf.validate.field).required = true
    ];
}

message VoiceMailFilter {
    tkd.common.v1.TimeRange time_range = 1;

    google.protobuf.BoolValue unseen = 2;

    oneof caller {
        string number = 3;
        string customer_id = 4;
    }
}

message ListVoiceMailsRequest {
    string mailbox = 1 [
        (buf.validate.field).required = true
    ];

    VoiceMailFilter filter = 2;

    tkd.common.v1.View view = 3;
}

message ListVoiceMailsResponse {
    repeated VoiceMail voicemails = 1;
    repeated tkd.customer.v1.Customer customers = 2;
}

message MarkVoiceMailsRequest {
    repeated string voicemail_ids = 1 [
        (buf.validate.field).required = true
    ];

    bool seen = 2;
}

message MarkVoiceMailsResponse {}


message GetVoiceMailRequest {
    string id = 1 [
        (buf.validate.field).required = true
    ];

    tkd.common.v1.View view = 2;
}

message GetVoiceMailResponse {
    VoiceMail voicemail = 1;
}