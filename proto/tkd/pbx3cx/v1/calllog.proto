syntax = "proto3";

package tkd.pbx3cx.v1;

import "google/protobuf/descriptor.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/field_mask.proto";
import "tkd/common/v1/descriptor.proto";
import "tkd/common/v1/time_range.proto";
import "tkd/customer/v1/customer.proto";
import "tkd/idm/v1/user.proto";
import "google/protobuf/empty.proto";
import "buf/validate/validate.proto";

enum CallDirection {
    CALL_DIRECTION_UNSPECIFIED = 0;
    CALL_DIRECTION_INBOUND = 1;
    CALL_DIRECTION_OUTBOUND = 2;
}

enum CallStatus {
    CALL_STATUS_UNSPECIFIED = 0;
    CALL_STATUS_INBOUND = 1;
    CALL_STATUS_OUTBOUND = 2;
    CALL_STATUS_MISSED = 3;
    CALL_STATUS_NOTANSWERED = 4;
}

enum ParticipantType {
    PARTICIPANT_TYPE_UNSPECIFIED = 0;
    PARTICIPANT_TYPE_EXTENSION = 1;
    PARTICIPANT_TYPE_EXTERNAL_LINE = 2;
    PARTICIPANT_TYPE_QUEUE = 3;
    PARTICIPANT_TYPE_SCRIPT = 4;
    PARTICIPANT_TYPE_OUTBOUND_RULE = 5;
    PARTICIPANT_TYPE_IVR = 6;
}

message CallEntry {
    string id = 1;
    string caller = 2;
    string inbound_number = 3;
    google.protobuf.Timestamp received_at = 4;
    google.protobuf.Duration duration = 5;
    string call_type = 6;
    string agent_user_id = 7;
    string customer_id = 8;

    // CustomerSource is unused.
    // Deprecated: CustomerSource is not used anymore.
    string customer_source = 9;

    bool error = 10;
    string transfer_target = 11;
    string accepted_agent = 12;
    CallDirection direction = 13;
    string queue_extension = 14;
    CallStatus status = 15;

    ParticipantType agent_type = 16;
    ParticipantType caller_type = 17;
    repeated string call_chain = 18;
}

message OnCall {
    tkd.idm.v1.Profile profile = 1;
    string transfer_target = 2;
    google.protobuf.Timestamp until = 3;
}

message CustomOverwrite {
    string transfer_target = 1;
    string display_name = 2;
}

message Overwrite {
    string id = 1;
    google.protobuf.Timestamp from = 2;
    google.protobuf.Timestamp to = 3;

    oneof target {
        CustomOverwrite custom = 4;
        string user_id = 5;
    }

    google.protobuf.Timestamp created_at = 6;
    string created_by_user_id = 7;

    InboundNumber inbound_number = 8;
}

message InboundNumber {
    // Number is the inbound number.
    string number = 1;

    // DisplayName is an optional display-name or description for
    // the inbound number.
    string display_name = 2;

    // RosterShiftTags is a list of roster shift tags that should
    // be queried when resolving the employees that are currently on-duty.
    repeated string roster_shift_tags = 3;

    // An optional roster type name to query when resolving the employees
    // that are currently on duty.
    // If unset, CallService will use the default RosterTypeName from it's
    // configuration.
    string roster_type_name = 4;

    // ResultLimit may be set to a value greater than zero to limit the number
    // of on-call users returned.
    int32 result_limit = 5;
}

message PhoneExtension {
    // Extension is the phone extension.
    string extension = 1 [
        (buf.validate.field).required = true
    ];

    // EligibleForOverwrite might be set to true if this phone extension
    // is eligible for using in an on-call overwrite.
    bool eligible_for_overwrite = 2;

    // DisplayName is a human readable name for displaying in a user interface.
    string display_name = 3;

    // InternalQueue can be set to true to mark this phone extension as an internal
    // queue.
    // That is, calls that are end on an internal queue are actually lost since no
    // queue agent accepted the call.
    bool internal_queue = 4;
}

service CallService {
    option (tkd.common.v1.service_auth) = {
        admin_roles: ["idm_superuser"]
    };

    option (tkd.common.v1.default_host) = "3cx.dobersberg.vet";

    // Recording APIS 
    rpc RecordCall(RecordCallRequest) returns (google.protobuf.Empty) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    // On-Duty/Call APIs
    rpc GetOnCall(GetOnCallRequest) returns (GetOnCallResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };

        option idempotency_level = NO_SIDE_EFFECTS;
    }

    rpc CreateInboundNumber(CreateInboundNumberRequest) returns (CreateInboundNumberResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_ADMIN
        };
    }

    rpc UpdateInboundNumber(UpdateInboundNumberRequest) returns (UpdateInboundNumberResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_ADMIN
        };
    }

    rpc DeleteInboundNumber(DeleteInboundNumberRequest) returns (DeleteInboundNumberResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_ADMIN
        };
    }

    rpc ListInboundNumber(ListInboundNumberRequest) returns (ListInboundNumberResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    // PhoneExtension management

    rpc RegisterPhoneExtension(RegisterPhoneExtensionRequest) returns (PhoneExtension) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_ADMIN
        };
    }

    rpc UpdatePhoneExtension(UpdatePhoneExtensionRequest) returns (PhoneExtension) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_ADMIN
        };
    }

    rpc DeletePhoneExtension(DeletePhoneExtensionRequest) returns (google.protobuf.Empty) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_ADMIN
        };
    }

    rpc ListPhoneExtensions(ListPhoneExtensionsRequest) returns (ListPhoneExtensionsResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    // Overwrite APIS
    rpc CreateOverwrite(CreateOverwriteRequest) returns (CreateOverwriteResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    rpc DeleteOverwrite(DeleteOverwriteRequest) returns (DeleteOverwriteResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    rpc GetOverwrite(GetOverwriteRequest) returns (GetOverwriteResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    // Calllog APIs
    rpc GetLogsForDate(GetLogsForDateRequest) returns (GetLogsForDateResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    rpc SearchCallLogs(SearchCallLogsRequest) returns (SearchCallLogsResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    rpc GetLogsForCustomer(GetLogsForCustomerRequest) returns(GetLogsForCustomerResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }
}

message RecordCallRequest {
    string duration = 1;
    string number = 2;
    string agent = 3;
    string call_type = 4;
    string date_time = 5;
    string customer_id = 6;
    string queue_extension = 8;
    string direction = 9;
    
    // CustomerSource used to hold the source of the customer.
    // Deprecated: this field is only set for old records
    string customer_source = 7;
}

message GetLogsForCustomerRequest {
    // Deprecated
    string source = 1;
    string id = 2 [(buf.validate.field).required = true];
}

message GetLogsForCustomerResponse {
    repeated CallEntry results = 1;
}

message GetLogsForDateRequest {
    string date = 1 [(buf.validate.field).required = true]; // YYYY-MM-DD
}

message GetLogsForDateResponse {
    repeated CallEntry results = 1;
}

message SearchCallLogsRequest {
    string date = 1; // YYYY-MM-DD
    tkd.common.v1.TimeRange time_range = 2;
    tkd.customer.v1.CustomerRef customer_ref = 3;
}

message SearchCallLogsResponse {
    repeated CallEntry results = 1;
    repeated tkd.customer.v1.Customer customers = 2;
}

message GetOnCallRequest {
    string date = 1; // YYYY-MM-DD
    bool ignore_overwrites = 2;
    string inbound_number = 3;
}

message GetOnCallResponse {
    repeated OnCall on_call = 1;
    string roster_date = 2; // YYYY-MM-DD
    bool is_overwrite = 3;
    string primary_transfer_target = 4;
}

message CreateOverwriteRequest {
    oneof transfer_target {
        CustomOverwrite custom = 1;
        string user_id = 2;

        option (buf.validate.oneof).required = true;
    }

    google.protobuf.Timestamp from = 3 [
        (buf.validate.field).required = true
    ];

    google.protobuf.Timestamp to = 4 [
        (buf.validate.field).required = true
    ];

    string inbound_number = 5;
}

message CreateOverwriteResponse {
    Overwrite overwrite = 1;
}

message DeleteOverwriteRequest {
    oneof selector {
        string overwrite_id = 1;
        google.protobuf.Timestamp  active_at = 2;

        option (buf.validate.oneof).required = true;
    }

    InboundNumberList inbound_numbers = 3;
}
message DeleteOverwriteResponse {}

message GetOverwriteRequest {
    oneof selector {
        string overwrite_id = 1;
        google.protobuf.Timestamp  active_at = 2;
        tkd.common.v1.TimeRange time_range = 3;

        option (buf.validate.oneof).required = true;
    }

    InboundNumberList inbound_numbers = 4;
}

message InboundNumberList {
    repeated string numbers = 1;
}

message GetOverwriteResponse {
    repeated Overwrite overwrites = 1;
}

message CreateInboundNumberRequest {
    string number = 1 [
        (buf.validate.field).required = true
    ];

    string display_name = 2;

    // RosterShiftTags is a list of roster shift tags that should
    // be queried when resolving the employees that are currently on-duty.
    repeated string roster_shift_tags = 3;

    // An optional roster type name to query when resolving the employees
    // that are currently on duty.
    // If unset, CallService will use the default RosterTypeName from it's
    // configuration.
    string roster_type_name = 4;

    // ResultLimit may be set to a value greater than zero to limit the number
    // of on-call users returned.
    int32 result_limit = 5;
}

message CreateInboundNumberResponse {
    InboundNumber inbound_number = 1;
}

message DeleteInboundNumberRequest {
    string number = 1 [
        (buf.validate.field).required = true
    ];
}

message DeleteInboundNumberResponse {}

message ListInboundNumberRequest {}

message ListInboundNumberResponse {
    repeated InboundNumber inbound_numbers = 1;
}


message UpdateInboundNumberRequest {
    // Number is the number to update.
    string number = 1 [
        (buf.validate.field).required = true
    ];

    // NewDisplayName is the new display name for the number.
    string new_display_name = 2;

    // RosterShiftTags is a list of roster shift tags that should
    // be queried when resolving the employees that are currently on-duty.
    repeated string roster_shift_tags = 3;

    // An optional roster type name to query when resolving the employees
    // that are currently on duty.
    // If unset, CallService will use the default RosterTypeName from it's
    // configuration.
    string roster_type_name = 4;

    // UpdateMask specifies which fields of the InboundNumber should be updated.
    google.protobuf.FieldMask update_mask = 10;
}

message UpdateInboundNumberResponse {
    InboundNumber inbound_number = 1;
}

message RegisterPhoneExtensionRequest {
    PhoneExtension phone_extension = 1[
        (buf.validate.field).required = true
    ];
}

message UpdatePhoneExtensionRequest {
    string extension = 1 [
        (buf.validate.field).required = true
    ];


    PhoneExtension phone_extension = 2 [
        (buf.validate.field).required = true
    ];

    google.protobuf.FieldMask update_mask = 3;
}

message DeletePhoneExtensionRequest {
    string extension = 1 [
        (buf.validate.field).required = true
    ];
}

message ListPhoneExtensionsRequest {}
message ListPhoneExtensionsResponse {
    repeated PhoneExtension phone_extensions = 1;
}