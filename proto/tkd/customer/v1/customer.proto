syntax = "proto3";

package tkd.customer.v1;

import "tkd/common/v1/descriptor.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "buf/validate/validate.proto";

message CustomerRef {
    string source = 1;
    string id = 2;
}

message OwnedAttribute {
    oneof kind {
        string first_name = 1;
        string last_name = 2;
        string phone_number = 3;
        string email_address = 4;
        Address address = 5;

        option (buf.validate.oneof).required = true;
    }
}

message ImportState {
    // Importer is a unique name of the importer that created or updated the
    // customer or patient record.
    string importer = 1;

    // LastSeen holds the timestamp the importer has seen the customer record the
    // last time.
    google.protobuf.Timestamp last_seen = 2;

    // ExtraData may hold additional data for the importer.
    google.protobuf.Struct extra_data = 3;

    // InternalReference may hold an internal customer reference from
    // the importer.
    string internal_reference = 4;

    repeated OwnedAttribute owned_attributes = 5;
}

message Address {
    string postal_code = 1 [
        (buf.validate.field).required = true
    ];

    string city = 2 [
        (buf.validate.field).required = true
    ];

    string street = 3;
    string extra = 4;
}

message Customer {
    // ID is a unique, randomly generated ID for this customer.
    string id = 1;

    // FirstName is the first name of the customer.
    string first_name = 2;

    // LastName is the last name of the customer
    string last_name = 3;

    // Addresses is a list of addresses.
    repeated Address addresses = 4;

    // PhoneNumbers is a list of phone numbers
    repeated string phone_numbers = 5;

    // EmailAddresses is a list of email addresses.
    repeated string email_addresses = 6;

    // RecordCreatedAt is the timestamp at which the customer record has been created.
    google.protobuf.Timestamp record_created_at = 7;
}

service CustomerService {
    option (tkd.common.v1.service_auth) = {
        admin_roles: ["idm_superuser", "customer_manager"]
    };

    rpc SearchCustomer(SearchCustomerRequest) returns (SearchCustomerResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    rpc SearchCustomerStream(stream SearchCustomerRequest) returns (stream SearchCustomerResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }

    rpc UpdateCustomer(UpdateCustomerRequest) returns (UpdateCustomerResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED,
        };
    }
}

message CustomerResponse {
    Customer customer = 1;
    repeated ImportState states = 2;
}

message InternalReferenceQuery {
    string importer = 1;
    string ref = 2;
}

message NameQuery {
    string first_name = 1;
    string last_name = 2;
}

message CustomerQuery {
    oneof query {
        string id = 1;
        InternalReferenceQuery internal_reference = 2; 
        NameQuery name = 3;
        string phone_number = 4;
        string email_address = 5;
    }
}

message SearchCustomerRequest {
    repeated CustomerQuery queries = 1;

    // Only used in SearchCustomerStream
    string correlation_id = 99;
}

message SearchCustomerResponse {
    repeated CustomerResponse results = 1;

    // Only used in SearchCustomerStream
    string correlation_id = 99;
}

message UpdateCustomerRequest {
    Customer customer = 1 [
        (buf.validate.field).required = true
    ];
}

message UpdateCustomerResponse {
    CustomerResponse response = 1;
}