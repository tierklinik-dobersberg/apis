syntax = "proto3";

package tkd.tasks.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "buf/validate/validate.proto";
import "tkd/common/v1/descriptor.proto";
import "tkd/common/v1/daytime.proto";

message ListBoard {}

message BoardPermission {
    repeated string allow_roles = 1;
    repeated string allow_users = 2;
    repeated string deny_roles = 3;
    repeated string deny_users = 4;
}

enum NotificationType {
    NOTIFICATION_TYPE_UNSPECIFIED = 0;
    NOTIFICATION_TYPE_SMS = 1;
    NOTIFICATION_TYPE_MAIL = 2;
    NOTIFICATION_TYPE_WEBPUSH = 3;
}

enum EventType {
    // UNSPECIFIED is equal to ALL
    EVENT_TYPE_UNSPECIFIED = 0;

    EVENT_TYPE_CREATED = 1;
    EVENT_TYPE_UPDATED = 2;
    EVENT_TYPE_CHANGED = 3;
    EVENT_TYPE_COMPLETED = 4;
    EVENT_TYPE_ASSIGNEE_CHANGED = 5;
}

message BoardNotification {
    string name = 1 [
        (buf.validate.field).required = true
    ];
    string subject_template = 2;
    string message_template = 3 [
        (buf.validate.field).required = true
    ];
    repeated string recipient_user_ids = 4;
    repeated string recipient_role_ids = 5;

    NotificationType notification_type = 6;

    repeated tkd.common.v1.DayTime send_times = 7 [
        (buf.validate.field).required = true
    ];

    repeated EventType event_types = 8 [
        (buf.validate.field).required = true
    ];
}

message TaskStatus {
    string status = 1 [
        (buf.validate.field).required = true
    ];

    string description = 2;

    string color = 3;
}

message TaskTag {
    string tag = 1 [
        (buf.validate.field).required = true
    ];

    string description = 2;

    string color = 3;
}

message Board {
    string id = 1;
    string display_name = 2;
    string description = 3;

    oneof kind {
        ListBoard list = 4;
    }

    repeated TaskStatus allowed_task_status = 5;
    repeated TaskTag allowed_task_tags = 6;

    BoardPermission read_permission = 10;
    BoardPermission write_permission = 11;
    repeated BoardNotification notifications = 12;
    string owner_id = 13;

    repeated string eligible_role_ids = 14;
    repeated string eligible_user_ids = 15;
}

// BoardService allows for managing task boards.
service BoardService {
    rpc CreateBoard(CreateBoardRequest) returns (CreateBoardResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }

    rpc UpdateBoard(UpdateBoardRequest) returns (UpdateBoardResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }

    rpc ListBoards(ListBoardsRequest) returns (ListBoardsResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }

    rpc DeleteBoard(DeleteBoardRequest) returns (google.protobuf.Empty) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }

    rpc GetBoard(GetBoardRequest) returns (GetBoardResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }

    rpc SaveNotification(SaveNotificationRequest) returns (SaveNotificationResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }

    rpc DeleteNotification(DeleteNotificationRequest) returns (DeleteNotificationResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }

    rpc AddTaskStatus(AddTaskStatusRequest) returns (AddTaskStatusResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }

    rpc DeleteTaskStatus(DeleteTaskStatusRequest) returns (DeleteTaskStatusResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }

    rpc AddTaskTag(AddTaskTagRequest) returns (AddTaskTagResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }

    rpc DeleteTaskTag(DeleteTaskTagRequest) returns (DeleteTaskTagResponse) {
        option (tkd.common.v1.auth) = {
            require: AUTH_REQ_REQUIRED
        };
    }
}

message CreateBoardRequest {
    string display_name = 1 [
        (buf.validate.field).required = true
    ];

    string description = 2;

    oneof kind {
        ListBoard list = 3;

        option (buf.validate.oneof).required = true;
    }

    repeated TaskStatus allowed_task_status = 4;
    repeated TaskTag allowed_task_tags = 5;

    BoardPermission read_permission = 10;
    BoardPermission write_permission = 11;
    repeated BoardNotification notifications = 12;
    repeated string eligible_role_ids = 13;
    repeated string eligible_user_ids = 14;
}

message CreateBoardResponse {
    Board board = 1;
}


message UpdateBoardRequest {
    string board_id = 1 [
        (buf.validate.field).required = true
    ];

    string display_name = 2;

    string description = 3;

    oneof kind {
        ListBoard list = 4;

        option (buf.validate.oneof).required = true;
    }

    repeated TaskStatus allowed_task_status = 5;
    repeated TaskTag allowed_task_tags = 6;

    BoardPermission read_permission = 10;

    BoardPermission write_permission = 11;

    repeated BoardNotification notifications = 12;

    repeated string eligible_role_ids = 13;

    repeated string eligible_user_ids = 14;

    google.protobuf.FieldMask update_mask = 99;
}

message UpdateBoardResponse {
    Board board = 1;
}

message DeleteBoardRequest {
    string id = 1 [
        (buf.validate.field).required = true
    ];
}

message ListBoardsRequest {

}
message ListBoardsResponse {
    repeated Board boards = 1;
}

message GetBoardRequest {
    string id = 1 [
        (buf.validate.field).required = true
    ];
}

message GetBoardResponse {
    Board board = 1;
}

message SaveNotificationRequest {
    string board_id = 1 [
        (buf.validate.field).required = true
    ];

    BoardNotification notification = 2;
}

message SaveNotificationResponse {
    Board board = 1;
}

message DeleteNotificationRequest {
    string board_id = 1 [
        (buf.validate.field).required = true
    ];

    string notification_name = 2 [
        (buf.validate.field).required = true
    ];
}

message DeleteNotificationResponse {
    Board board = 1;
}

message AddTaskStatusRequest {
    string board_id = 1 [
        (buf.validate.field).required = true
    ];

    TaskStatus status = 2 [
        (buf.validate.field).required = true
    ];
}

message AddTaskStatusResponse {
    Board board = 1;
}

message DeleteTaskStatusRequest {
    string board_id = 1 [
        (buf.validate.field).required = true
    ];

    string status = 2 [
        (buf.validate.field).required = true
    ];
}

message DeleteTaskStatusResponse {
    Board board = 1;
}

message AddTaskTagRequest {
    string board_id = 1 [
        (buf.validate.field).required = true
    ];

    TaskTag tag = 2 [
        (buf.validate.field).required = true
    ];
}

message AddTaskTagResponse {
    Board board = 1;
}

message DeleteTaskTagRequest {
    string board_id = 1 [
        (buf.validate.field).required = true
    ];

    string tag = 2 [
        (buf.validate.field).required = true
    ];
}

message DeleteTaskTagResponse {
    Board board = 1;
}
