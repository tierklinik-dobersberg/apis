// @generated by protoc-gen-es v1.3.3 with parameter "target=js+dts"
// @generated from file tkd/common/v1/descriptor.proto (package tkd.common.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum tkd.common.v1.AuthRequirement
 */
export const AuthRequirement = proto3.makeEnum(
  "tkd.common.v1.AuthRequirement",
  [
    {no: 0, name: "AUTH_REQ_UNSPECIFIED"},
    {no: 1, name: "AUTH_REQ_REQUIRED"},
  ],
);

/**
 * @generated from message tkd.common.v1.AuthDecorator
 */
export const AuthDecorator = proto3.makeMessageType(
  "tkd.common.v1.AuthDecorator",
  () => [
    { no: 1, name: "require", kind: "enum", T: proto3.getEnumType(AuthRequirement) },
    { no: 2, name: "allowed_roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message tkd.common.v1.PrivacyACL
 */
export const PrivacyACL = proto3.makeMessageType(
  "tkd.common.v1.PrivacyACL",
  () => [
    { no: 1, name: "field_mask", kind: "message", T: FieldMask },
    { no: 2, name: "owner_field_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "allowed_roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

