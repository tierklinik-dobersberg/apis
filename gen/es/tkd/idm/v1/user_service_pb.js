// @generated by protoc-gen-es v1.2.1 with parameter "target=js+dts"
// @generated from file tkd/idm/v1/user_service.proto (package tkd.idm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3 } from "@bufbuild/protobuf";
import { Profile } from "./user_pb.js";

/**
 * @generated from message tkd.idm.v1.GetUserRequest
 */
export const GetUserRequest = proto3.makeMessageType(
  "tkd.idm.v1.GetUserRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message tkd.idm.v1.GetUserResponse
 */
export const GetUserResponse = proto3.makeMessageType(
  "tkd.idm.v1.GetUserResponse",
  () => [
    { no: 1, name: "profile", kind: "message", T: Profile },
  ],
);

/**
 * @generated from message tkd.idm.v1.ListUsersRequest
 */
export const ListUsersRequest = proto3.makeMessageType(
  "tkd.idm.v1.ListUsersRequest",
  () => [
    { no: 1, name: "field_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * @generated from message tkd.idm.v1.ListUsersResponse
 */
export const ListUsersResponse = proto3.makeMessageType(
  "tkd.idm.v1.ListUsersResponse",
  () => [
    { no: 1, name: "users", kind: "message", T: Profile, repeated: true },
  ],
);

/**
 * @generated from message tkd.idm.v1.CreateUserRequest
 */
export const CreateUserRequest = proto3.makeMessageType(
  "tkd.idm.v1.CreateUserRequest",
  () => [
    { no: 1, name: "profile", kind: "message", T: Profile },
    { no: 2, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "password_is_bcrypt", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message tkd.idm.v1.CreateUserResponse
 */
export const CreateUserResponse = proto3.makeMessageType(
  "tkd.idm.v1.CreateUserResponse",
  () => [
    { no: 1, name: "profile", kind: "message", T: Profile },
    { no: 2, name: "generated_password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message tkd.idm.v1.UpdateUserRequest
 */
export const UpdateUserRequest = proto3.makeMessageType(
  "tkd.idm.v1.UpdateUserRequest",
  [],
);

/**
 * @generated from message tkd.idm.v1.UpdateUserResponse
 */
export const UpdateUserResponse = proto3.makeMessageType(
  "tkd.idm.v1.UpdateUserResponse",
  [],
);

/**
 * @generated from message tkd.idm.v1.DeleteUserRequest
 */
export const DeleteUserRequest = proto3.makeMessageType(
  "tkd.idm.v1.DeleteUserRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message tkd.idm.v1.DeleteUserResponse
 */
export const DeleteUserResponse = proto3.makeMessageType(
  "tkd.idm.v1.DeleteUserResponse",
  [],
);

/**
 * @generated from message tkd.idm.v1.UserInvite
 */
export const UserInvite = proto3.makeMessageType(
  "tkd.idm.v1.UserInvite",
  () => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message tkd.idm.v1.InviteUserRequest
 */
export const InviteUserRequest = proto3.makeMessageType(
  "tkd.idm.v1.InviteUserRequest",
  () => [
    { no: 1, name: "invite", kind: "message", T: UserInvite, repeated: true },
    { no: 2, name: "initial_roles", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message tkd.idm.v1.InviteUserResponse
 */
export const InviteUserResponse = proto3.makeMessageType(
  "tkd.idm.v1.InviteUserResponse",
  [],
);

