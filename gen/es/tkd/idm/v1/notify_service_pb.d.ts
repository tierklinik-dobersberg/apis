// @generated by protoc-gen-es v1.6.0 with parameter "target=js+dts"
// @generated from file tkd/idm/v1/notify_service.proto (package tkd.idm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, Duration, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum tkd.idm.v1.AttachmentType
 */
export declare enum AttachmentType {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: INLINE = 1;
   */
  INLINE = 1,

  /**
   * @generated from enum value: ATTACHEMNT = 2;
   */
  ATTACHEMNT = 2,

  /**
   * @generated from enum value: ALTERNATIVE_BODY = 3;
   */
  ALTERNATIVE_BODY = 3,
}

/**
 * @generated from enum tkd.idm.v1.Operation
 */
export declare enum Operation {
  /**
   * @generated from enum value: OPERATION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: OPERATION_OPEN_WINDOW = 1;
   */
  OPEN_WINDOW = 1,

  /**
   * @generated from enum value: OPERATION_FOCUS_LAST_FOCUSED_OR_OPEN = 2;
   */
  FOCUS_LAST_FOCUSED_OR_OPEN = 2,

  /**
   * @generated from enum value: OPERATION_NAVIGATE_LAST_FOCUSED_OR_OPEN = 3;
   */
  NAVIGATE_LAST_FOCUSED_OR_OPEN = 3,

  /**
   * @generated from enum value: OPERATION_SEND_REQUEST = 4;
   */
  SEND_REQUEST = 4,
}

/**
 * @generated from enum tkd.idm.v1.ErrorKind
 */
export declare enum ErrorKind {
  /**
   * @generated from enum value: ERROR_KIND_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ERROR_KIND_NO_PRIMARY_MAIL = 1;
   */
  NO_PRIMARY_MAIL = 1,

  /**
   * @generated from enum value: ERROR_KIND_NO_PRIMARY_PHONE = 2;
   */
  NO_PRIMARY_PHONE = 2,

  /**
   * @generated from enum value: ERROR_KIND_NO_WEBPUSH_SUBSCRIPTION = 3;
   */
  NO_WEBPUSH_SUBSCRIPTION = 3,

  /**
   * @generated from enum value: ERROR_KIND_TRANSPORT = 4;
   */
  TRANSPORT = 4,

  /**
   * @generated from enum value: ERROR_KIND_TEMPLATE = 5;
   */
  TEMPLATE = 5,

  /**
   * @generated from enum value: ERROR_KIND_OTHER = 255;
   */
  OTHER = 255,
}

/**
 * @generated from message tkd.idm.v1.Attachment
 */
export declare class Attachment extends Message<Attachment> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string media_type = 2;
   */
  mediaType: string;

  /**
   * @generated from field: bytes content = 3;
   */
  content: Uint8Array;

  /**
   * @generated from field: string content_id = 4;
   */
  contentId: string;

  /**
   * @generated from field: tkd.idm.v1.AttachmentType attachment_type = 5;
   */
  attachmentType: AttachmentType;

  /**
   * A list of user IDs this attachment is for.
   * if left empty, the attachment will be sent to
   * all users.
   *
   * @generated from field: repeated string for_user = 6;
   */
  forUser: string[];

  constructor(data?: PartialMessage<Attachment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.Attachment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Attachment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Attachment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Attachment;

  static equals(a: Attachment | PlainMessage<Attachment> | undefined, b: Attachment | PlainMessage<Attachment> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.EMailMessage
 */
export declare class EMailMessage extends Message<EMailMessage> {
  /**
   * @generated from field: string subject = 1;
   */
  subject: string;

  /**
   * @generated from field: string body = 2;
   */
  body: string;

  /**
   * @generated from field: repeated tkd.idm.v1.Attachment attachments = 3;
   */
  attachments: Attachment[];

  constructor(data?: PartialMessage<EMailMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.EMailMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EMailMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EMailMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EMailMessage;

  static equals(a: EMailMessage | PlainMessage<EMailMessage> | undefined, b: EMailMessage | PlainMessage<EMailMessage> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.SMS
 */
export declare class SMS extends Message<SMS> {
  /**
   * @generated from field: string body = 1;
   */
  body: string;

  constructor(data?: PartialMessage<SMS>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.SMS";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SMS;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SMS;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SMS;

  static equals(a: SMS | PlainMessage<SMS> | undefined, b: SMS | PlainMessage<SMS> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.NotificationAction
 */
export declare class NotificationAction extends Message<NotificationAction> {
  /**
   * @generated from field: string action = 1;
   */
  action: string;

  /**
   * @generated from field: string title = 2;
   */
  title: string;

  /**
   * @generated from field: tkd.idm.v1.Operation operation = 3;
   */
  operation: Operation;

  /**
   * @generated from field: string url = 4;
   */
  url: string;

  constructor(data?: PartialMessage<NotificationAction>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.NotificationAction";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotificationAction;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotificationAction;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotificationAction;

  static equals(a: NotificationAction | PlainMessage<NotificationAction> | undefined, b: NotificationAction | PlainMessage<NotificationAction> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.ServiceWorkerNotification
 */
export declare class ServiceWorkerNotification extends Message<ServiceWorkerNotification> {
  /**
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * @generated from field: string body = 2;
   */
  body: string;

  /**
   * @generated from field: tkd.idm.v1.Operation default_operation = 3;
   */
  defaultOperation: Operation;

  /**
   * @generated from field: string default_operation_url = 4;
   */
  defaultOperationUrl: string;

  /**
   * @generated from field: repeated tkd.idm.v1.NotificationAction actions = 5;
   */
  actions: NotificationAction[];

  /**
   * @generated from field: google.protobuf.Struct data = 6;
   */
  data?: Struct;

  constructor(data?: PartialMessage<ServiceWorkerNotification>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.ServiceWorkerNotification";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceWorkerNotification;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceWorkerNotification;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceWorkerNotification;

  static equals(a: ServiceWorkerNotification | PlainMessage<ServiceWorkerNotification> | undefined, b: ServiceWorkerNotification | PlainMessage<ServiceWorkerNotification> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.WebPushNotification
 */
export declare class WebPushNotification extends Message<WebPushNotification> {
  /**
   * @generated from oneof tkd.idm.v1.WebPushNotification.kind
   */
  kind: {
    /**
     * @generated from field: bytes binary = 1;
     */
    value: Uint8Array;
    case: "binary";
  } | {
    /**
     * @generated from field: tkd.idm.v1.ServiceWorkerNotification notification = 2;
     */
    value: ServiceWorkerNotification;
    case: "notification";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<WebPushNotification>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.WebPushNotification";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebPushNotification;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebPushNotification;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebPushNotification;

  static equals(a: WebPushNotification | PlainMessage<WebPushNotification> | undefined, b: WebPushNotification | PlainMessage<WebPushNotification> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.SendNotificationRequest
 */
export declare class SendNotificationRequest extends Message<SendNotificationRequest> {
  /**
   * @generated from oneof tkd.idm.v1.SendNotificationRequest.message
   */
  message: {
    /**
     * @generated from field: tkd.idm.v1.SMS sms = 1;
     */
    value: SMS;
    case: "sms";
  } | {
    /**
     * @generated from field: tkd.idm.v1.EMailMessage email = 2;
     */
    value: EMailMessage;
    case: "email";
  } | {
    /**
     * @generated from field: tkd.idm.v1.WebPushNotification webpush = 7;
     */
    value: WebPushNotification;
    case: "webpush";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: repeated string target_users = 3;
   */
  targetUsers: string[];

  /**
   * @generated from field: repeated string target_roles = 4;
   */
  targetRoles: string[];

  /**
   * @generated from field: map<string, google.protobuf.Struct> per_user_template_context = 5;
   */
  perUserTemplateContext: { [key: string]: Struct };

  /**
   * @generated from field: string sender_user_id = 6;
   */
  senderUserId: string;

  constructor(data?: PartialMessage<SendNotificationRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.SendNotificationRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendNotificationRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendNotificationRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendNotificationRequest;

  static equals(a: SendNotificationRequest | PlainMessage<SendNotificationRequest> | undefined, b: SendNotificationRequest | PlainMessage<SendNotificationRequest> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.DeliveryNotification
 */
export declare class DeliveryNotification extends Message<DeliveryNotification> {
  /**
   * @generated from field: string target_user = 1;
   */
  targetUser: string;

  /**
   * @generated from field: string error = 2;
   */
  error: string;

  /**
   * @generated from field: tkd.idm.v1.ErrorKind error_kind = 3;
   */
  errorKind: ErrorKind;

  constructor(data?: PartialMessage<DeliveryNotification>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.DeliveryNotification";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeliveryNotification;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeliveryNotification;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeliveryNotification;

  static equals(a: DeliveryNotification | PlainMessage<DeliveryNotification> | undefined, b: DeliveryNotification | PlainMessage<DeliveryNotification> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.SendNotificationResponse
 */
export declare class SendNotificationResponse extends Message<SendNotificationResponse> {
  /**
   * @generated from field: repeated tkd.idm.v1.DeliveryNotification deliveries = 1;
   */
  deliveries: DeliveryNotification[];

  constructor(data?: PartialMessage<SendNotificationResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.SendNotificationResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendNotificationResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendNotificationResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendNotificationResponse;

  static equals(a: SendNotificationResponse | PlainMessage<SendNotificationResponse> | undefined, b: SendNotificationResponse | PlainMessage<SendNotificationResponse> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.GetVAPIDPublicKeyRequest
 */
export declare class GetVAPIDPublicKeyRequest extends Message<GetVAPIDPublicKeyRequest> {
  constructor(data?: PartialMessage<GetVAPIDPublicKeyRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.GetVAPIDPublicKeyRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVAPIDPublicKeyRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVAPIDPublicKeyRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVAPIDPublicKeyRequest;

  static equals(a: GetVAPIDPublicKeyRequest | PlainMessage<GetVAPIDPublicKeyRequest> | undefined, b: GetVAPIDPublicKeyRequest | PlainMessage<GetVAPIDPublicKeyRequest> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.GetVAPIDPublicKeyResponse
 */
export declare class GetVAPIDPublicKeyResponse extends Message<GetVAPIDPublicKeyResponse> {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  constructor(data?: PartialMessage<GetVAPIDPublicKeyResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.GetVAPIDPublicKeyResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVAPIDPublicKeyResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVAPIDPublicKeyResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVAPIDPublicKeyResponse;

  static equals(a: GetVAPIDPublicKeyResponse | PlainMessage<GetVAPIDPublicKeyResponse> | undefined, b: GetVAPIDPublicKeyResponse | PlainMessage<GetVAPIDPublicKeyResponse> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.WebPushSubscription
 */
export declare class WebPushSubscription extends Message<WebPushSubscription> {
  /**
   * @generated from field: string endpoint = 1;
   */
  endpoint: string;

  /**
   * @generated from field: google.protobuf.Duration expiration_type = 2;
   */
  expirationType?: Duration;

  /**
   * @generated from field: tkd.idm.v1.WebPushKeys keys = 3;
   */
  keys?: WebPushKeys;

  constructor(data?: PartialMessage<WebPushSubscription>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.WebPushSubscription";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebPushSubscription;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebPushSubscription;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebPushSubscription;

  static equals(a: WebPushSubscription | PlainMessage<WebPushSubscription> | undefined, b: WebPushSubscription | PlainMessage<WebPushSubscription> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.WebPushKeys
 */
export declare class WebPushKeys extends Message<WebPushKeys> {
  /**
   * @generated from field: string auth = 1;
   */
  auth: string;

  /**
   * @generated from field: string p256dh = 2;
   */
  p256dh: string;

  constructor(data?: PartialMessage<WebPushKeys>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.WebPushKeys";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WebPushKeys;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WebPushKeys;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WebPushKeys;

  static equals(a: WebPushKeys | PlainMessage<WebPushKeys> | undefined, b: WebPushKeys | PlainMessage<WebPushKeys> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.AddWebPushSubscriptionRequest
 */
export declare class AddWebPushSubscriptionRequest extends Message<AddWebPushSubscriptionRequest> {
  /**
   * @generated from field: tkd.idm.v1.WebPushSubscription subscription = 1;
   */
  subscription?: WebPushSubscription;

  constructor(data?: PartialMessage<AddWebPushSubscriptionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.AddWebPushSubscriptionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddWebPushSubscriptionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddWebPushSubscriptionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddWebPushSubscriptionRequest;

  static equals(a: AddWebPushSubscriptionRequest | PlainMessage<AddWebPushSubscriptionRequest> | undefined, b: AddWebPushSubscriptionRequest | PlainMessage<AddWebPushSubscriptionRequest> | undefined): boolean;
}

/**
 * @generated from message tkd.idm.v1.AddWebPushSubscriptionResponse
 */
export declare class AddWebPushSubscriptionResponse extends Message<AddWebPushSubscriptionResponse> {
  constructor(data?: PartialMessage<AddWebPushSubscriptionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.idm.v1.AddWebPushSubscriptionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddWebPushSubscriptionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddWebPushSubscriptionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddWebPushSubscriptionResponse;

  static equals(a: AddWebPushSubscriptionResponse | PlainMessage<AddWebPushSubscriptionResponse> | undefined, b: AddWebPushSubscriptionResponse | PlainMessage<AddWebPushSubscriptionResponse> | undefined): boolean;
}

