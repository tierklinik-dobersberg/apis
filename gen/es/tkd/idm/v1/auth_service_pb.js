"use strict";
// @generated by protoc-gen-es v1.2.1 with parameter "target=js+ts"
// @generated from file tkd/idm/v1/auth_service.proto (package tkd.idm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.IntrospectResponse = exports.IntrospectRequest = exports.RefreshTokenResponse = exports.RefreshTokenRequest = exports.LogoutResponse = exports.LogoutRequest = exports.LoginResponse = exports.AccessTokenResponse = exports.LoginRequest = exports.PasswordAuth = exports.AuthType = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
const user_pb_js_1 = require("./user_pb.js");
/**
 * @generated from enum tkd.idm.v1.AuthType
 */
var AuthType;
(function (AuthType) {
    /**
     * @generated from enum value: AUTH_TYPE_UNSPECIFIED = 0;
     */
    AuthType[AuthType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: AUTH_TYPE_PASSWORD = 1;
     */
    AuthType[AuthType["PASSWORD"] = 1] = "PASSWORD";
})(AuthType || (exports.AuthType = AuthType = {}));
// Retrieve enum metadata with: proto3.getEnumType(AuthType)
protobuf_1.proto3.util.setEnumType(AuthType, "tkd.idm.v1.AuthType", [
    { no: 0, name: "AUTH_TYPE_UNSPECIFIED" },
    { no: 1, name: "AUTH_TYPE_PASSWORD" },
]);
/**
 * @generated from message tkd.idm.v1.PasswordAuth
 */
class PasswordAuth extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string username = 1;
         */
        this.username = "";
        /**
         * @generated from field: string password = 2;
         */
        this.password = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PasswordAuth().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PasswordAuth().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PasswordAuth().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(PasswordAuth, a, b);
    }
}
exports.PasswordAuth = PasswordAuth;
PasswordAuth.runtime = protobuf_1.proto3;
PasswordAuth.typeName = "tkd.idm.v1.PasswordAuth";
PasswordAuth.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message tkd.idm.v1.LoginRequest
 */
class LoginRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: tkd.idm.v1.AuthType auth_type = 1;
         */
        this.authType = AuthType.UNSPECIFIED;
        /**
         * @generated from field: bool no_refresh_token = 2;
         */
        this.noRefreshToken = false;
        /**
         * @generated from oneof tkd.idm.v1.LoginRequest.auth
         */
        this.auth = { case: undefined };
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LoginRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LoginRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LoginRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LoginRequest, a, b);
    }
}
exports.LoginRequest = LoginRequest;
LoginRequest.runtime = protobuf_1.proto3;
LoginRequest.typeName = "tkd.idm.v1.LoginRequest";
LoginRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "auth_type", kind: "enum", T: protobuf_1.proto3.getEnumType(AuthType) },
    { no: 2, name: "no_refresh_token", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "password", kind: "message", T: PasswordAuth, oneof: "auth" },
]);
/**
 * @generated from message tkd.idm.v1.AccessTokenResponse
 */
class AccessTokenResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string token = 1;
         */
        this.token = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AccessTokenResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AccessTokenResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AccessTokenResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AccessTokenResponse, a, b);
    }
}
exports.AccessTokenResponse = AccessTokenResponse;
AccessTokenResponse.runtime = protobuf_1.proto3;
AccessTokenResponse.typeName = "tkd.idm.v1.AccessTokenResponse";
AccessTokenResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expires_at", kind: "message", T: protobuf_1.Timestamp },
    { no: 3, name: "user", kind: "message", T: user_pb_js_1.User },
]);
/**
 * @generated from message tkd.idm.v1.LoginResponse
 */
class LoginResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from oneof tkd.idm.v1.LoginResponse.response
         */
        this.response = { case: undefined };
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LoginResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LoginResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LoginResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LoginResponse, a, b);
    }
}
exports.LoginResponse = LoginResponse;
LoginResponse.runtime = protobuf_1.proto3;
LoginResponse.typeName = "tkd.idm.v1.LoginResponse";
LoginResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "access_token", kind: "message", T: AccessTokenResponse, oneof: "response" },
]);
/**
 * empty on purpose
 *
 * @generated from message tkd.idm.v1.LogoutRequest
 */
class LogoutRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LogoutRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LogoutRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LogoutRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LogoutRequest, a, b);
    }
}
exports.LogoutRequest = LogoutRequest;
LogoutRequest.runtime = protobuf_1.proto3;
LogoutRequest.typeName = "tkd.idm.v1.LogoutRequest";
LogoutRequest.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * empty on purpose
 *
 * @generated from message tkd.idm.v1.LogoutResponse
 */
class LogoutResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LogoutResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LogoutResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LogoutResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LogoutResponse, a, b);
    }
}
exports.LogoutResponse = LogoutResponse;
LogoutResponse.runtime = protobuf_1.proto3;
LogoutResponse.typeName = "tkd.idm.v1.LogoutResponse";
LogoutResponse.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message tkd.idm.v1.RefreshTokenRequest
 */
class RefreshTokenRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RefreshTokenRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RefreshTokenRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RefreshTokenRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RefreshTokenRequest, a, b);
    }
}
exports.RefreshTokenRequest = RefreshTokenRequest;
RefreshTokenRequest.runtime = protobuf_1.proto3;
RefreshTokenRequest.typeName = "tkd.idm.v1.RefreshTokenRequest";
RefreshTokenRequest.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message tkd.idm.v1.RefreshTokenResponse
 */
class RefreshTokenResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RefreshTokenResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RefreshTokenResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RefreshTokenResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RefreshTokenResponse, a, b);
    }
}
exports.RefreshTokenResponse = RefreshTokenResponse;
RefreshTokenResponse.runtime = protobuf_1.proto3;
RefreshTokenResponse.typeName = "tkd.idm.v1.RefreshTokenResponse";
RefreshTokenResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "access_token", kind: "message", T: AccessTokenResponse },
]);
/**
 * empty on purpose
 *
 * @generated from message tkd.idm.v1.IntrospectRequest
 */
class IntrospectRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new IntrospectRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new IntrospectRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new IntrospectRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(IntrospectRequest, a, b);
    }
}
exports.IntrospectRequest = IntrospectRequest;
IntrospectRequest.runtime = protobuf_1.proto3;
IntrospectRequest.typeName = "tkd.idm.v1.IntrospectRequest";
IntrospectRequest.fields = protobuf_1.proto3.util.newFieldList(() => []);
/**
 * @generated from message tkd.idm.v1.IntrospectResponse
 */
class IntrospectResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new IntrospectResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new IntrospectResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new IntrospectResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(IntrospectResponse, a, b);
    }
}
exports.IntrospectResponse = IntrospectResponse;
IntrospectResponse.runtime = protobuf_1.proto3;
IntrospectResponse.typeName = "tkd.idm.v1.IntrospectResponse";
IntrospectResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "profile", kind: "message", T: user_pb_js_1.Profile },
]);
