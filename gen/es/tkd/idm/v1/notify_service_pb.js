// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file tkd/idm/v1/notify_service.proto (package tkd.idm.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import { file_tkd_common_v1_descriptor } from "../../common/v1/descriptor_pb";
import { file_google_protobuf_duration, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file tkd/idm/v1/notify_service.proto.
 */
export const file_tkd_idm_v1_notify_service = /*@__PURE__*/
  fileDesc("Ch90a2QvaWRtL3YxL25vdGlmeV9zZXJ2aWNlLnByb3RvEgp0a2QuaWRtLnYxIpoBCgpBdHRhY2htZW50EgwKBG5hbWUYASABKAkSEgoKbWVkaWFfdHlwZRgCIAEoCRIPCgdjb250ZW50GAMgASgMEhIKCmNvbnRlbnRfaWQYBCABKAkSMwoPYXR0YWNobWVudF90eXBlGAUgASgOMhoudGtkLmlkbS52MS5BdHRhY2htZW50VHlwZRIQCghmb3JfdXNlchgGIAMoCSJsCgxFTWFpbE1lc3NhZ2USGAoHc3ViamVjdBgBIAEoCUIH+vcYA8gBARIVCgRib2R5GAIgASgJQgf69xgDyAEBEisKC2F0dGFjaG1lbnRzGAMgAygLMhYudGtkLmlkbS52MS5BdHRhY2htZW50IhMKA1NNUxIMCgRib2R5GAEgASgJInwKEk5vdGlmaWNhdGlvbkFjdGlvbhIXCgZhY3Rpb24YASABKAlCB/r3GAPIAQESFgoFdGl0bGUYAiABKAlCB/r3GAPIAQESKAoJb3BlcmF0aW9uGAMgASgOMhUudGtkLmlkbS52MS5PcGVyYXRpb24SCwoDdXJsGAQgASgJIuoBChlTZXJ2aWNlV29ya2VyTm90aWZpY2F0aW9uEhYKBXRpdGxlGAEgASgJQgf69xgDyAEBEgwKBGJvZHkYAiABKAkSMAoRZGVmYXVsdF9vcGVyYXRpb24YAyABKA4yFS50a2QuaWRtLnYxLk9wZXJhdGlvbhIdChVkZWZhdWx0X29wZXJhdGlvbl91cmwYBCABKAkSLwoHYWN0aW9ucxgFIAMoCzIeLnRrZC5pZG0udjEuTm90aWZpY2F0aW9uQWN0aW9uEiUKBGRhdGEYBiABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0InYKE1dlYlB1c2hOb3RpZmljYXRpb24SEAoGYmluYXJ5GAEgASgMSAASPQoMbm90aWZpY2F0aW9uGAIgASgLMiUudGtkLmlkbS52MS5TZXJ2aWNlV29ya2VyTm90aWZpY2F0aW9uSABCDgoEa2luZBIG+vcYAggBIroDChdTZW5kTm90aWZpY2F0aW9uUmVxdWVzdBIeCgNzbXMYASABKAsyDy50a2QuaWRtLnYxLlNNU0gAEikKBWVtYWlsGAIgASgLMhgudGtkLmlkbS52MS5FTWFpbE1lc3NhZ2VIABIyCgd3ZWJwdXNoGAcgASgLMh8udGtkLmlkbS52MS5XZWJQdXNoTm90aWZpY2F0aW9uSAASFAoMdGFyZ2V0X3VzZXJzGAMgAygJEhQKDHRhcmdldF9yb2xlcxgEIAMoCRJiChlwZXJfdXNlcl90ZW1wbGF0ZV9jb250ZXh0GAUgAygLMj8udGtkLmlkbS52MS5TZW5kTm90aWZpY2F0aW9uUmVxdWVzdC5QZXJVc2VyVGVtcGxhdGVDb250ZXh0RW50cnkSHwoOc2VuZGVyX3VzZXJfaWQYBiABKAlCB/r3GAPIAQEaVgobUGVyVXNlclRlbXBsYXRlQ29udGV4dEVudHJ5EgsKA2tleRgBIAEoCRImCgV2YWx1ZRgCIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3Q6AjgBQhEKB21lc3NhZ2USBvr3GAIIAUoECAgQDSJlChREZWxpdmVyeU5vdGlmaWNhdGlvbhITCgt0YXJnZXRfdXNlchgBIAEoCRINCgVlcnJvchgCIAEoCRIpCgplcnJvcl9raW5kGAMgASgOMhUudGtkLmlkbS52MS5FcnJvcktpbmQiUAoYU2VuZE5vdGlmaWNhdGlvblJlc3BvbnNlEjQKCmRlbGl2ZXJpZXMYASADKAsyIC50a2QuaWRtLnYxLkRlbGl2ZXJ5Tm90aWZpY2F0aW9uIhoKGEdldFZBUElEUHVibGljS2V5UmVxdWVzdCIoChlHZXRWQVBJRFB1YmxpY0tleVJlc3BvbnNlEgsKA2tleRgBIAEoCSKLAQoTV2ViUHVzaFN1YnNjcmlwdGlvbhIZCghlbmRwb2ludBgBIAEoCUIH+vcYA8gBARIyCg9leHBpcmF0aW9uX3R5cGUYAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SJQoEa2V5cxgDIAEoCzIXLnRrZC5pZG0udjEuV2ViUHVzaEtleXMiKwoLV2ViUHVzaEtleXMSDAoEYXV0aBgBIAEoCRIOCgZwMjU2ZGgYAiABKAkiVgodQWRkV2ViUHVzaFN1YnNjcmlwdGlvblJlcXVlc3QSNQoMc3Vic2NyaXB0aW9uGAEgASgLMh8udGtkLmlkbS52MS5XZWJQdXNoU3Vic2NyaXB0aW9uIiAKHkFkZFdlYlB1c2hTdWJzY3JpcHRpb25SZXNwb25zZSpTCg5BdHRhY2htZW50VHlwZRIPCgtVTlNQRUNJRklFRBAAEgoKBklOTElORRABEg4KCkFUVEFDSEVNTlQQAhIUChBBTFRFUk5BVElWRV9CT0RZEAMqtAEKCU9wZXJhdGlvbhIZChVPUEVSQVRJT05fVU5TUEVDSUZJRUQQABIZChVPUEVSQVRJT05fT1BFTl9XSU5ET1cQARIoCiRPUEVSQVRJT05fRk9DVVNfTEFTVF9GT0NVU0VEX09SX09QRU4QAhIrCidPUEVSQVRJT05fTkFWSUdBVEVfTEFTVF9GT0NVU0VEX09SX09QRU4QAxIaChZPUEVSQVRJT05fU0VORF9SRVFVRVNUEAQq2gEKCUVycm9yS2luZBIaChZFUlJPUl9LSU5EX1VOU1BFQ0lGSUVEEAASHgoaRVJST1JfS0lORF9OT19QUklNQVJZX01BSUwQARIfChtFUlJPUl9LSU5EX05PX1BSSU1BUllfUEhPTkUQAhImCiJFUlJPUl9LSU5EX05PX1dFQlBVU0hfU1VCU0NSSVBUSU9OEAMSGAoURVJST1JfS0lORF9UUkFOU1BPUlQQBBIXChNFUlJPUl9LSU5EX1RFTVBMQVRFEAUSFQoQRVJST1JfS0lORF9PVEhFUhD/ATLqAgoNTm90aWZ5U2VydmljZRJkChBTZW5kTm90aWZpY2F0aW9uEiMudGtkLmlkbS52MS5TZW5kTm90aWZpY2F0aW9uUmVxdWVzdBokLnRrZC5pZG0udjEuU2VuZE5vdGlmaWNhdGlvblJlc3BvbnNlIgWyfgIIAhJnChFHZXRWQVBJRFB1YmxpY0tleRIkLnRrZC5pZG0udjEuR2V0VkFQSURQdWJsaWNLZXlSZXF1ZXN0GiUudGtkLmlkbS52MS5HZXRWQVBJRFB1YmxpY0tleVJlc3BvbnNlIgWyfgIIARJ2ChZBZGRXZWJQdXNoU3Vic2NyaXB0aW9uEikudGtkLmlkbS52MS5BZGRXZWJQdXNoU3Vic2NyaXB0aW9uUmVxdWVzdBoqLnRrZC5pZG0udjEuQWRkV2ViUHVzaFN1YnNjcmlwdGlvblJlc3BvbnNlIgWyfgIIARoSun4PCg1pZG1fc3VwZXJ1c2VyQq0BCg5jb20udGtkLmlkbS52MUISTm90aWZ5U2VydmljZVByb3RvUAFaPWdpdGh1Yi5jb20vdGllcmtsaW5pay1kb2JlcnNiZXJnL2FwaXMvZ2VuL2dvL3RrZC9pZG0vdjE7aWRtdjGiAgNUSViqAgpUa2QuSWRtLlYxygIKVGtkXElkbVxWMeICFlRrZFxJZG1cVjFcR1BCTWV0YWRhdGHqAgxUa2Q6OklkbTo6VjFiBnByb3RvMw", [file_buf_validate_validate, file_tkd_common_v1_descriptor, file_google_protobuf_struct, file_google_protobuf_duration]);

/**
 * Describes the message tkd.idm.v1.Attachment.
 * Use `create(AttachmentSchema)` to create a new message.
 */
export const AttachmentSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 0);

/**
 * Describes the message tkd.idm.v1.EMailMessage.
 * Use `create(EMailMessageSchema)` to create a new message.
 */
export const EMailMessageSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 1);

/**
 * Describes the message tkd.idm.v1.SMS.
 * Use `create(SMSSchema)` to create a new message.
 */
export const SMSSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 2);

/**
 * Describes the message tkd.idm.v1.NotificationAction.
 * Use `create(NotificationActionSchema)` to create a new message.
 */
export const NotificationActionSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 3);

/**
 * Describes the message tkd.idm.v1.ServiceWorkerNotification.
 * Use `create(ServiceWorkerNotificationSchema)` to create a new message.
 */
export const ServiceWorkerNotificationSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 4);

/**
 * Describes the message tkd.idm.v1.WebPushNotification.
 * Use `create(WebPushNotificationSchema)` to create a new message.
 */
export const WebPushNotificationSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 5);

/**
 * Describes the message tkd.idm.v1.SendNotificationRequest.
 * Use `create(SendNotificationRequestSchema)` to create a new message.
 */
export const SendNotificationRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 6);

/**
 * Describes the message tkd.idm.v1.DeliveryNotification.
 * Use `create(DeliveryNotificationSchema)` to create a new message.
 */
export const DeliveryNotificationSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 7);

/**
 * Describes the message tkd.idm.v1.SendNotificationResponse.
 * Use `create(SendNotificationResponseSchema)` to create a new message.
 */
export const SendNotificationResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 8);

/**
 * Describes the message tkd.idm.v1.GetVAPIDPublicKeyRequest.
 * Use `create(GetVAPIDPublicKeyRequestSchema)` to create a new message.
 */
export const GetVAPIDPublicKeyRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 9);

/**
 * Describes the message tkd.idm.v1.GetVAPIDPublicKeyResponse.
 * Use `create(GetVAPIDPublicKeyResponseSchema)` to create a new message.
 */
export const GetVAPIDPublicKeyResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 10);

/**
 * Describes the message tkd.idm.v1.WebPushSubscription.
 * Use `create(WebPushSubscriptionSchema)` to create a new message.
 */
export const WebPushSubscriptionSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 11);

/**
 * Describes the message tkd.idm.v1.WebPushKeys.
 * Use `create(WebPushKeysSchema)` to create a new message.
 */
export const WebPushKeysSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 12);

/**
 * Describes the message tkd.idm.v1.AddWebPushSubscriptionRequest.
 * Use `create(AddWebPushSubscriptionRequestSchema)` to create a new message.
 */
export const AddWebPushSubscriptionRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 13);

/**
 * Describes the message tkd.idm.v1.AddWebPushSubscriptionResponse.
 * Use `create(AddWebPushSubscriptionResponseSchema)` to create a new message.
 */
export const AddWebPushSubscriptionResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_idm_v1_notify_service, 14);

/**
 * Describes the enum tkd.idm.v1.AttachmentType.
 */
export const AttachmentTypeSchema = /*@__PURE__*/
  enumDesc(file_tkd_idm_v1_notify_service, 0);

/**
 * @generated from enum tkd.idm.v1.AttachmentType
 */
export const AttachmentType = /*@__PURE__*/
  tsEnum(AttachmentTypeSchema);

/**
 * Describes the enum tkd.idm.v1.Operation.
 */
export const OperationSchema = /*@__PURE__*/
  enumDesc(file_tkd_idm_v1_notify_service, 1);

/**
 * @generated from enum tkd.idm.v1.Operation
 */
export const Operation = /*@__PURE__*/
  tsEnum(OperationSchema);

/**
 * Describes the enum tkd.idm.v1.ErrorKind.
 */
export const ErrorKindSchema = /*@__PURE__*/
  enumDesc(file_tkd_idm_v1_notify_service, 2);

/**
 * @generated from enum tkd.idm.v1.ErrorKind
 */
export const ErrorKind = /*@__PURE__*/
  tsEnum(ErrorKindSchema);

/**
 * @generated from service tkd.idm.v1.NotifyService
 */
export const NotifyService = /*@__PURE__*/
  serviceDesc(file_tkd_idm_v1_notify_service, 0);

