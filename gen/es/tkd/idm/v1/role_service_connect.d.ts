// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=js+dts"
// @generated from file tkd/idm/v1/role_service.proto (package tkd.idm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AssignRoleToUserRequest, AssignRoleToUserResponse, CreateRoleRequest, CreateRoleResponse, DeleteRoleRequest, DeleteRoleResponse, GetRoleRequest, GetRoleResponse, ListRolesRequest, ListRolesResponse, ResolveRolePermissionsRequest, ResolveRolePermissionsResponse, UnassignRoleFromUserRequest, UnassignRoleFromUserResponse, UpdateRoleRequest, UpdateRoleResponse } from "./role_service_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service tkd.idm.v1.RoleService
 */
export declare const RoleService: {
  readonly typeName: "tkd.idm.v1.RoleService",
  readonly methods: {
    /**
     * @generated from rpc tkd.idm.v1.RoleService.CreateRole
     */
    readonly createRole: {
      readonly name: "CreateRole",
      readonly I: typeof CreateRoleRequest,
      readonly O: typeof CreateRoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.idm.v1.RoleService.UpdateRole
     */
    readonly updateRole: {
      readonly name: "UpdateRole",
      readonly I: typeof UpdateRoleRequest,
      readonly O: typeof UpdateRoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.idm.v1.RoleService.DeleteRole
     */
    readonly deleteRole: {
      readonly name: "DeleteRole",
      readonly I: typeof DeleteRoleRequest,
      readonly O: typeof DeleteRoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.idm.v1.RoleService.ListRoles
     */
    readonly listRoles: {
      readonly name: "ListRoles",
      readonly I: typeof ListRolesRequest,
      readonly O: typeof ListRolesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.idm.v1.RoleService.GetRole
     */
    readonly getRole: {
      readonly name: "GetRole",
      readonly I: typeof GetRoleRequest,
      readonly O: typeof GetRoleResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.idm.v1.RoleService.AssignRoleToUser
     */
    readonly assignRoleToUser: {
      readonly name: "AssignRoleToUser",
      readonly I: typeof AssignRoleToUserRequest,
      readonly O: typeof AssignRoleToUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.idm.v1.RoleService.UnassignRoleFromUser
     */
    readonly unassignRoleFromUser: {
      readonly name: "UnassignRoleFromUser",
      readonly I: typeof UnassignRoleFromUserRequest,
      readonly O: typeof UnassignRoleFromUserResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.idm.v1.RoleService.ResolveRolePermissions
     */
    readonly resolveRolePermissions: {
      readonly name: "ResolveRolePermissions",
      readonly I: typeof ResolveRolePermissionsRequest,
      readonly O: typeof ResolveRolePermissionsResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

