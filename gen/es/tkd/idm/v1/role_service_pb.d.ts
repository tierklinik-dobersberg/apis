// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file tkd/idm/v1/role_service.proto (package tkd.idm.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { FieldMask } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file tkd/idm/v1/role_service.proto.
 */
export declare const file_tkd_idm_v1_role_service: GenFile;

/**
 * @generated from message tkd.idm.v1.Role
 */
export declare type Role = Message<"tkd.idm.v1.Role"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: bool delete_protected = 4;
   */
  deleteProtected: boolean;
};

/**
 * Describes the message tkd.idm.v1.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export declare const RoleSchema: GenMessage<Role>;

/**
 * @generated from message tkd.idm.v1.ListRolesRequest
 */
export declare type ListRolesRequest = Message<"tkd.idm.v1.ListRolesRequest"> & {
};

/**
 * Describes the message tkd.idm.v1.ListRolesRequest.
 * Use `create(ListRolesRequestSchema)` to create a new message.
 */
export declare const ListRolesRequestSchema: GenMessage<ListRolesRequest>;

/**
 * @generated from message tkd.idm.v1.ListRolesResponse
 */
export declare type ListRolesResponse = Message<"tkd.idm.v1.ListRolesResponse"> & {
  /**
   * @generated from field: repeated tkd.idm.v1.Role roles = 1;
   */
  roles: Role[];
};

/**
 * Describes the message tkd.idm.v1.ListRolesResponse.
 * Use `create(ListRolesResponseSchema)` to create a new message.
 */
export declare const ListRolesResponseSchema: GenMessage<ListRolesResponse>;

/**
 * @generated from message tkd.idm.v1.GetRoleRequest
 */
export declare type GetRoleRequest = Message<"tkd.idm.v1.GetRoleRequest"> & {
  /**
   * @generated from oneof tkd.idm.v1.GetRoleRequest.search
   */
  search: {
    /**
     * @generated from field: string name = 1;
     */
    value: string;
    case: "name";
  } | {
    /**
     * @generated from field: string id = 2;
     */
    value: string;
    case: "id";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tkd.idm.v1.GetRoleRequest.
 * Use `create(GetRoleRequestSchema)` to create a new message.
 */
export declare const GetRoleRequestSchema: GenMessage<GetRoleRequest>;

/**
 * @generated from message tkd.idm.v1.GetRoleResponse
 */
export declare type GetRoleResponse = Message<"tkd.idm.v1.GetRoleResponse"> & {
  /**
   * @generated from field: tkd.idm.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message tkd.idm.v1.GetRoleResponse.
 * Use `create(GetRoleResponseSchema)` to create a new message.
 */
export declare const GetRoleResponseSchema: GenMessage<GetRoleResponse>;

/**
 * @generated from message tkd.idm.v1.AssignRoleToUserRequest
 */
export declare type AssignRoleToUserRequest = Message<"tkd.idm.v1.AssignRoleToUserRequest"> & {
  /**
   * @generated from field: string role_id = 1;
   */
  roleId: string;

  /**
   * @generated from field: repeated string user_id = 2;
   */
  userId: string[];
};

/**
 * Describes the message tkd.idm.v1.AssignRoleToUserRequest.
 * Use `create(AssignRoleToUserRequestSchema)` to create a new message.
 */
export declare const AssignRoleToUserRequestSchema: GenMessage<AssignRoleToUserRequest>;

/**
 * @generated from message tkd.idm.v1.AssignRoleToUserResponse
 */
export declare type AssignRoleToUserResponse = Message<"tkd.idm.v1.AssignRoleToUserResponse"> & {
};

/**
 * Describes the message tkd.idm.v1.AssignRoleToUserResponse.
 * Use `create(AssignRoleToUserResponseSchema)` to create a new message.
 */
export declare const AssignRoleToUserResponseSchema: GenMessage<AssignRoleToUserResponse>;

/**
 * @generated from message tkd.idm.v1.UnassignRoleFromUserRequest
 */
export declare type UnassignRoleFromUserRequest = Message<"tkd.idm.v1.UnassignRoleFromUserRequest"> & {
  /**
   * @generated from field: string role_id = 1;
   */
  roleId: string;

  /**
   * @generated from field: repeated string user_id = 2;
   */
  userId: string[];
};

/**
 * Describes the message tkd.idm.v1.UnassignRoleFromUserRequest.
 * Use `create(UnassignRoleFromUserRequestSchema)` to create a new message.
 */
export declare const UnassignRoleFromUserRequestSchema: GenMessage<UnassignRoleFromUserRequest>;

/**
 * @generated from message tkd.idm.v1.UnassignRoleFromUserResponse
 */
export declare type UnassignRoleFromUserResponse = Message<"tkd.idm.v1.UnassignRoleFromUserResponse"> & {
};

/**
 * Describes the message tkd.idm.v1.UnassignRoleFromUserResponse.
 * Use `create(UnassignRoleFromUserResponseSchema)` to create a new message.
 */
export declare const UnassignRoleFromUserResponseSchema: GenMessage<UnassignRoleFromUserResponse>;

/**
 * @generated from message tkd.idm.v1.CreateRoleRequest
 */
export declare type CreateRoleRequest = Message<"tkd.idm.v1.CreateRoleRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: bool delete_protection = 3;
   */
  deleteProtection: boolean;

  /**
   * @generated from field: string id = 4;
   */
  id: string;
};

/**
 * Describes the message tkd.idm.v1.CreateRoleRequest.
 * Use `create(CreateRoleRequestSchema)` to create a new message.
 */
export declare const CreateRoleRequestSchema: GenMessage<CreateRoleRequest>;

/**
 * @generated from message tkd.idm.v1.CreateRoleResponse
 */
export declare type CreateRoleResponse = Message<"tkd.idm.v1.CreateRoleResponse"> & {
  /**
   * @generated from field: tkd.idm.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message tkd.idm.v1.CreateRoleResponse.
 * Use `create(CreateRoleResponseSchema)` to create a new message.
 */
export declare const CreateRoleResponseSchema: GenMessage<CreateRoleResponse>;

/**
 * @generated from message tkd.idm.v1.UpdateRoleRequest
 */
export declare type UpdateRoleRequest = Message<"tkd.idm.v1.UpdateRoleRequest"> & {
  /**
   * @generated from field: string role_id = 1;
   */
  roleId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: bool delete_protection = 4;
   */
  deleteProtection: boolean;

  /**
   * @generated from field: google.protobuf.FieldMask field_mask = 5;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message tkd.idm.v1.UpdateRoleRequest.
 * Use `create(UpdateRoleRequestSchema)` to create a new message.
 */
export declare const UpdateRoleRequestSchema: GenMessage<UpdateRoleRequest>;

/**
 * @generated from message tkd.idm.v1.UpdateRoleResponse
 */
export declare type UpdateRoleResponse = Message<"tkd.idm.v1.UpdateRoleResponse"> & {
  /**
   * @generated from field: tkd.idm.v1.Role role = 1;
   */
  role?: Role;
};

/**
 * Describes the message tkd.idm.v1.UpdateRoleResponse.
 * Use `create(UpdateRoleResponseSchema)` to create a new message.
 */
export declare const UpdateRoleResponseSchema: GenMessage<UpdateRoleResponse>;

/**
 * @generated from message tkd.idm.v1.DeleteRoleRequest
 */
export declare type DeleteRoleRequest = Message<"tkd.idm.v1.DeleteRoleRequest"> & {
  /**
   * @generated from field: string role_id = 1;
   */
  roleId: string;
};

/**
 * Describes the message tkd.idm.v1.DeleteRoleRequest.
 * Use `create(DeleteRoleRequestSchema)` to create a new message.
 */
export declare const DeleteRoleRequestSchema: GenMessage<DeleteRoleRequest>;

/**
 * @generated from message tkd.idm.v1.DeleteRoleResponse
 */
export declare type DeleteRoleResponse = Message<"tkd.idm.v1.DeleteRoleResponse"> & {
};

/**
 * Describes the message tkd.idm.v1.DeleteRoleResponse.
 * Use `create(DeleteRoleResponseSchema)` to create a new message.
 */
export declare const DeleteRoleResponseSchema: GenMessage<DeleteRoleResponse>;

/**
 * @generated from message tkd.idm.v1.ResolveRolePermissionsRequest
 */
export declare type ResolveRolePermissionsRequest = Message<"tkd.idm.v1.ResolveRolePermissionsRequest"> & {
  /**
   * @generated from field: string role_id = 1;
   */
  roleId: string;
};

/**
 * Describes the message tkd.idm.v1.ResolveRolePermissionsRequest.
 * Use `create(ResolveRolePermissionsRequestSchema)` to create a new message.
 */
export declare const ResolveRolePermissionsRequestSchema: GenMessage<ResolveRolePermissionsRequest>;

/**
 * @generated from message tkd.idm.v1.ResolveRolePermissionsResponse
 */
export declare type ResolveRolePermissionsResponse = Message<"tkd.idm.v1.ResolveRolePermissionsResponse"> & {
  /**
   * @generated from field: repeated string permissions = 1;
   */
  permissions: string[];
};

/**
 * Describes the message tkd.idm.v1.ResolveRolePermissionsResponse.
 * Use `create(ResolveRolePermissionsResponseSchema)` to create a new message.
 */
export declare const ResolveRolePermissionsResponseSchema: GenMessage<ResolveRolePermissionsResponse>;

/**
 * @generated from message tkd.idm.v1.AssignPermissionsToRoleRequest
 */
export declare type AssignPermissionsToRoleRequest = Message<"tkd.idm.v1.AssignPermissionsToRoleRequest"> & {
  /**
   * @generated from field: repeated string role_ids = 1;
   */
  roleIds: string[];

  /**
   * @generated from field: repeated string permissions = 2;
   */
  permissions: string[];
};

/**
 * Describes the message tkd.idm.v1.AssignPermissionsToRoleRequest.
 * Use `create(AssignPermissionsToRoleRequestSchema)` to create a new message.
 */
export declare const AssignPermissionsToRoleRequestSchema: GenMessage<AssignPermissionsToRoleRequest>;

/**
 * @generated from message tkd.idm.v1.AssignPermissionsToRoleResponse
 */
export declare type AssignPermissionsToRoleResponse = Message<"tkd.idm.v1.AssignPermissionsToRoleResponse"> & {
  /**
   * @generated from field: repeated tkd.idm.v1.Role roles = 1;
   */
  roles: Role[];
};

/**
 * Describes the message tkd.idm.v1.AssignPermissionsToRoleResponse.
 * Use `create(AssignPermissionsToRoleResponseSchema)` to create a new message.
 */
export declare const AssignPermissionsToRoleResponseSchema: GenMessage<AssignPermissionsToRoleResponse>;

/**
 * @generated from message tkd.idm.v1.UnassignPermissionsFromRoleRequest
 */
export declare type UnassignPermissionsFromRoleRequest = Message<"tkd.idm.v1.UnassignPermissionsFromRoleRequest"> & {
  /**
   * @generated from field: repeated string role_ids = 1;
   */
  roleIds: string[];

  /**
   * @generated from field: repeated string permissions = 2;
   */
  permissions: string[];
};

/**
 * Describes the message tkd.idm.v1.UnassignPermissionsFromRoleRequest.
 * Use `create(UnassignPermissionsFromRoleRequestSchema)` to create a new message.
 */
export declare const UnassignPermissionsFromRoleRequestSchema: GenMessage<UnassignPermissionsFromRoleRequest>;

/**
 * @generated from message tkd.idm.v1.UnassignPermissionsFromRoleResponse
 */
export declare type UnassignPermissionsFromRoleResponse = Message<"tkd.idm.v1.UnassignPermissionsFromRoleResponse"> & {
  /**
   * @generated from field: repeated tkd.idm.v1.Role roles = 1;
   */
  roles: Role[];
};

/**
 * Describes the message tkd.idm.v1.UnassignPermissionsFromRoleResponse.
 * Use `create(UnassignPermissionsFromRoleResponseSchema)` to create a new message.
 */
export declare const UnassignPermissionsFromRoleResponseSchema: GenMessage<UnassignPermissionsFromRoleResponse>;

/**
 * @generated from service tkd.idm.v1.RoleService
 */
export declare const RoleService: GenService<{
  /**
   * @generated from rpc tkd.idm.v1.RoleService.CreateRole
   */
  createRole: {
    methodKind: "unary";
    input: typeof CreateRoleRequestSchema;
    output: typeof CreateRoleResponseSchema;
  },
  /**
   * @generated from rpc tkd.idm.v1.RoleService.UpdateRole
   */
  updateRole: {
    methodKind: "unary";
    input: typeof UpdateRoleRequestSchema;
    output: typeof UpdateRoleResponseSchema;
  },
  /**
   * @generated from rpc tkd.idm.v1.RoleService.DeleteRole
   */
  deleteRole: {
    methodKind: "unary";
    input: typeof DeleteRoleRequestSchema;
    output: typeof DeleteRoleResponseSchema;
  },
  /**
   * @generated from rpc tkd.idm.v1.RoleService.ListRoles
   */
  listRoles: {
    methodKind: "unary";
    input: typeof ListRolesRequestSchema;
    output: typeof ListRolesResponseSchema;
  },
  /**
   * @generated from rpc tkd.idm.v1.RoleService.GetRole
   */
  getRole: {
    methodKind: "unary";
    input: typeof GetRoleRequestSchema;
    output: typeof GetRoleResponseSchema;
  },
  /**
   * @generated from rpc tkd.idm.v1.RoleService.AssignRoleToUser
   */
  assignRoleToUser: {
    methodKind: "unary";
    input: typeof AssignRoleToUserRequestSchema;
    output: typeof AssignRoleToUserResponseSchema;
  },
  /**
   * @generated from rpc tkd.idm.v1.RoleService.UnassignRoleFromUser
   */
  unassignRoleFromUser: {
    methodKind: "unary";
    input: typeof UnassignRoleFromUserRequestSchema;
    output: typeof UnassignRoleFromUserResponseSchema;
  },
  /**
   * @generated from rpc tkd.idm.v1.RoleService.AssignPermissionsToRole
   */
  assignPermissionsToRole: {
    methodKind: "unary";
    input: typeof AssignPermissionsToRoleRequestSchema;
    output: typeof AssignPermissionsToRoleResponseSchema;
  },
  /**
   * @generated from rpc tkd.idm.v1.RoleService.UnassignPermissionsFromRole
   */
  unassignPermissionsFromRole: {
    methodKind: "unary";
    input: typeof UnassignPermissionsFromRoleRequestSchema;
    output: typeof UnassignPermissionsFromRoleResponseSchema;
  },
  /**
   * @generated from rpc tkd.idm.v1.RoleService.ResolveRolePermissions
   */
  resolveRolePermissions: {
    methodKind: "unary";
    input: typeof ResolveRolePermissionsRequestSchema;
    output: typeof ResolveRolePermissionsResponseSchema;
  },
}>;

