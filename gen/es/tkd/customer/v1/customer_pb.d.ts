// @generated by protoc-gen-es v1.10.0 with parameter "target=js+dts"
// @generated from file tkd/customer/v1/customer.proto (package tkd.customer.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Struct, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Pagination } from "../../common/v1/pagination_pb.js";

/**
 * @generated from message tkd.customer.v1.CustomerRef
 */
export declare class CustomerRef extends Message<CustomerRef> {
  /**
   * @generated from field: string source = 1;
   */
  source: string;

  /**
   * @generated from field: string id = 2;
   */
  id: string;

  constructor(data?: PartialMessage<CustomerRef>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.CustomerRef";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CustomerRef;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CustomerRef;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CustomerRef;

  static equals(a: CustomerRef | PlainMessage<CustomerRef> | undefined, b: CustomerRef | PlainMessage<CustomerRef> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.OwnedAttribute
 */
export declare class OwnedAttribute extends Message<OwnedAttribute> {
  /**
   * @generated from oneof tkd.customer.v1.OwnedAttribute.kind
   */
  kind: {
    /**
     * @generated from field: string first_name = 1;
     */
    value: string;
    case: "firstName";
  } | {
    /**
     * @generated from field: string last_name = 2;
     */
    value: string;
    case: "lastName";
  } | {
    /**
     * @generated from field: string phone_number = 3;
     */
    value: string;
    case: "phoneNumber";
  } | {
    /**
     * @generated from field: string email_address = 4;
     */
    value: string;
    case: "emailAddress";
  } | {
    /**
     * @generated from field: tkd.customer.v1.Address address = 5;
     */
    value: Address;
    case: "address";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<OwnedAttribute>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.OwnedAttribute";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OwnedAttribute;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OwnedAttribute;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OwnedAttribute;

  static equals(a: OwnedAttribute | PlainMessage<OwnedAttribute> | undefined, b: OwnedAttribute | PlainMessage<OwnedAttribute> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.ImportState
 */
export declare class ImportState extends Message<ImportState> {
  /**
   * Importer is a unique name of the importer that created or updated the
   * customer or patient record.
   *
   * @generated from field: string importer = 1;
   */
  importer: string;

  /**
   * LastSeen holds the timestamp the importer has seen the customer record the
   * last time.
   *
   * @generated from field: google.protobuf.Timestamp last_seen = 2;
   */
  lastSeen?: Timestamp;

  /**
   * ExtraData may hold additional data for the importer.
   *
   * @generated from field: google.protobuf.Struct extra_data = 3;
   */
  extraData?: Struct;

  /**
   * InternalReference may hold an internal customer reference from
   * the importer.
   *
   * @generated from field: string internal_reference = 4;
   */
  internalReference: string;

  /**
   * @generated from field: repeated tkd.customer.v1.OwnedAttribute owned_attributes = 5;
   */
  ownedAttributes: OwnedAttribute[];

  constructor(data?: PartialMessage<ImportState>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.ImportState";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImportState;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImportState;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImportState;

  static equals(a: ImportState | PlainMessage<ImportState> | undefined, b: ImportState | PlainMessage<ImportState> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.Address
 */
export declare class Address extends Message<Address> {
  /**
   * @generated from field: string postal_code = 1;
   */
  postalCode: string;

  /**
   * @generated from field: string city = 2;
   */
  city: string;

  /**
   * @generated from field: string street = 3;
   */
  street: string;

  /**
   * @generated from field: string extra = 4;
   */
  extra: string;

  constructor(data?: PartialMessage<Address>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.Address";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Address;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Address;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Address;

  static equals(a: Address | PlainMessage<Address> | undefined, b: Address | PlainMessage<Address> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.Customer
 */
export declare class Customer extends Message<Customer> {
  /**
   * ID is a unique, randomly generated ID for this customer.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * FirstName is the first name of the customer.
   *
   * @generated from field: string first_name = 2;
   */
  firstName: string;

  /**
   * LastName is the last name of the customer
   *
   * @generated from field: string last_name = 3;
   */
  lastName: string;

  /**
   * Addresses is a list of addresses.
   *
   * @generated from field: repeated tkd.customer.v1.Address addresses = 4;
   */
  addresses: Address[];

  /**
   * PhoneNumbers is a list of phone numbers
   *
   * @generated from field: repeated string phone_numbers = 5;
   */
  phoneNumbers: string[];

  /**
   * EmailAddresses is a list of email addresses.
   *
   * @generated from field: repeated string email_addresses = 6;
   */
  emailAddresses: string[];

  /**
   * RecordCreatedAt is the timestamp at which the customer record has been created.
   *
   * @generated from field: google.protobuf.Timestamp record_created_at = 7;
   */
  recordCreatedAt?: Timestamp;

  constructor(data?: PartialMessage<Customer>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.Customer";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Customer;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Customer;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Customer;

  static equals(a: Customer | PlainMessage<Customer> | undefined, b: Customer | PlainMessage<Customer> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.CustomerResponse
 */
export declare class CustomerResponse extends Message<CustomerResponse> {
  /**
   * @generated from field: tkd.customer.v1.Customer customer = 1;
   */
  customer?: Customer;

  /**
   * @generated from field: repeated tkd.customer.v1.ImportState states = 2;
   */
  states: ImportState[];

  constructor(data?: PartialMessage<CustomerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.CustomerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CustomerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CustomerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CustomerResponse;

  static equals(a: CustomerResponse | PlainMessage<CustomerResponse> | undefined, b: CustomerResponse | PlainMessage<CustomerResponse> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.InternalReferenceQuery
 */
export declare class InternalReferenceQuery extends Message<InternalReferenceQuery> {
  /**
   * @generated from field: string importer = 1;
   */
  importer: string;

  /**
   * @generated from field: string ref = 2;
   */
  ref: string;

  constructor(data?: PartialMessage<InternalReferenceQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.InternalReferenceQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InternalReferenceQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InternalReferenceQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InternalReferenceQuery;

  static equals(a: InternalReferenceQuery | PlainMessage<InternalReferenceQuery> | undefined, b: InternalReferenceQuery | PlainMessage<InternalReferenceQuery> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.NameQuery
 */
export declare class NameQuery extends Message<NameQuery> {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  constructor(data?: PartialMessage<NameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.NameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NameQuery;

  static equals(a: NameQuery | PlainMessage<NameQuery> | undefined, b: NameQuery | PlainMessage<NameQuery> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.CustomerQuery
 */
export declare class CustomerQuery extends Message<CustomerQuery> {
  /**
   * @generated from oneof tkd.customer.v1.CustomerQuery.query
   */
  query: {
    /**
     * @generated from field: string id = 1;
     */
    value: string;
    case: "id";
  } | {
    /**
     * @generated from field: tkd.customer.v1.InternalReferenceQuery internal_reference = 2;
     */
    value: InternalReferenceQuery;
    case: "internalReference";
  } | {
    /**
     * @generated from field: tkd.customer.v1.NameQuery name = 3;
     */
    value: NameQuery;
    case: "name";
  } | {
    /**
     * @generated from field: string phone_number = 4;
     */
    value: string;
    case: "phoneNumber";
  } | {
    /**
     * @generated from field: string email_address = 5;
     */
    value: string;
    case: "emailAddress";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<CustomerQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.CustomerQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CustomerQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CustomerQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CustomerQuery;

  static equals(a: CustomerQuery | PlainMessage<CustomerQuery> | undefined, b: CustomerQuery | PlainMessage<CustomerQuery> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.SearchCustomerRequest
 */
export declare class SearchCustomerRequest extends Message<SearchCustomerRequest> {
  /**
   * @generated from field: repeated tkd.customer.v1.CustomerQuery queries = 1;
   */
  queries: CustomerQuery[];

  /**
   * Pagination can be used to apply pagination to the response
   * list.
   * This field is only valid for SearchCustomer but is ignored
   * in SearchCustomerStream.
   *
   * @generated from field: tkd.common.v1.Pagination pagination = 2;
   */
  pagination?: Pagination;

  /**
   * Only used in SearchCustomerStream
   *
   * @generated from field: string correlation_id = 99;
   */
  correlationId: string;

  constructor(data?: PartialMessage<SearchCustomerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.SearchCustomerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchCustomerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchCustomerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchCustomerRequest;

  static equals(a: SearchCustomerRequest | PlainMessage<SearchCustomerRequest> | undefined, b: SearchCustomerRequest | PlainMessage<SearchCustomerRequest> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.SearchCustomerResponse
 */
export declare class SearchCustomerResponse extends Message<SearchCustomerResponse> {
  /**
   * @generated from field: repeated tkd.customer.v1.CustomerResponse results = 1;
   */
  results: CustomerResponse[];

  /**
   * TotalResults holds the number of results for the given query.
   * If no pagination is specified, TotalResults is the same as len(results);
   *
   * @generated from field: int64 total_results = 2;
   */
  totalResults: bigint;

  /**
   * Only used in SearchCustomerStream
   *
   * @generated from field: string correlation_id = 99;
   */
  correlationId: string;

  constructor(data?: PartialMessage<SearchCustomerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.SearchCustomerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchCustomerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchCustomerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchCustomerResponse;

  static equals(a: SearchCustomerResponse | PlainMessage<SearchCustomerResponse> | undefined, b: SearchCustomerResponse | PlainMessage<SearchCustomerResponse> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.UpdateCustomerRequest
 */
export declare class UpdateCustomerRequest extends Message<UpdateCustomerRequest> {
  /**
   * @generated from field: tkd.customer.v1.Customer customer = 1;
   */
  customer?: Customer;

  constructor(data?: PartialMessage<UpdateCustomerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.UpdateCustomerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomerRequest;

  static equals(a: UpdateCustomerRequest | PlainMessage<UpdateCustomerRequest> | undefined, b: UpdateCustomerRequest | PlainMessage<UpdateCustomerRequest> | undefined): boolean;
}

/**
 * @generated from message tkd.customer.v1.UpdateCustomerResponse
 */
export declare class UpdateCustomerResponse extends Message<UpdateCustomerResponse> {
  /**
   * @generated from field: tkd.customer.v1.CustomerResponse response = 1;
   */
  response?: CustomerResponse;

  constructor(data?: PartialMessage<UpdateCustomerResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "tkd.customer.v1.UpdateCustomerResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateCustomerResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateCustomerResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateCustomerResponse;

  static equals(a: UpdateCustomerResponse | PlainMessage<UpdateCustomerResponse> | undefined, b: UpdateCustomerResponse | PlainMessage<UpdateCustomerResponse> | undefined): boolean;
}

