// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=js+dts"
// @generated from file tkd/comment/v1/comment.proto (package tkd.comment.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateCommentRequest, CreateCommentResponse, CreateScopeRequest, CreateScopeResponse, DeleteScopeRequest, DeleteScopeResponse, GetCommentRequest, GetCommentResponse, ListCommentsRequest, ListCommentsResponse, ListScopeRequest, ListScopeResponse, UpdateScopeRequest, UpdateScopeResponse } from "./comment_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service tkd.comment.v1.CommentService
 */
export declare const CommentService: {
  readonly typeName: "tkd.comment.v1.CommentService",
  readonly methods: {
    /**
     * @generated from rpc tkd.comment.v1.CommentService.CreateScope
     */
    readonly createScope: {
      readonly name: "CreateScope",
      readonly I: typeof CreateScopeRequest,
      readonly O: typeof CreateScopeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.comment.v1.CommentService.UpdateScope
     */
    readonly updateScope: {
      readonly name: "UpdateScope",
      readonly I: typeof UpdateScopeRequest,
      readonly O: typeof UpdateScopeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.comment.v1.CommentService.ListScope
     */
    readonly listScope: {
      readonly name: "ListScope",
      readonly I: typeof ListScopeRequest,
      readonly O: typeof ListScopeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.comment.v1.CommentService.DeleteScope
     */
    readonly deleteScope: {
      readonly name: "DeleteScope",
      readonly I: typeof DeleteScopeRequest,
      readonly O: typeof DeleteScopeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.comment.v1.CommentService.CreateComment
     */
    readonly createComment: {
      readonly name: "CreateComment",
      readonly I: typeof CreateCommentRequest,
      readonly O: typeof CreateCommentResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.comment.v1.CommentService.GetComment
     */
    readonly getComment: {
      readonly name: "GetComment",
      readonly I: typeof GetCommentRequest,
      readonly O: typeof GetCommentResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.comment.v1.CommentService.ListComments
     */
    readonly listComments: {
      readonly name: "ListComments",
      readonly I: typeof ListCommentsRequest,
      readonly O: typeof ListCommentsResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

