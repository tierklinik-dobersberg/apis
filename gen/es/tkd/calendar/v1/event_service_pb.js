// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file tkd/calendar/v1/event_service.proto (package tkd.calendar.v1, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_tkd_calendar_v1_event } from "./event_pb";
import { file_google_protobuf_any, file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_tkd_common_v1_descriptor } from "../../common/v1/descriptor_pb";
import { file_tkd_common_v1_time_range } from "../../common/v1/time_range_pb";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";

/**
 * Describes the file tkd/calendar/v1/event_service.proto.
 */
export const file_tkd_calendar_v1_event_service = /*@__PURE__*/
  fileDesc("CiN0a2QvY2FsZW5kYXIvdjEvZXZlbnRfc2VydmljZS5wcm90bxIPdGtkLmNhbGVuZGFyLnYxIhYKFExpc3RDYWxlbmRhcnNSZXF1ZXN0IkUKFUxpc3RDYWxlbmRhcnNSZXNwb25zZRIsCgljYWxlbmRhcnMYASADKAsyGS50a2QuY2FsZW5kYXIudjEuQ2FsZW5kYXIiNQoLRXZlbnRTb3VyY2USFAoMY2FsZW5kYXJfaWRzGAEgAygJEhAKCHVzZXJfaWRzGAIgAygJIooCChFMaXN0RXZlbnRzUmVxdWVzdBIvCgdzb3VyY2VzGAEgASgLMhwudGtkLmNhbGVuZGFyLnYxLkV2ZW50U291cmNlSAASFwoNYWxsX2NhbGVuZGFycxgCIAEoCEgAEhMKCWFsbF91c2VycxgDIAEoCEgAEi4KCnRpbWVfcmFuZ2UYBCABKAsyGC50a2QuY29tbW9uLnYxLlRpbWVSYW5nZUgBEg4KBGRhdGUYBSABKAlIARItCglyZWFkX21hc2sYBiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrQhAKBnNvdXJjZRIG+vcYAggBQhUKC3NlYXJjaF90aW1lEgb69xgCCAEicAoRQ2FsZW5kYXJFdmVudExpc3QSKwoIY2FsZW5kYXIYASABKAsyGS50a2QuY2FsZW5kYXIudjEuQ2FsZW5kYXISLgoGZXZlbnRzGAIgAygLMh4udGtkLmNhbGVuZGFyLnYxLkNhbGVuZGFyRXZlbnQiSQoSTGlzdEV2ZW50c1Jlc3BvbnNlEjMKB3Jlc3VsdHMYASADKAsyIi50a2QuY2FsZW5kYXIudjEuQ2FsZW5kYXJFdmVudExpc3Qi7gEKEkNyZWF0ZUV2ZW50UmVxdWVzdBIcCgtjYWxlbmRhcl9pZBgBIAEoCUIH+vcYA8gBARIVCgRuYW1lGAIgASgJQgf69xgDyAEBEhMKC2Rlc2NyaXB0aW9uGAMgASgJEjIKBXN0YXJ0GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIH+vcYA8gBARIwCgNlbmQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgf69xgDyAEBEigKCmV4dHJhX2RhdGEYBiABKAsyFC5nb29nbGUucHJvdG9idWYuQW55IkQKE0NyZWF0ZUV2ZW50UmVzcG9uc2USLQoFZXZlbnQYASABKAsyHi50a2QuY2FsZW5kYXIudjEuQ2FsZW5kYXJFdmVudCKfAgoSVXBkYXRlRXZlbnRSZXF1ZXN0EhwKC2NhbGVuZGFyX2lkGAEgASgJQgf69xgDyAEBEhkKCGV2ZW50X2lkGAIgASgJQgf69xgDyAEBEgwKBG5hbWUYAyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSKQoFc3RhcnQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEicKA2VuZBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKAoKZXh0cmFfZGF0YRgHIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSLwoLdXBkYXRlX21hc2sYFCABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrIkQKE1VwZGF0ZUV2ZW50UmVzcG9uc2USLQoFZXZlbnQYASABKAsyHi50a2QuY2FsZW5kYXIudjEuQ2FsZW5kYXJFdmVudCLBAQoQTW92ZUV2ZW50UmVxdWVzdBIcChJzb3VyY2VfY2FsZW5kYXJfaWQYASABKAlIABIYCg5zb3VyY2VfdXNlcl9pZBgCIAEoCUgAEhkKCGV2ZW50X2lkGAMgASgJQgf69xgDyAEBEhwKEnRhcmdldF9jYWxlbmRhcl9pZBgEIAEoCUgBEhgKDnRhcmdldF91c2VyX2lkGAUgASgJSAFCEAoGc291cmNlEgb69xgCCAFCEAoGdGFyZ2V0Egb69xgCCAEiQgoRTW92ZUV2ZW50UmVzcG9uc2USLQoFZXZlbnQYASABKAsyHi50a2QuY2FsZW5kYXIudjEuQ2FsZW5kYXJFdmVudCJNChJEZWxldGVFdmVudFJlcXVlc3QSHAoLY2FsZW5kYXJfaWQYASABKAlCB/r3GAPIAQESGQoIZXZlbnRfaWQYAiABKAlCB/r3GAPIAQEiFQoTRGVsZXRlRXZlbnRSZXNwb25zZTLUBAoPQ2FsZW5kYXJTZXJ2aWNlEmUKDUxpc3RDYWxlbmRhcnMSJS50a2QuY2FsZW5kYXIudjEuTGlzdENhbGVuZGFyc1JlcXVlc3QaJi50a2QuY2FsZW5kYXIudjEuTGlzdENhbGVuZGFyc1Jlc3BvbnNlIgWyfgIIARJcCgpMaXN0RXZlbnRzEiIudGtkLmNhbGVuZGFyLnYxLkxpc3RFdmVudHNSZXF1ZXN0GiMudGtkLmNhbGVuZGFyLnYxLkxpc3RFdmVudHNSZXNwb25zZSIFsn4CCAESXwoLQ3JlYXRlRXZlbnQSIy50a2QuY2FsZW5kYXIudjEuQ3JlYXRlRXZlbnRSZXF1ZXN0GiQudGtkLmNhbGVuZGFyLnYxLkNyZWF0ZUV2ZW50UmVzcG9uc2UiBbJ+AggBEl8KC1VwZGF0ZUV2ZW50EiMudGtkLmNhbGVuZGFyLnYxLlVwZGF0ZUV2ZW50UmVxdWVzdBokLnRrZC5jYWxlbmRhci52MS5VcGRhdGVFdmVudFJlc3BvbnNlIgWyfgIIARJZCglNb3ZlRXZlbnQSIS50a2QuY2FsZW5kYXIudjEuTW92ZUV2ZW50UmVxdWVzdBoiLnRrZC5jYWxlbmRhci52MS5Nb3ZlRXZlbnRSZXNwb25zZSIFsn4CCAESXwoLRGVsZXRlRXZlbnQSIy50a2QuY2FsZW5kYXIudjEuRGVsZXRlRXZlbnRSZXF1ZXN0GiQudGtkLmNhbGVuZGFyLnYxLkRlbGV0ZUV2ZW50UmVzcG9uc2UiBbJ+AggBQs8BChNjb20udGtkLmNhbGVuZGFyLnYxQhFFdmVudFNlcnZpY2VQcm90b1ABWkdnaXRodWIuY29tL3RpZXJrbGluaWstZG9iZXJzYmVyZy9hcGlzL2dlbi9nby90a2QvY2FsZW5kYXIvdjE7Y2FsZW5kYXJ2MaICA1RDWKoCD1RrZC5DYWxlbmRhci5WMcoCD1RrZFxDYWxlbmRhclxWMeICG1RrZFxDYWxlbmRhclxWMVxHUEJNZXRhZGF0YeoCEVRrZDo6Q2FsZW5kYXI6OlYxYgZwcm90bzM", [file_tkd_calendar_v1_event, file_google_protobuf_timestamp, file_google_protobuf_any, file_google_protobuf_field_mask, file_tkd_common_v1_descriptor, file_tkd_common_v1_time_range, file_buf_validate_validate]);

/**
 * Describes the message tkd.calendar.v1.ListCalendarsRequest.
 * Use `create(ListCalendarsRequestSchema)` to create a new message.
 */
export const ListCalendarsRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 0);

/**
 * Describes the message tkd.calendar.v1.ListCalendarsResponse.
 * Use `create(ListCalendarsResponseSchema)` to create a new message.
 */
export const ListCalendarsResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 1);

/**
 * Describes the message tkd.calendar.v1.EventSource.
 * Use `create(EventSourceSchema)` to create a new message.
 */
export const EventSourceSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 2);

/**
 * Describes the message tkd.calendar.v1.ListEventsRequest.
 * Use `create(ListEventsRequestSchema)` to create a new message.
 */
export const ListEventsRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 3);

/**
 * Describes the message tkd.calendar.v1.CalendarEventList.
 * Use `create(CalendarEventListSchema)` to create a new message.
 */
export const CalendarEventListSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 4);

/**
 * Describes the message tkd.calendar.v1.ListEventsResponse.
 * Use `create(ListEventsResponseSchema)` to create a new message.
 */
export const ListEventsResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 5);

/**
 * Describes the message tkd.calendar.v1.CreateEventRequest.
 * Use `create(CreateEventRequestSchema)` to create a new message.
 */
export const CreateEventRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 6);

/**
 * Describes the message tkd.calendar.v1.CreateEventResponse.
 * Use `create(CreateEventResponseSchema)` to create a new message.
 */
export const CreateEventResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 7);

/**
 * Describes the message tkd.calendar.v1.UpdateEventRequest.
 * Use `create(UpdateEventRequestSchema)` to create a new message.
 */
export const UpdateEventRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 8);

/**
 * Describes the message tkd.calendar.v1.UpdateEventResponse.
 * Use `create(UpdateEventResponseSchema)` to create a new message.
 */
export const UpdateEventResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 9);

/**
 * Describes the message tkd.calendar.v1.MoveEventRequest.
 * Use `create(MoveEventRequestSchema)` to create a new message.
 */
export const MoveEventRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 10);

/**
 * Describes the message tkd.calendar.v1.MoveEventResponse.
 * Use `create(MoveEventResponseSchema)` to create a new message.
 */
export const MoveEventResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 11);

/**
 * Describes the message tkd.calendar.v1.DeleteEventRequest.
 * Use `create(DeleteEventRequestSchema)` to create a new message.
 */
export const DeleteEventRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 12);

/**
 * Describes the message tkd.calendar.v1.DeleteEventResponse.
 * Use `create(DeleteEventResponseSchema)` to create a new message.
 */
export const DeleteEventResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_calendar_v1_event_service, 13);

/**
 * CalendarService provides RPC methods for retrieving, creating and managing
 * events from one or more calendars. While the current implementation in
 * cis-cal only supports the Google Calendar as a storage backend, future
 * implementation might add support for different backends. For this reason, not
 * all features from the Google Calendar API are exposed here since it might not
 * be reasonable to re-implement those features with different calendar
 * backends.
 *
 * @generated from service tkd.calendar.v1.CalendarService
 */
export const CalendarService = /*@__PURE__*/
  serviceDesc(file_tkd_calendar_v1_event_service, 0);

