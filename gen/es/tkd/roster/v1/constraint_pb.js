// @generated by protoc-gen-es v1.4.2 with parameter "target=js+dts"
// @generated from file tkd/roster/v1/constraint.proto (package tkd.roster.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3, Timestamp } from "@bufbuild/protobuf";
import { OffTimeEntry } from "./offtime_pb.js";

/**
 * OffTimeViolation is a constraint type due to a off-time request.
 *
 * @generated from message tkd.roster.v1.OffTimeViolation
 */
export const OffTimeViolation = proto3.makeMessageType(
  "tkd.roster.v1.OffTimeViolation",
  () => [
    { no: 1, name: "entry", kind: "message", T: OffTimeEntry },
  ],
);

/**
 * ConstraintEvaluationViolation is a constraint type that is the result
 * of evaluating a constraint expression for a user or roster.
 *
 * @generated from message tkd.roster.v1.ConstraintEvaluationViolation
 */
export const ConstraintEvaluationViolation = proto3.makeMessageType(
  "tkd.roster.v1.ConstraintEvaluationViolation",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ConstraintViolation is a violation of a constraint for a given
 * user or roster.
 *
 * @generated from message tkd.roster.v1.ConstraintViolation
 */
export const ConstraintViolation = proto3.makeMessageType(
  "tkd.roster.v1.ConstraintViolation",
  () => [
    { no: 1, name: "hard", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "off_time", kind: "message", T: OffTimeViolation, oneof: "kind" },
    { no: 3, name: "evaluation", kind: "message", T: ConstraintEvaluationViolation, oneof: "kind" },
  ],
);

/**
 * ConstraintViolationList holds all ConstraintViolations for a
 * user.
 *
 * @generated from message tkd.roster.v1.ConstraintViolationList
 */
export const ConstraintViolationList = proto3.makeMessageType(
  "tkd.roster.v1.ConstraintViolationList",
  () => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "violations", kind: "message", T: ConstraintViolation, repeated: true },
  ],
);

/**
 * @generated from message tkd.roster.v1.Constraint
 */
export const Constraint = proto3.makeMessageType(
  "tkd.roster.v1.Constraint",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "role_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "user_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "hard", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "penalty", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 8, name: "deny", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "roster_only", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "created_at", kind: "message", T: Timestamp },
    { no: 11, name: "creator_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "updated_at", kind: "message", T: Timestamp },
    { no: 13, name: "last_updated_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message tkd.roster.v1.CreateConstraintRequest
 */
export const CreateConstraintRequest = proto3.makeMessageType(
  "tkd.roster.v1.CreateConstraintRequest",
  () => [
    { no: 1, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "role_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "user_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "hard", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "penalty", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 7, name: "deny", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "roster_only", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message tkd.roster.v1.CreateConstraintResponse
 */
export const CreateConstraintResponse = proto3.makeMessageType(
  "tkd.roster.v1.CreateConstraintResponse",
  () => [
    { no: 1, name: "constraint", kind: "message", T: Constraint },
  ],
);

/**
 * @generated from message tkd.roster.v1.UpdateConstraintRequest
 */
export const UpdateConstraintRequest = proto3.makeMessageType(
  "tkd.roster.v1.UpdateConstraintRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expression", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "role_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "user_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "hard", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "penalty", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 8, name: "deny", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "roster_only", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 20, name: "write_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * @generated from message tkd.roster.v1.UpdateConstraintResponse
 */
export const UpdateConstraintResponse = proto3.makeMessageType(
  "tkd.roster.v1.UpdateConstraintResponse",
  () => [
    { no: 1, name: "constraint", kind: "message", T: Constraint },
  ],
);

/**
 * @generated from message tkd.roster.v1.DeleteConstraintRequest
 */
export const DeleteConstraintRequest = proto3.makeMessageType(
  "tkd.roster.v1.DeleteConstraintRequest",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message tkd.roster.v1.DeleteConstraintResponse
 */
export const DeleteConstraintResponse = proto3.makeMessageType(
  "tkd.roster.v1.DeleteConstraintResponse",
  [],
);

/**
 * @generated from message tkd.roster.v1.FindConstraintsRequest
 */
export const FindConstraintsRequest = proto3.makeMessageType(
  "tkd.roster.v1.FindConstraintsRequest",
  () => [
    { no: 1, name: "user_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "role_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message tkd.roster.v1.FindConstraintsResponse
 */
export const FindConstraintsResponse = proto3.makeMessageType(
  "tkd.roster.v1.FindConstraintsResponse",
  () => [
    { no: 1, name: "results", kind: "message", T: Constraint, repeated: true },
  ],
);

