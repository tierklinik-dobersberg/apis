// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file tkd/roster/v1/worktime.proto (package tkd.roster.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Duration, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import type { OffTimeCosts } from "./offtime_pb";

/**
 * Describes the file tkd/roster/v1/worktime.proto.
 */
export declare const file_tkd_roster_v1_worktime: GenFile;

/**
 * WorkTime describes the regular work time for a given user.
 *
 * @generated from message tkd.roster.v1.WorkTime
 */
export declare type WorkTime = Message<"tkd.roster.v1.WorkTime"> & {
  /**
   * Id is a unique identifier for this work-time entry.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * UserId holds the ID of the user this work-time entry belongs to.
   *
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * TimePerWeek defines the regular working time per week.
   *
   * @generated from field: google.protobuf.Duration time_per_week = 3;
   */
  timePerWeek?: Duration;

  /**
   * ApplicableAfter defines the date at which this work-time entry
   * is considered active.
   *
   * Format: YYYY-MM-DD
   *
   * @generated from field: string applicable_after = 4;
   */
  applicableAfter: string;

  /**
   * VacationWeeksPerYear defines how many weeks of vacation should
   * be granted to UserId in a full-year of work time.
   *
   * @generated from field: float vacation_weeks_per_year = 5;
   */
  vacationWeeksPerYear: number;

  /**
   * Overtime Allowance per month.
   *
   * @generated from field: google.protobuf.Duration overtime_allowance_per_month = 6;
   */
  overtimeAllowancePerMonth?: Duration;

  /**
   * Whether or not the user should be excluded from time-tracking.
   *
   * @generated from field: bool exclude_from_time_tracking = 7;
   */
  excludeFromTimeTracking: boolean;

  /**
   * An optional timestamp _AFTER_ which this work-time entry ends.
   *
   * Format: YYYY-MM-DD
   *
   * @generated from field: string ends_with = 8;
   */
  endsWith: string;
};

/**
 * Describes the message tkd.roster.v1.WorkTime.
 * Use `create(WorkTimeSchema)` to create a new message.
 */
export declare const WorkTimeSchema: GenMessage<WorkTime>;

/**
 * @generated from message tkd.roster.v1.SetWorkTimeRequest
 */
export declare type SetWorkTimeRequest = Message<"tkd.roster.v1.SetWorkTimeRequest"> & {
  /**
   * @generated from field: repeated tkd.roster.v1.WorkTime work_times = 1;
   */
  workTimes: WorkTime[];
};

/**
 * Describes the message tkd.roster.v1.SetWorkTimeRequest.
 * Use `create(SetWorkTimeRequestSchema)` to create a new message.
 */
export declare const SetWorkTimeRequestSchema: GenMessage<SetWorkTimeRequest>;

/**
 * @generated from message tkd.roster.v1.SetWorkTimeResponse
 */
export declare type SetWorkTimeResponse = Message<"tkd.roster.v1.SetWorkTimeResponse"> & {
  /**
   * @generated from field: repeated tkd.roster.v1.WorkTime work_times = 1;
   */
  workTimes: WorkTime[];
};

/**
 * Describes the message tkd.roster.v1.SetWorkTimeResponse.
 * Use `create(SetWorkTimeResponseSchema)` to create a new message.
 */
export declare const SetWorkTimeResponseSchema: GenMessage<SetWorkTimeResponse>;

/**
 * @generated from message tkd.roster.v1.GetWorkTimeRequest
 */
export declare type GetWorkTimeRequest = Message<"tkd.roster.v1.GetWorkTimeRequest"> & {
  /**
   * UserIds is a list of user IDs for which the work-time should
   * be returned.
   *
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];

  /**
   * ReadMask defines which fields of the response should be populated.
   * The field-mask is applied to the `result` field of the GetWorkTimeResponse.
   * For example, to only retrieve the user_id and the current work time specify
   * a read_mask like this:
   *
   * {
   *    read_mask: {
   *      paths: [
   *          "user_id",
   *          "current",
   *      ]
   *    }    
   * }
   *
   *
   * @generated from field: google.protobuf.FieldMask read_mask = 2;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message tkd.roster.v1.GetWorkTimeRequest.
 * Use `create(GetWorkTimeRequestSchema)` to create a new message.
 */
export declare const GetWorkTimeRequestSchema: GenMessage<GetWorkTimeRequest>;

/**
 * @generated from message tkd.roster.v1.UserWorkTime
 */
export declare type UserWorkTime = Message<"tkd.roster.v1.UserWorkTime"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: tkd.roster.v1.WorkTime current = 2;
   */
  current?: WorkTime;

  /**
   * @generated from field: repeated tkd.roster.v1.WorkTime history = 3;
   */
  history: WorkTime[];
};

/**
 * Describes the message tkd.roster.v1.UserWorkTime.
 * Use `create(UserWorkTimeSchema)` to create a new message.
 */
export declare const UserWorkTimeSchema: GenMessage<UserWorkTime>;

/**
 * @generated from message tkd.roster.v1.GetWorkTimeResponse
 */
export declare type GetWorkTimeResponse = Message<"tkd.roster.v1.GetWorkTimeResponse"> & {
  /**
   * @generated from field: repeated tkd.roster.v1.UserWorkTime results = 1;
   */
  results: UserWorkTime[];
};

/**
 * Describes the message tkd.roster.v1.GetWorkTimeResponse.
 * Use `create(GetWorkTimeResponseSchema)` to create a new message.
 */
export declare const GetWorkTimeResponseSchema: GenMessage<GetWorkTimeResponse>;

/**
 * @generated from message tkd.roster.v1.SumForUsers
 */
export declare type SumForUsers = Message<"tkd.roster.v1.SumForUsers"> & {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];
};

/**
 * Describes the message tkd.roster.v1.SumForUsers.
 * Use `create(SumForUsersSchema)` to create a new message.
 */
export declare const SumForUsersSchema: GenMessage<SumForUsers>;

/**
 * @generated from message tkd.roster.v1.GetVacationCreditsLeftRequest
 */
export declare type GetVacationCreditsLeftRequest = Message<"tkd.roster.v1.GetVacationCreditsLeftRequest"> & {
  /**
   * @generated from field: tkd.roster.v1.SumForUsers for_users = 1;
   */
  forUsers?: SumForUsers;

  /**
   * @generated from field: google.protobuf.Timestamp until = 2;
   */
  until?: Timestamp;

  /**
   * @generated from field: bool analyze = 3;
   */
  analyze: boolean;
};

/**
 * Describes the message tkd.roster.v1.GetVacationCreditsLeftRequest.
 * Use `create(GetVacationCreditsLeftRequestSchema)` to create a new message.
 */
export declare const GetVacationCreditsLeftRequestSchema: GenMessage<GetVacationCreditsLeftRequest>;

/**
 * @generated from message tkd.roster.v1.AnalyzeVacationSum
 */
export declare type AnalyzeVacationSum = Message<"tkd.roster.v1.AnalyzeVacationSum"> & {
  /**
   * @generated from field: tkd.roster.v1.WorkTime work_time = 1;
   */
  workTime?: WorkTime;

  /**
   * @generated from field: google.protobuf.Timestamp ends_at = 2;
   */
  endsAt?: Timestamp;

  /**
   * @generated from field: double number_of_days = 3;
   */
  numberOfDays: number;

  /**
   * @generated from field: double vacation_weeks_per_day = 4;
   */
  vacationWeeksPerDay: number;

  /**
   * @generated from field: google.protobuf.Duration vacation_per_work_time = 5;
   */
  vacationPerWorkTime?: Duration;

  /**
   * @generated from field: repeated tkd.roster.v1.OffTimeCosts costs = 6;
   */
  costs: OffTimeCosts[];

  /**
   * @generated from field: google.protobuf.Duration costs_sum = 7;
   */
  costsSum?: Duration;
};

/**
 * Describes the message tkd.roster.v1.AnalyzeVacationSum.
 * Use `create(AnalyzeVacationSumSchema)` to create a new message.
 */
export declare const AnalyzeVacationSumSchema: GenMessage<AnalyzeVacationSum>;

/**
 * @generated from message tkd.roster.v1.AnalyzeVacation
 */
export declare type AnalyzeVacation = Message<"tkd.roster.v1.AnalyzeVacation"> & {
  /**
   * @generated from field: repeated tkd.roster.v1.AnalyzeVacationSum slices = 1;
   */
  slices: AnalyzeVacationSum[];
};

/**
 * Describes the message tkd.roster.v1.AnalyzeVacation.
 * Use `create(AnalyzeVacationSchema)` to create a new message.
 */
export declare const AnalyzeVacationSchema: GenMessage<AnalyzeVacation>;

/**
 * @generated from message tkd.roster.v1.UserVacationSum
 */
export declare type UserVacationSum = Message<"tkd.roster.v1.UserVacationSum"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: google.protobuf.Duration vacation_credits_left = 2;
   */
  vacationCreditsLeft?: Duration;

  /**
   * @generated from field: google.protobuf.Duration time_off_credits = 3;
   */
  timeOffCredits?: Duration;

  /**
   * @generated from field: tkd.roster.v1.AnalyzeVacation analysis = 4;
   */
  analysis?: AnalyzeVacation;
};

/**
 * Describes the message tkd.roster.v1.UserVacationSum.
 * Use `create(UserVacationSumSchema)` to create a new message.
 */
export declare const UserVacationSumSchema: GenMessage<UserVacationSum>;

/**
 * @generated from message tkd.roster.v1.GetVacationCreditsLeftResponse
 */
export declare type GetVacationCreditsLeftResponse = Message<"tkd.roster.v1.GetVacationCreditsLeftResponse"> & {
  /**
   * @generated from field: repeated tkd.roster.v1.UserVacationSum results = 1;
   */
  results: UserVacationSum[];
};

/**
 * Describes the message tkd.roster.v1.GetVacationCreditsLeftResponse.
 * Use `create(GetVacationCreditsLeftResponseSchema)` to create a new message.
 */
export declare const GetVacationCreditsLeftResponseSchema: GenMessage<GetVacationCreditsLeftResponse>;

/**
 * @generated from message tkd.roster.v1.DeleteWorkTimeRequest
 */
export declare type DeleteWorkTimeRequest = Message<"tkd.roster.v1.DeleteWorkTimeRequest"> & {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message tkd.roster.v1.DeleteWorkTimeRequest.
 * Use `create(DeleteWorkTimeRequestSchema)` to create a new message.
 */
export declare const DeleteWorkTimeRequestSchema: GenMessage<DeleteWorkTimeRequest>;

/**
 * @generated from message tkd.roster.v1.DeleteWorkTimeResponse
 */
export declare type DeleteWorkTimeResponse = Message<"tkd.roster.v1.DeleteWorkTimeResponse"> & {
};

/**
 * Describes the message tkd.roster.v1.DeleteWorkTimeResponse.
 * Use `create(DeleteWorkTimeResponseSchema)` to create a new message.
 */
export declare const DeleteWorkTimeResponseSchema: GenMessage<DeleteWorkTimeResponse>;

/**
 * @generated from message tkd.roster.v1.UpdateWorkTimeRequest
 */
export declare type UpdateWorkTimeRequest = Message<"tkd.roster.v1.UpdateWorkTimeRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: bool exclude_from_time_tracking = 2;
   */
  excludeFromTimeTracking: boolean;

  /**
   * Format: YYYY-MM-DD
   *
   * @generated from field: string ends_with = 3;
   */
  endsWith: string;

  /**
   * @generated from field: google.protobuf.FieldMask field_mask = 4;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message tkd.roster.v1.UpdateWorkTimeRequest.
 * Use `create(UpdateWorkTimeRequestSchema)` to create a new message.
 */
export declare const UpdateWorkTimeRequestSchema: GenMessage<UpdateWorkTimeRequest>;

/**
 * @generated from message tkd.roster.v1.UpdateWorkTimeResponse
 */
export declare type UpdateWorkTimeResponse = Message<"tkd.roster.v1.UpdateWorkTimeResponse"> & {
  /**
   * @generated from field: tkd.roster.v1.WorkTime worktime = 1;
   */
  worktime?: WorkTime;
};

/**
 * Describes the message tkd.roster.v1.UpdateWorkTimeResponse.
 * Use `create(UpdateWorkTimeResponseSchema)` to create a new message.
 */
export declare const UpdateWorkTimeResponseSchema: GenMessage<UpdateWorkTimeResponse>;

/**
 * @generated from service tkd.roster.v1.WorkTimeService
 */
export declare const WorkTimeService: GenService<{
  /**
   * @generated from rpc tkd.roster.v1.WorkTimeService.SetWorkTime
   */
  setWorkTime: {
    methodKind: "unary";
    input: typeof SetWorkTimeRequestSchema;
    output: typeof SetWorkTimeResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.WorkTimeService.GetWorkTime
   */
  getWorkTime: {
    methodKind: "unary";
    input: typeof GetWorkTimeRequestSchema;
    output: typeof GetWorkTimeResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.WorkTimeService.UpdateWorkTime
   */
  updateWorkTime: {
    methodKind: "unary";
    input: typeof UpdateWorkTimeRequestSchema;
    output: typeof UpdateWorkTimeResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.WorkTimeService.GetVacationCreditsLeft
   */
  getVacationCreditsLeft: {
    methodKind: "unary";
    input: typeof GetVacationCreditsLeftRequestSchema;
    output: typeof GetVacationCreditsLeftResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.WorkTimeService.DeleteWorkTime
   */
  deleteWorkTime: {
    methodKind: "unary";
    input: typeof DeleteWorkTimeRequestSchema;
    output: typeof DeleteWorkTimeResponseSchema;
  },
}>;

