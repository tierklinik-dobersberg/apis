// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file tkd/roster/v1/offtime.proto (package tkd.roster.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Duration, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file tkd/roster/v1/offtime.proto.
 */
export declare const file_tkd_roster_v1_offtime: GenFile;

/**
 * @generated from message tkd.roster.v1.OffTimeApproval
 */
export declare type OffTimeApproval = Message<"tkd.roster.v1.OffTimeApproval"> & {
  /**
   * Approved is set to true when the off-time request has been approved
   * by a manager.
   *
   * @generated from field: bool approved = 2;
   */
  approved: boolean;

  /**
   * ApprovedAt is set to the time-stamp the off-time request has been
   * approved.
   *
   * @generated from field: google.protobuf.Timestamp approved_at = 3;
   */
  approvedAt?: Timestamp;

  /**
   * ApproverId holds the ID of the user that approved the request.
   *
   * @generated from field: string approver_id = 4;
   */
  approverId: string;

  /**
   * Comment may hold an additional comment from management.
   *
   * @generated from field: string comment = 5;
   */
  comment: string;
};

/**
 * Describes the message tkd.roster.v1.OffTimeApproval.
 * Use `create(OffTimeApprovalSchema)` to create a new message.
 */
export declare const OffTimeApprovalSchema: GenMessage<OffTimeApproval>;

/**
 * @generated from message tkd.roster.v1.OffTimeCosts
 */
export declare type OffTimeCosts = Message<"tkd.roster.v1.OffTimeCosts"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * OfftimeId is the ID of the off-time request, if any.
   *
   * @generated from field: string offtime_id = 2;
   */
  offtimeId: string;

  /**
   * RosterId is the ID of the roster this OffTimeCosts belong to.
   *
   * @generated from field: string roster_id = 3;
   */
  rosterId: string;

  /**
   * UserId is the ID of the user this off-time costs belong to.
   *
   * @generated from field: string user_id = 4;
   */
  userId: string;

  /**
   * CreatedAt is set to the time this off-time-costs entry has been
   * created. This field must not be set during OffTimeService.AddOffTimeCosts.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * CreatorId holds the ID of the user that created this entry.
   * This field must not be set during OffTimeService.AddOffTimeCosts.
   *
   * @generated from field: string creator_id = 6;
   */
  creatorId: string;

  /**
   * The actual duration costs of this entry.
   *
   * @generated from field: google.protobuf.Duration costs = 7;
   */
  costs?: Duration;

  /**
   * IsVacation is set to true if the off-time-costs apply to the vacation
   * credits. If set to false, the off-time costs are for time compensation.
   *
   * @generated from field: bool is_vacation = 8;
   */
  isVacation: boolean;

  /**
   * Date holds the date of the off-time costs.
   *
   * @generated from field: google.protobuf.Timestamp date = 9;
   */
  date?: Timestamp;

  /**
   * Comment may holde an optional comment for the off-time costs.
   *
   * @generated from field: string comment = 10;
   */
  comment: string;
};

/**
 * Describes the message tkd.roster.v1.OffTimeCosts.
 * Use `create(OffTimeCostsSchema)` to create a new message.
 */
export declare const OffTimeCostsSchema: GenMessage<OffTimeCosts>;

/**
 * @generated from message tkd.roster.v1.OffTimeEntry
 */
export declare type OffTimeEntry = Message<"tkd.roster.v1.OffTimeEntry"> & {
  /**
   * Id is a unique identifier for this off-time entry.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * RequestorId is the ID of the user that requested off-time.
   *
   * @generated from field: string requestor_id = 2;
   */
  requestorId: string;

  /**
   * The date/time (inclusive) at which the off-time should start.
   *
   * @generated from field: google.protobuf.Timestamp from = 3;
   */
  from?: Timestamp;

  /**
   * The date/time (inclusive) at which the off-time should end.
   *
   * @generated from field: google.protobuf.Timestamp to = 4;
   */
  to?: Timestamp;

  /**
   * An optional description for management in Markdown format.
   *
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * The type of the off-time request.
   *
   * @generated from field: tkd.roster.v1.OffTimeType type = 6;
   */
  type: OffTimeType;

  /**
   * If approved/rejected by management, this field will be poluated.
   *
   * @generated from field: tkd.roster.v1.OffTimeApproval approval = 7;
   */
  approval?: OffTimeApproval;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: string creator_id = 9;
   */
  creatorId: string;
};

/**
 * Describes the message tkd.roster.v1.OffTimeEntry.
 * Use `create(OffTimeEntrySchema)` to create a new message.
 */
export declare const OffTimeEntrySchema: GenMessage<OffTimeEntry>;

/**
 * @generated from message tkd.roster.v1.GetOffTimeEntryRequest
 */
export declare type GetOffTimeEntryRequest = Message<"tkd.roster.v1.GetOffTimeEntryRequest"> & {
  /**
   * A list of OffTimeEntry IDs to load.
   *
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message tkd.roster.v1.GetOffTimeEntryRequest.
 * Use `create(GetOffTimeEntryRequestSchema)` to create a new message.
 */
export declare const GetOffTimeEntryRequestSchema: GenMessage<GetOffTimeEntryRequest>;

/**
 * @generated from message tkd.roster.v1.GetOffTimeEntryResponse
 */
export declare type GetOffTimeEntryResponse = Message<"tkd.roster.v1.GetOffTimeEntryResponse"> & {
  /**
   * @generated from field: repeated tkd.roster.v1.OffTimeEntry entry = 1;
   */
  entry: OffTimeEntry[];
};

/**
 * Describes the message tkd.roster.v1.GetOffTimeEntryResponse.
 * Use `create(GetOffTimeEntryResponseSchema)` to create a new message.
 */
export declare const GetOffTimeEntryResponseSchema: GenMessage<GetOffTimeEntryResponse>;

/**
 * @generated from message tkd.roster.v1.CreateOffTimeRequestRequest
 */
export declare type CreateOffTimeRequestRequest = Message<"tkd.roster.v1.CreateOffTimeRequestRequest"> & {
  /**
   * @generated from field: google.protobuf.Timestamp from = 1;
   */
  from?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp to = 2;
   */
  to?: Timestamp;

  /**
   * The ID of the user that requests off-time. Only administrators may
   * set this field.
   * For non-administrators, or if the field is empty, it defaults to the
   * user-id that performs the request.
   *
   * @generated from field: string requestor_id = 3;
   */
  requestorId: string;

  /**
   * An optional description of the off-time-request.
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * The type of off-time request.
   *
   * @generated from field: tkd.roster.v1.OffTimeType request_type = 5;
   */
  requestType: OffTimeType;
};

/**
 * Describes the message tkd.roster.v1.CreateOffTimeRequestRequest.
 * Use `create(CreateOffTimeRequestRequestSchema)` to create a new message.
 */
export declare const CreateOffTimeRequestRequestSchema: GenMessage<CreateOffTimeRequestRequest>;

/**
 * @generated from message tkd.roster.v1.CreateOffTimeRequestResponse
 */
export declare type CreateOffTimeRequestResponse = Message<"tkd.roster.v1.CreateOffTimeRequestResponse"> & {
  /**
   * Holds the created off-time request entry.
   *
   * @generated from field: tkd.roster.v1.OffTimeEntry entry = 1;
   */
  entry?: OffTimeEntry;
};

/**
 * Describes the message tkd.roster.v1.CreateOffTimeRequestResponse.
 * Use `create(CreateOffTimeRequestResponseSchema)` to create a new message.
 */
export declare const CreateOffTimeRequestResponseSchema: GenMessage<CreateOffTimeRequestResponse>;

/**
 * @generated from message tkd.roster.v1.UpdateOffTimeRequestRequest
 */
export declare type UpdateOffTimeRequestRequest = Message<"tkd.roster.v1.UpdateOffTimeRequestRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: google.protobuf.Timestamp from = 2;
   */
  from?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp to = 3;
   */
  to?: Timestamp;

  /**
   * @generated from field: string requestor_id = 4;
   */
  requestorId: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: tkd.roster.v1.OffTimeType request_type = 6;
   */
  requestType: OffTimeType;

  /**
   * @generated from field: google.protobuf.FieldMask field_mask = 7;
   */
  fieldMask?: FieldMask;
};

/**
 * Describes the message tkd.roster.v1.UpdateOffTimeRequestRequest.
 * Use `create(UpdateOffTimeRequestRequestSchema)` to create a new message.
 */
export declare const UpdateOffTimeRequestRequestSchema: GenMessage<UpdateOffTimeRequestRequest>;

/**
 * @generated from message tkd.roster.v1.UpdateOffTimeRequestResponse
 */
export declare type UpdateOffTimeRequestResponse = Message<"tkd.roster.v1.UpdateOffTimeRequestResponse"> & {
  /**
   * @generated from field: tkd.roster.v1.OffTimeEntry entry = 1;
   */
  entry?: OffTimeEntry;
};

/**
 * Describes the message tkd.roster.v1.UpdateOffTimeRequestResponse.
 * Use `create(UpdateOffTimeRequestResponseSchema)` to create a new message.
 */
export declare const UpdateOffTimeRequestResponseSchema: GenMessage<UpdateOffTimeRequestResponse>;

/**
 * Request deletion of one or more off-time-request.
 *
 * @generated from message tkd.roster.v1.DeleteOffTimeRequestRequest
 */
export declare type DeleteOffTimeRequestRequest = Message<"tkd.roster.v1.DeleteOffTimeRequestRequest"> & {
  /**
   * @generated from field: repeated string id = 1;
   */
  id: string[];
};

/**
 * Describes the message tkd.roster.v1.DeleteOffTimeRequestRequest.
 * Use `create(DeleteOffTimeRequestRequestSchema)` to create a new message.
 */
export declare const DeleteOffTimeRequestRequestSchema: GenMessage<DeleteOffTimeRequestRequest>;

/**
 * @generated from message tkd.roster.v1.DeleteOffTimeRequestResponse
 */
export declare type DeleteOffTimeRequestResponse = Message<"tkd.roster.v1.DeleteOffTimeRequestResponse"> & {
};

/**
 * Describes the message tkd.roster.v1.DeleteOffTimeRequestResponse.
 * Use `create(DeleteOffTimeRequestResponseSchema)` to create a new message.
 */
export declare const DeleteOffTimeRequestResponseSchema: GenMessage<DeleteOffTimeRequestResponse>;

/**
 * @generated from message tkd.roster.v1.FindOffTimeRequestsRequest
 */
export declare type FindOffTimeRequestsRequest = Message<"tkd.roster.v1.FindOffTimeRequestsRequest"> & {
  /**
   * @generated from field: google.protobuf.Timestamp from = 1;
   */
  from?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp to = 2;
   */
  to?: Timestamp;

  /**
   * @generated from field: repeated string user_ids = 3;
   */
  userIds: string[];

  /**
   * @generated from field: google.protobuf.BoolValue approved = 4;
   */
  approved?: boolean;

  /**
   * @generated from field: google.protobuf.FieldMask read_mask = 5;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message tkd.roster.v1.FindOffTimeRequestsRequest.
 * Use `create(FindOffTimeRequestsRequestSchema)` to create a new message.
 */
export declare const FindOffTimeRequestsRequestSchema: GenMessage<FindOffTimeRequestsRequest>;

/**
 * @generated from message tkd.roster.v1.FindOffTimeRequestsResponse
 */
export declare type FindOffTimeRequestsResponse = Message<"tkd.roster.v1.FindOffTimeRequestsResponse"> & {
  /**
   * @generated from field: repeated tkd.roster.v1.OffTimeEntry results = 1;
   */
  results: OffTimeEntry[];
};

/**
 * Describes the message tkd.roster.v1.FindOffTimeRequestsResponse.
 * Use `create(FindOffTimeRequestsResponseSchema)` to create a new message.
 */
export declare const FindOffTimeRequestsResponseSchema: GenMessage<FindOffTimeRequestsResponse>;

/**
 * @generated from message tkd.roster.v1.ApproveOrRejectRequest
 */
export declare type ApproveOrRejectRequest = Message<"tkd.roster.v1.ApproveOrRejectRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string comment = 2;
   */
  comment: string;

  /**
   * @generated from field: tkd.roster.v1.ApprovalRequestType type = 3;
   */
  type: ApprovalRequestType;
};

/**
 * Describes the message tkd.roster.v1.ApproveOrRejectRequest.
 * Use `create(ApproveOrRejectRequestSchema)` to create a new message.
 */
export declare const ApproveOrRejectRequestSchema: GenMessage<ApproveOrRejectRequest>;

/**
 * @generated from message tkd.roster.v1.ApproveOrRejectResponse
 */
export declare type ApproveOrRejectResponse = Message<"tkd.roster.v1.ApproveOrRejectResponse"> & {
  /**
   * @generated from field: tkd.roster.v1.OffTimeEntry entry = 1;
   */
  entry?: OffTimeEntry;
};

/**
 * Describes the message tkd.roster.v1.ApproveOrRejectResponse.
 * Use `create(ApproveOrRejectResponseSchema)` to create a new message.
 */
export declare const ApproveOrRejectResponseSchema: GenMessage<ApproveOrRejectResponse>;

/**
 * @generated from message tkd.roster.v1.AddOffTimeCostsRequest
 */
export declare type AddOffTimeCostsRequest = Message<"tkd.roster.v1.AddOffTimeCostsRequest"> & {
  /**
   * @generated from field: repeated tkd.roster.v1.OffTimeCosts add_costs = 1;
   */
  addCosts: OffTimeCosts[];
};

/**
 * Describes the message tkd.roster.v1.AddOffTimeCostsRequest.
 * Use `create(AddOffTimeCostsRequestSchema)` to create a new message.
 */
export declare const AddOffTimeCostsRequestSchema: GenMessage<AddOffTimeCostsRequest>;

/**
 * @generated from message tkd.roster.v1.AddOffTimeCostsResponse
 */
export declare type AddOffTimeCostsResponse = Message<"tkd.roster.v1.AddOffTimeCostsResponse"> & {
};

/**
 * Describes the message tkd.roster.v1.AddOffTimeCostsResponse.
 * Use `create(AddOffTimeCostsResponseSchema)` to create a new message.
 */
export declare const AddOffTimeCostsResponseSchema: GenMessage<AddOffTimeCostsResponse>;

/**
 * @generated from message tkd.roster.v1.CostsForUsers
 */
export declare type CostsForUsers = Message<"tkd.roster.v1.CostsForUsers"> & {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];
};

/**
 * Describes the message tkd.roster.v1.CostsForUsers.
 * Use `create(CostsForUsersSchema)` to create a new message.
 */
export declare const CostsForUsersSchema: GenMessage<CostsForUsers>;

/**
 * @generated from message tkd.roster.v1.GetOffTimeCostsRequest
 */
export declare type GetOffTimeCostsRequest = Message<"tkd.roster.v1.GetOffTimeCostsRequest"> & {
  /**
   * @generated from field: tkd.roster.v1.CostsForUsers for_users = 1;
   */
  forUsers?: CostsForUsers;

  /**
   * @generated from field: google.protobuf.FieldMask read_mask = 2;
   */
  readMask?: FieldMask;
};

/**
 * Describes the message tkd.roster.v1.GetOffTimeCostsRequest.
 * Use `create(GetOffTimeCostsRequestSchema)` to create a new message.
 */
export declare const GetOffTimeCostsRequestSchema: GenMessage<GetOffTimeCostsRequest>;

/**
 * @generated from message tkd.roster.v1.OffTimeCostSummary
 */
export declare type OffTimeCostSummary = Message<"tkd.roster.v1.OffTimeCostSummary"> & {
  /**
   * @generated from field: google.protobuf.Duration vacation = 1;
   */
  vacation?: Duration;

  /**
   * @generated from field: google.protobuf.Duration time_off = 2;
   */
  timeOff?: Duration;
};

/**
 * Describes the message tkd.roster.v1.OffTimeCostSummary.
 * Use `create(OffTimeCostSummarySchema)` to create a new message.
 */
export declare const OffTimeCostSummarySchema: GenMessage<OffTimeCostSummary>;

/**
 * @generated from message tkd.roster.v1.UserOffTimeCosts
 */
export declare type UserOffTimeCosts = Message<"tkd.roster.v1.UserOffTimeCosts"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: repeated tkd.roster.v1.OffTimeCosts costs = 2;
   */
  costs: OffTimeCosts[];

  /**
   * @generated from field: tkd.roster.v1.OffTimeCostSummary summary = 3;
   */
  summary?: OffTimeCostSummary;
};

/**
 * Describes the message tkd.roster.v1.UserOffTimeCosts.
 * Use `create(UserOffTimeCostsSchema)` to create a new message.
 */
export declare const UserOffTimeCostsSchema: GenMessage<UserOffTimeCosts>;

/**
 * @generated from message tkd.roster.v1.GetOffTimeCostsResponse
 */
export declare type GetOffTimeCostsResponse = Message<"tkd.roster.v1.GetOffTimeCostsResponse"> & {
  /**
   * @generated from field: repeated tkd.roster.v1.UserOffTimeCosts results = 1;
   */
  results: UserOffTimeCosts[];
};

/**
 * Describes the message tkd.roster.v1.GetOffTimeCostsResponse.
 * Use `create(GetOffTimeCostsResponseSchema)` to create a new message.
 */
export declare const GetOffTimeCostsResponseSchema: GenMessage<GetOffTimeCostsResponse>;

/**
 * @generated from message tkd.roster.v1.DeleteOffTimeCostsRequest
 */
export declare type DeleteOffTimeCostsRequest = Message<"tkd.roster.v1.DeleteOffTimeCostsRequest"> & {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * Describes the message tkd.roster.v1.DeleteOffTimeCostsRequest.
 * Use `create(DeleteOffTimeCostsRequestSchema)` to create a new message.
 */
export declare const DeleteOffTimeCostsRequestSchema: GenMessage<DeleteOffTimeCostsRequest>;

/**
 * @generated from message tkd.roster.v1.DeleteOffTimeCostsResponse
 */
export declare type DeleteOffTimeCostsResponse = Message<"tkd.roster.v1.DeleteOffTimeCostsResponse"> & {
};

/**
 * Describes the message tkd.roster.v1.DeleteOffTimeCostsResponse.
 * Use `create(DeleteOffTimeCostsResponseSchema)` to create a new message.
 */
export declare const DeleteOffTimeCostsResponseSchema: GenMessage<DeleteOffTimeCostsResponse>;

/**
 * @generated from enum tkd.roster.v1.OffTimeType
 */
export enum OffTimeType {
  /**
   * Unspecified means that the requestor does not care whether the off-time
   * is based on vacation credits of time compenstation.
   *
   * @generated from enum value: OFF_TIME_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Vacation is used to tell the manager that this off-time is highly required
   * and the requestor is fine with spending vacation credits.
   *
   * @generated from enum value: OFF_TIME_TYPE_VACATION = 1;
   */
  VACATION = 1,

  /**
   * TimeOff is used to tell the manager that this off-time is not mandatory
   * and that the requestor is only willing to spend time-compensation.
   *
   * @generated from enum value: OFF_TIME_TYPE_TIME_OFF = 2;
   */
  TIME_OFF = 2,
}

/**
 * Describes the enum tkd.roster.v1.OffTimeType.
 */
export declare const OffTimeTypeSchema: GenEnum<OffTimeType>;

/**
 * @generated from enum tkd.roster.v1.ApprovalRequestType
 */
export enum ApprovalRequestType {
  /**
   * @generated from enum value: APPROVAL_REQUEST_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: APPROVAL_REQUEST_TYPE_APPROVED = 1;
   */
  APPROVED = 1,

  /**
   * @generated from enum value: APPROVAL_REQUEST_TYPE_REJECTED = 2;
   */
  REJECTED = 2,
}

/**
 * Describes the enum tkd.roster.v1.ApprovalRequestType.
 */
export declare const ApprovalRequestTypeSchema: GenEnum<ApprovalRequestType>;

/**
 * @generated from service tkd.roster.v1.OffTimeService
 */
export declare const OffTimeService: GenService<{
  /**
   * @generated from rpc tkd.roster.v1.OffTimeService.GetOffTimeEntry
   */
  getOffTimeEntry: {
    methodKind: "unary";
    input: typeof GetOffTimeEntryRequestSchema;
    output: typeof GetOffTimeEntryResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.OffTimeService.CreateOffTimeRequest
   */
  createOffTimeRequest: {
    methodKind: "unary";
    input: typeof CreateOffTimeRequestRequestSchema;
    output: typeof CreateOffTimeRequestResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.OffTimeService.UpdateOffTimeRequest
   */
  updateOffTimeRequest: {
    methodKind: "unary";
    input: typeof UpdateOffTimeRequestRequestSchema;
    output: typeof UpdateOffTimeRequestResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.OffTimeService.DeleteOffTimeRequest
   */
  deleteOffTimeRequest: {
    methodKind: "unary";
    input: typeof DeleteOffTimeRequestRequestSchema;
    output: typeof DeleteOffTimeRequestResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.OffTimeService.FindOffTimeRequests
   */
  findOffTimeRequests: {
    methodKind: "unary";
    input: typeof FindOffTimeRequestsRequestSchema;
    output: typeof FindOffTimeRequestsResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.OffTimeService.ApproveOrReject
   */
  approveOrReject: {
    methodKind: "unary";
    input: typeof ApproveOrRejectRequestSchema;
    output: typeof ApproveOrRejectResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.OffTimeService.AddOffTimeCosts
   */
  addOffTimeCosts: {
    methodKind: "unary";
    input: typeof AddOffTimeCostsRequestSchema;
    output: typeof AddOffTimeCostsResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.OffTimeService.GetOffTimeCosts
   */
  getOffTimeCosts: {
    methodKind: "unary";
    input: typeof GetOffTimeCostsRequestSchema;
    output: typeof GetOffTimeCostsResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.OffTimeService.DeleteOffTimeCosts
   */
  deleteOffTimeCosts: {
    methodKind: "unary";
    input: typeof DeleteOffTimeCostsRequestSchema;
    output: typeof DeleteOffTimeCostsResponseSchema;
  },
}>;

