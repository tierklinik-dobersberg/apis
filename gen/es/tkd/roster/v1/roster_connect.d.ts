// @generated by protoc-gen-connect-es v0.12.0 with parameter "target=js+dts"
// @generated from file tkd/roster/v1/roster.proto (package tkd.roster.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ApproveRosterRequest, ApproveRosterResponse, DeleteRosterRequest, DeleteRosterResponse, GetRosterRequest, GetRosterResponse, GetWorkingStaffRequest, GetWorkingStaffResponse, SessionRequest, SessionResponse } from "./roster_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service tkd.roster.v1.RosterService
 */
export declare const RosterService: {
  readonly typeName: "tkd.roster.v1.RosterService",
  readonly methods: {
    /**
     * @generated from rpc tkd.roster.v1.RosterService.Session
     */
    readonly session: {
      readonly name: "Session",
      readonly I: typeof SessionRequest,
      readonly O: typeof SessionResponse,
      readonly kind: MethodKind.BiDiStreaming,
    },
    /**
     * @generated from rpc tkd.roster.v1.RosterService.ApproveRoster
     */
    readonly approveRoster: {
      readonly name: "ApproveRoster",
      readonly I: typeof ApproveRosterRequest,
      readonly O: typeof ApproveRosterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.roster.v1.RosterService.DeleteRoster
     */
    readonly deleteRoster: {
      readonly name: "DeleteRoster",
      readonly I: typeof DeleteRosterRequest,
      readonly O: typeof DeleteRosterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.roster.v1.RosterService.GetRoster
     */
    readonly getRoster: {
      readonly name: "GetRoster",
      readonly I: typeof GetRosterRequest,
      readonly O: typeof GetRosterResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc tkd.roster.v1.RosterService.GetWorkingStaff
     */
    readonly getWorkingStaff: {
      readonly name: "GetWorkingStaff",
      readonly I: typeof GetWorkingStaffRequest,
      readonly O: typeof GetWorkingStaffResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

