// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file tkd/roster/v1/constraint.proto (package tkd.roster.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { OffTimeEntry } from "./offtime_pb";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file tkd/roster/v1/constraint.proto.
 */
export declare const file_tkd_roster_v1_constraint: GenFile;

/**
 * OffTimeViolation is a constraint type due to a off-time request.
 *
 * @generated from message tkd.roster.v1.OffTimeViolation
 */
export declare type OffTimeViolation = Message<"tkd.roster.v1.OffTimeViolation"> & {
  /**
   * Entry holds the OffTimeEntry.
   *
   * @generated from field: tkd.roster.v1.OffTimeEntry entry = 1;
   */
  entry?: OffTimeEntry;
};

/**
 * Describes the message tkd.roster.v1.OffTimeViolation.
 * Use `create(OffTimeViolationSchema)` to create a new message.
 */
export declare const OffTimeViolationSchema: GenMessage<OffTimeViolation>;

/**
 * ConstraintEvaluationViolation is a constraint type that is the result
 * of evaluating a constraint expression for a user or roster.
 *
 * @generated from message tkd.roster.v1.ConstraintEvaluationViolation
 */
export declare type ConstraintEvaluationViolation = Message<"tkd.roster.v1.ConstraintEvaluationViolation"> & {
  /**
   * Id is the unique identifier of the Constraint that caused the violation.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Description is the description of the Constraint and copied to the
   * ConstraintEvaluationViolation for convenience.
   *
   * @generated from field: string description = 2;
   */
  description: string;
};

/**
 * Describes the message tkd.roster.v1.ConstraintEvaluationViolation.
 * Use `create(ConstraintEvaluationViolationSchema)` to create a new message.
 */
export declare const ConstraintEvaluationViolationSchema: GenMessage<ConstraintEvaluationViolation>;

/**
 * ConstraintViolation is a violation of a constraint for a given
 * user or roster.
 *
 * @generated from message tkd.roster.v1.ConstraintViolation
 */
export declare type ConstraintViolation = Message<"tkd.roster.v1.ConstraintViolation"> & {
  /**
   * @generated from field: bool hard = 1;
   */
  hard: boolean;

  /**
   * @generated from oneof tkd.roster.v1.ConstraintViolation.kind
   */
  kind: {
    /**
     * @generated from field: tkd.roster.v1.OffTimeViolation off_time = 2;
     */
    value: OffTimeViolation;
    case: "offTime";
  } | {
    /**
     * @generated from field: tkd.roster.v1.ConstraintEvaluationViolation evaluation = 3;
     */
    value: ConstraintEvaluationViolation;
    case: "evaluation";
  } | {
    /**
     * @generated from field: bool NoWorkTime = 4;
     */
    value: boolean;
    case: "NoWorkTime";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message tkd.roster.v1.ConstraintViolation.
 * Use `create(ConstraintViolationSchema)` to create a new message.
 */
export declare const ConstraintViolationSchema: GenMessage<ConstraintViolation>;

/**
 * ConstraintViolationList holds all ConstraintViolations for a
 * user.
 *
 * @generated from message tkd.roster.v1.ConstraintViolationList
 */
export declare type ConstraintViolationList = Message<"tkd.roster.v1.ConstraintViolationList"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: repeated tkd.roster.v1.ConstraintViolation violations = 2;
   */
  violations: ConstraintViolation[];
};

/**
 * Describes the message tkd.roster.v1.ConstraintViolationList.
 * Use `create(ConstraintViolationListSchema)` to create a new message.
 */
export declare const ConstraintViolationListSchema: GenMessage<ConstraintViolationList>;

/**
 * @generated from message tkd.roster.v1.Constraint
 */
export declare type Constraint = Message<"tkd.roster.v1.Constraint"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string expression = 3;
   */
  expression: string;

  /**
   * @generated from field: repeated string role_ids = 4;
   */
  roleIds: string[];

  /**
   * @generated from field: repeated string user_ids = 5;
   */
  userIds: string[];

  /**
   * @generated from field: bool hard = 6;
   */
  hard: boolean;

  /**
   * @generated from field: float penalty = 7;
   */
  penalty: number;

  /**
   * @generated from field: bool deny = 8;
   */
  deny: boolean;

  /**
   * @generated from field: bool roster_only = 9;
   */
  rosterOnly: boolean;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: string creator_id = 11;
   */
  creatorId: string;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 12;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string last_updated_by = 13;
   */
  lastUpdatedBy: string;
};

/**
 * Describes the message tkd.roster.v1.Constraint.
 * Use `create(ConstraintSchema)` to create a new message.
 */
export declare const ConstraintSchema: GenMessage<Constraint>;

/**
 * @generated from message tkd.roster.v1.CreateConstraintRequest
 */
export declare type CreateConstraintRequest = Message<"tkd.roster.v1.CreateConstraintRequest"> & {
  /**
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * @generated from field: string expression = 2;
   */
  expression: string;

  /**
   * @generated from field: repeated string role_ids = 3;
   */
  roleIds: string[];

  /**
   * @generated from field: repeated string user_ids = 4;
   */
  userIds: string[];

  /**
   * @generated from field: bool hard = 5;
   */
  hard: boolean;

  /**
   * @generated from field: float penalty = 6;
   */
  penalty: number;

  /**
   * @generated from field: bool deny = 7;
   */
  deny: boolean;

  /**
   * @generated from field: bool roster_only = 8;
   */
  rosterOnly: boolean;
};

/**
 * Describes the message tkd.roster.v1.CreateConstraintRequest.
 * Use `create(CreateConstraintRequestSchema)` to create a new message.
 */
export declare const CreateConstraintRequestSchema: GenMessage<CreateConstraintRequest>;

/**
 * @generated from message tkd.roster.v1.CreateConstraintResponse
 */
export declare type CreateConstraintResponse = Message<"tkd.roster.v1.CreateConstraintResponse"> & {
  /**
   * @generated from field: tkd.roster.v1.Constraint constraint = 1;
   */
  constraint?: Constraint;
};

/**
 * Describes the message tkd.roster.v1.CreateConstraintResponse.
 * Use `create(CreateConstraintResponseSchema)` to create a new message.
 */
export declare const CreateConstraintResponseSchema: GenMessage<CreateConstraintResponse>;

/**
 * @generated from message tkd.roster.v1.UpdateConstraintRequest
 */
export declare type UpdateConstraintRequest = Message<"tkd.roster.v1.UpdateConstraintRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: string expression = 3;
   */
  expression: string;

  /**
   * @generated from field: repeated string role_ids = 4;
   */
  roleIds: string[];

  /**
   * @generated from field: repeated string user_ids = 5;
   */
  userIds: string[];

  /**
   * @generated from field: bool hard = 6;
   */
  hard: boolean;

  /**
   * @generated from field: float penalty = 7;
   */
  penalty: number;

  /**
   * @generated from field: bool deny = 8;
   */
  deny: boolean;

  /**
   * @generated from field: bool roster_only = 9;
   */
  rosterOnly: boolean;

  /**
   * @generated from field: google.protobuf.FieldMask write_mask = 20;
   */
  writeMask?: FieldMask;
};

/**
 * Describes the message tkd.roster.v1.UpdateConstraintRequest.
 * Use `create(UpdateConstraintRequestSchema)` to create a new message.
 */
export declare const UpdateConstraintRequestSchema: GenMessage<UpdateConstraintRequest>;

/**
 * @generated from message tkd.roster.v1.UpdateConstraintResponse
 */
export declare type UpdateConstraintResponse = Message<"tkd.roster.v1.UpdateConstraintResponse"> & {
  /**
   * @generated from field: tkd.roster.v1.Constraint constraint = 1;
   */
  constraint?: Constraint;
};

/**
 * Describes the message tkd.roster.v1.UpdateConstraintResponse.
 * Use `create(UpdateConstraintResponseSchema)` to create a new message.
 */
export declare const UpdateConstraintResponseSchema: GenMessage<UpdateConstraintResponse>;

/**
 * @generated from message tkd.roster.v1.DeleteConstraintRequest
 */
export declare type DeleteConstraintRequest = Message<"tkd.roster.v1.DeleteConstraintRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message tkd.roster.v1.DeleteConstraintRequest.
 * Use `create(DeleteConstraintRequestSchema)` to create a new message.
 */
export declare const DeleteConstraintRequestSchema: GenMessage<DeleteConstraintRequest>;

/**
 * @generated from message tkd.roster.v1.DeleteConstraintResponse
 */
export declare type DeleteConstraintResponse = Message<"tkd.roster.v1.DeleteConstraintResponse"> & {
};

/**
 * Describes the message tkd.roster.v1.DeleteConstraintResponse.
 * Use `create(DeleteConstraintResponseSchema)` to create a new message.
 */
export declare const DeleteConstraintResponseSchema: GenMessage<DeleteConstraintResponse>;

/**
 * @generated from message tkd.roster.v1.FindConstraintsRequest
 */
export declare type FindConstraintsRequest = Message<"tkd.roster.v1.FindConstraintsRequest"> & {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];

  /**
   * @generated from field: repeated string role_ids = 2;
   */
  roleIds: string[];
};

/**
 * Describes the message tkd.roster.v1.FindConstraintsRequest.
 * Use `create(FindConstraintsRequestSchema)` to create a new message.
 */
export declare const FindConstraintsRequestSchema: GenMessage<FindConstraintsRequest>;

/**
 * @generated from message tkd.roster.v1.FindConstraintsResponse
 */
export declare type FindConstraintsResponse = Message<"tkd.roster.v1.FindConstraintsResponse"> & {
  /**
   * @generated from field: repeated tkd.roster.v1.Constraint results = 1;
   */
  results: Constraint[];
};

/**
 * Describes the message tkd.roster.v1.FindConstraintsResponse.
 * Use `create(FindConstraintsResponseSchema)` to create a new message.
 */
export declare const FindConstraintsResponseSchema: GenMessage<FindConstraintsResponse>;

/**
 * @generated from service tkd.roster.v1.ConstraintService
 */
export declare const ConstraintService: GenService<{
  /**
   * @generated from rpc tkd.roster.v1.ConstraintService.CreateConstraint
   */
  createConstraint: {
    methodKind: "unary";
    input: typeof CreateConstraintRequestSchema;
    output: typeof CreateConstraintResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.ConstraintService.UpdateConstraint
   */
  updateConstraint: {
    methodKind: "unary";
    input: typeof UpdateConstraintRequestSchema;
    output: typeof UpdateConstraintResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.ConstraintService.DeleteConstraint
   */
  deleteConstraint: {
    methodKind: "unary";
    input: typeof DeleteConstraintRequestSchema;
    output: typeof DeleteConstraintResponseSchema;
  },
  /**
   * @generated from rpc tkd.roster.v1.ConstraintService.FindConstraints
   */
  findConstraints: {
    methodKind: "unary";
    input: typeof FindConstraintsRequestSchema;
    output: typeof FindConstraintsResponseSchema;
  },
}>;

