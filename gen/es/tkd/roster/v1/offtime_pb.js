// @generated by protoc-gen-es v2.0.0 with parameter "target=js+dts"
// @generated from file tkd/roster/v1/offtime.proto (package tkd.roster.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, serviceDesc, tsEnum } from "@bufbuild/protobuf/codegenv1";
import { file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import { file_tkd_common_v1_descriptor } from "../../common/v1/descriptor_pb";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";

/**
 * Describes the file tkd/roster/v1/offtime.proto.
 */
export const file_tkd_roster_v1_offtime = /*@__PURE__*/
  fileDesc("Cht0a2Qvcm9zdGVyL3YxL29mZnRpbWUucHJvdG8SDXRrZC5yb3N0ZXIudjEiegoPT2ZmVGltZUFwcHJvdmFsEhAKCGFwcHJvdmVkGAIgASgIEi8KC2FwcHJvdmVkX2F0GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBITCgthcHByb3Zlcl9pZBgEIAEoCRIPCgdjb21tZW50GAUgASgJIqICCgxPZmZUaW1lQ29zdHMSCgoCaWQYASABKAkSEgoKb2ZmdGltZV9pZBgCIAEoCRIRCglyb3N0ZXJfaWQYAyABKAkSGAoHdXNlcl9pZBgEIAEoCUIH+vcYA8gBARIuCgpjcmVhdGVkX2F0GAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBISCgpjcmVhdG9yX2lkGAYgASgJEjEKBWNvc3RzGAcgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQgf69xgDyAEBEhMKC2lzX3ZhY2F0aW9uGAggASgIEigKBGRhdGUYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg8KB2NvbW1lbnQYCiABKAkitwIKDE9mZlRpbWVFbnRyeRIKCgJpZBgBIAEoCRIUCgxyZXF1ZXN0b3JfaWQYAiABKAkSKAoEZnJvbRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASJgoCdG8YBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhMKC2Rlc2NyaXB0aW9uGAUgASgJEigKBHR5cGUYBiABKA4yGi50a2Qucm9zdGVyLnYxLk9mZlRpbWVUeXBlEjAKCGFwcHJvdmFsGAcgASgLMh4udGtkLnJvc3Rlci52MS5PZmZUaW1lQXBwcm92YWwSLgoKY3JlYXRlZF9hdBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEgoKY3JlYXRvcl9pZBgJIAEoCSIuChZHZXRPZmZUaW1lRW50cnlSZXF1ZXN0EhQKA2lkcxgBIAMoCUIH+vcYA8gBASJFChdHZXRPZmZUaW1lRW50cnlSZXNwb25zZRIqCgVlbnRyeRgBIAMoCzIbLnRrZC5yb3N0ZXIudjEuT2ZmVGltZUVudHJ5IugBChtDcmVhdGVPZmZUaW1lUmVxdWVzdFJlcXVlc3QSNgoEZnJvbRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCDPr3GAjIAQGyAQJAARI0CgJ0bxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCDPr3GAjIAQGyAQJAARIUCgxyZXF1ZXN0b3JfaWQYAyABKAkSEwoLZGVzY3JpcHRpb24YBCABKAkSMAoMcmVxdWVzdF90eXBlGAUgASgOMhoudGtkLnJvc3Rlci52MS5PZmZUaW1lVHlwZSJKChxDcmVhdGVPZmZUaW1lUmVxdWVzdFJlc3BvbnNlEioKBWVudHJ5GAEgASgLMhsudGtkLnJvc3Rlci52MS5PZmZUaW1lRW50cnkikQIKG1VwZGF0ZU9mZlRpbWVSZXF1ZXN0UmVxdWVzdBITCgJpZBgBIAEoCUIH+vcYA8gBARIoCgRmcm9tGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBImCgJ0bxgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFAoMcmVxdWVzdG9yX2lkGAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJEjAKDHJlcXVlc3RfdHlwZRgGIAEoDjIaLnRrZC5yb3N0ZXIudjEuT2ZmVGltZVR5cGUSLgoKZmllbGRfbWFzaxgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2siSgocVXBkYXRlT2ZmVGltZVJlcXVlc3RSZXNwb25zZRIqCgVlbnRyeRgBIAEoCzIbLnRrZC5yb3N0ZXIudjEuT2ZmVGltZUVudHJ5IjIKG0RlbGV0ZU9mZlRpbWVSZXF1ZXN0UmVxdWVzdBITCgJpZBgBIAMoCUIH+vcYA8gBASIeChxEZWxldGVPZmZUaW1lUmVxdWVzdFJlc3BvbnNlIt0BChpGaW5kT2ZmVGltZVJlcXVlc3RzUmVxdWVzdBIoCgRmcm9tGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBImCgJ0bxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEAoIdXNlcl9pZHMYAyADKAkSLAoIYXBwcm92ZWQYBCABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEi0KCXJlYWRfbWFzaxgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2siSwobRmluZE9mZlRpbWVSZXF1ZXN0c1Jlc3BvbnNlEiwKB3Jlc3VsdHMYASADKAsyGy50a2Qucm9zdGVyLnYxLk9mZlRpbWVFbnRyeSJ5ChZBcHByb3ZlT3JSZWplY3RSZXF1ZXN0EhMKAmlkGAEgASgJQgf69xgDyAEBEg8KB2NvbW1lbnQYAiABKAkSOQoEdHlwZRgDIAEoDjIiLnRrZC5yb3N0ZXIudjEuQXBwcm92YWxSZXF1ZXN0VHlwZUIH+vcYA8gBASJFChdBcHByb3ZlT3JSZWplY3RSZXNwb25zZRIqCgVlbnRyeRgBIAEoCzIbLnRrZC5yb3N0ZXIudjEuT2ZmVGltZUVudHJ5IlEKFkFkZE9mZlRpbWVDb3N0c1JlcXVlc3QSNwoJYWRkX2Nvc3RzGAEgAygLMhsudGtkLnJvc3Rlci52MS5PZmZUaW1lQ29zdHNCB/r3GAPIAQEiGQoXQWRkT2ZmVGltZUNvc3RzUmVzcG9uc2UiIQoNQ29zdHNGb3JVc2VycxIQCgh1c2VyX2lkcxgBIAMoCSJ4ChZHZXRPZmZUaW1lQ29zdHNSZXF1ZXN0Ei8KCWZvcl91c2VycxgBIAEoCzIcLnRrZC5yb3N0ZXIudjEuQ29zdHNGb3JVc2VycxItCglyZWFkX21hc2sYAiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrIm4KEk9mZlRpbWVDb3N0U3VtbWFyeRIrCgh2YWNhdGlvbhgBIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbhIrCgh0aW1lX29mZhgCIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbiKDAQoQVXNlck9mZlRpbWVDb3N0cxIPCgd1c2VyX2lkGAEgASgJEioKBWNvc3RzGAIgAygLMhsudGtkLnJvc3Rlci52MS5PZmZUaW1lQ29zdHMSMgoHc3VtbWFyeRgDIAEoCzIhLnRrZC5yb3N0ZXIudjEuT2ZmVGltZUNvc3RTdW1tYXJ5IksKF0dldE9mZlRpbWVDb3N0c1Jlc3BvbnNlEjAKB3Jlc3VsdHMYASADKAsyHy50a2Qucm9zdGVyLnYxLlVzZXJPZmZUaW1lQ29zdHMiKAoZRGVsZXRlT2ZmVGltZUNvc3RzUmVxdWVzdBILCgNpZHMYASADKAkiHAoaRGVsZXRlT2ZmVGltZUNvc3RzUmVzcG9uc2UqZAoLT2ZmVGltZVR5cGUSHQoZT0ZGX1RJTUVfVFlQRV9VTlNQRUNJRklFRBAAEhoKFk9GRl9USU1FX1RZUEVfVkFDQVRJT04QARIaChZPRkZfVElNRV9UWVBFX1RJTUVfT0ZGEAIqhAEKE0FwcHJvdmFsUmVxdWVzdFR5cGUSJQohQVBQUk9WQUxfUkVRVUVTVF9UWVBFX1VOU1BFQ0lGSUVEEAASIgoeQVBQUk9WQUxfUkVRVUVTVF9UWVBFX0FQUFJPVkVEEAESIgoeQVBQUk9WQUxfUkVRVUVTVF9UWVBFX1JFSkVDVEVEEAIymAgKDk9mZlRpbWVTZXJ2aWNlEmcKD0dldE9mZlRpbWVFbnRyeRIlLnRrZC5yb3N0ZXIudjEuR2V0T2ZmVGltZUVudHJ5UmVxdWVzdBomLnRrZC5yb3N0ZXIudjEuR2V0T2ZmVGltZUVudHJ5UmVzcG9uc2UiBbJ+AggBEnYKFENyZWF0ZU9mZlRpbWVSZXF1ZXN0EioudGtkLnJvc3Rlci52MS5DcmVhdGVPZmZUaW1lUmVxdWVzdFJlcXVlc3QaKy50a2Qucm9zdGVyLnYxLkNyZWF0ZU9mZlRpbWVSZXF1ZXN0UmVzcG9uc2UiBbJ+AggBEnYKFFVwZGF0ZU9mZlRpbWVSZXF1ZXN0EioudGtkLnJvc3Rlci52MS5VcGRhdGVPZmZUaW1lUmVxdWVzdFJlcXVlc3QaKy50a2Qucm9zdGVyLnYxLlVwZGF0ZU9mZlRpbWVSZXF1ZXN0UmVzcG9uc2UiBbJ+AggBEnYKFERlbGV0ZU9mZlRpbWVSZXF1ZXN0EioudGtkLnJvc3Rlci52MS5EZWxldGVPZmZUaW1lUmVxdWVzdFJlcXVlc3QaKy50a2Qucm9zdGVyLnYxLkRlbGV0ZU9mZlRpbWVSZXF1ZXN0UmVzcG9uc2UiBbJ+AggBEnMKE0ZpbmRPZmZUaW1lUmVxdWVzdHMSKS50a2Qucm9zdGVyLnYxLkZpbmRPZmZUaW1lUmVxdWVzdHNSZXF1ZXN0GioudGtkLnJvc3Rlci52MS5GaW5kT2ZmVGltZVJlcXVlc3RzUmVzcG9uc2UiBbJ+AggBEmcKD0FwcHJvdmVPclJlamVjdBIlLnRrZC5yb3N0ZXIudjEuQXBwcm92ZU9yUmVqZWN0UmVxdWVzdBomLnRrZC5yb3N0ZXIudjEuQXBwcm92ZU9yUmVqZWN0UmVzcG9uc2UiBbJ+AggCEmcKD0FkZE9mZlRpbWVDb3N0cxIlLnRrZC5yb3N0ZXIudjEuQWRkT2ZmVGltZUNvc3RzUmVxdWVzdBomLnRrZC5yb3N0ZXIudjEuQWRkT2ZmVGltZUNvc3RzUmVzcG9uc2UiBbJ+AggCEmcKD0dldE9mZlRpbWVDb3N0cxIlLnRrZC5yb3N0ZXIudjEuR2V0T2ZmVGltZUNvc3RzUmVxdWVzdBomLnRrZC5yb3N0ZXIudjEuR2V0T2ZmVGltZUNvc3RzUmVzcG9uc2UiBbJ+AggBEnAKEkRlbGV0ZU9mZlRpbWVDb3N0cxIoLnRrZC5yb3N0ZXIudjEuRGVsZXRlT2ZmVGltZUNvc3RzUmVxdWVzdBopLnRrZC5yb3N0ZXIudjEuRGVsZXRlT2ZmVGltZUNvc3RzUmVzcG9uc2UiBbJ+AggCGhO6fhAKDnJvc3Rlcl9tYW5hZ2VyQrwBChFjb20udGtkLnJvc3Rlci52MUIMT2ZmdGltZVByb3RvUAFaQ2dpdGh1Yi5jb20vdGllcmtsaW5pay1kb2JlcnNiZXJnL2FwaXMvZ2VuL2dvL3RrZC9yb3N0ZXIvdjE7cm9zdGVydjGiAgNUUliqAg1Ua2QuUm9zdGVyLlYxygINVGtkXFJvc3RlclxWMeICGVRrZFxSb3N0ZXJcVjFcR1BCTWV0YWRhdGHqAg9Ua2Q6OlJvc3Rlcjo6VjFiBnByb3RvMw", [file_google_protobuf_duration, file_google_protobuf_timestamp, file_google_protobuf_field_mask, file_google_protobuf_wrappers, file_tkd_common_v1_descriptor, file_buf_validate_validate]);

/**
 * Describes the message tkd.roster.v1.OffTimeApproval.
 * Use `create(OffTimeApprovalSchema)` to create a new message.
 */
export const OffTimeApprovalSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 0);

/**
 * Describes the message tkd.roster.v1.OffTimeCosts.
 * Use `create(OffTimeCostsSchema)` to create a new message.
 */
export const OffTimeCostsSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 1);

/**
 * Describes the message tkd.roster.v1.OffTimeEntry.
 * Use `create(OffTimeEntrySchema)` to create a new message.
 */
export const OffTimeEntrySchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 2);

/**
 * Describes the message tkd.roster.v1.GetOffTimeEntryRequest.
 * Use `create(GetOffTimeEntryRequestSchema)` to create a new message.
 */
export const GetOffTimeEntryRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 3);

/**
 * Describes the message tkd.roster.v1.GetOffTimeEntryResponse.
 * Use `create(GetOffTimeEntryResponseSchema)` to create a new message.
 */
export const GetOffTimeEntryResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 4);

/**
 * Describes the message tkd.roster.v1.CreateOffTimeRequestRequest.
 * Use `create(CreateOffTimeRequestRequestSchema)` to create a new message.
 */
export const CreateOffTimeRequestRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 5);

/**
 * Describes the message tkd.roster.v1.CreateOffTimeRequestResponse.
 * Use `create(CreateOffTimeRequestResponseSchema)` to create a new message.
 */
export const CreateOffTimeRequestResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 6);

/**
 * Describes the message tkd.roster.v1.UpdateOffTimeRequestRequest.
 * Use `create(UpdateOffTimeRequestRequestSchema)` to create a new message.
 */
export const UpdateOffTimeRequestRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 7);

/**
 * Describes the message tkd.roster.v1.UpdateOffTimeRequestResponse.
 * Use `create(UpdateOffTimeRequestResponseSchema)` to create a new message.
 */
export const UpdateOffTimeRequestResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 8);

/**
 * Describes the message tkd.roster.v1.DeleteOffTimeRequestRequest.
 * Use `create(DeleteOffTimeRequestRequestSchema)` to create a new message.
 */
export const DeleteOffTimeRequestRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 9);

/**
 * Describes the message tkd.roster.v1.DeleteOffTimeRequestResponse.
 * Use `create(DeleteOffTimeRequestResponseSchema)` to create a new message.
 */
export const DeleteOffTimeRequestResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 10);

/**
 * Describes the message tkd.roster.v1.FindOffTimeRequestsRequest.
 * Use `create(FindOffTimeRequestsRequestSchema)` to create a new message.
 */
export const FindOffTimeRequestsRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 11);

/**
 * Describes the message tkd.roster.v1.FindOffTimeRequestsResponse.
 * Use `create(FindOffTimeRequestsResponseSchema)` to create a new message.
 */
export const FindOffTimeRequestsResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 12);

/**
 * Describes the message tkd.roster.v1.ApproveOrRejectRequest.
 * Use `create(ApproveOrRejectRequestSchema)` to create a new message.
 */
export const ApproveOrRejectRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 13);

/**
 * Describes the message tkd.roster.v1.ApproveOrRejectResponse.
 * Use `create(ApproveOrRejectResponseSchema)` to create a new message.
 */
export const ApproveOrRejectResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 14);

/**
 * Describes the message tkd.roster.v1.AddOffTimeCostsRequest.
 * Use `create(AddOffTimeCostsRequestSchema)` to create a new message.
 */
export const AddOffTimeCostsRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 15);

/**
 * Describes the message tkd.roster.v1.AddOffTimeCostsResponse.
 * Use `create(AddOffTimeCostsResponseSchema)` to create a new message.
 */
export const AddOffTimeCostsResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 16);

/**
 * Describes the message tkd.roster.v1.CostsForUsers.
 * Use `create(CostsForUsersSchema)` to create a new message.
 */
export const CostsForUsersSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 17);

/**
 * Describes the message tkd.roster.v1.GetOffTimeCostsRequest.
 * Use `create(GetOffTimeCostsRequestSchema)` to create a new message.
 */
export const GetOffTimeCostsRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 18);

/**
 * Describes the message tkd.roster.v1.OffTimeCostSummary.
 * Use `create(OffTimeCostSummarySchema)` to create a new message.
 */
export const OffTimeCostSummarySchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 19);

/**
 * Describes the message tkd.roster.v1.UserOffTimeCosts.
 * Use `create(UserOffTimeCostsSchema)` to create a new message.
 */
export const UserOffTimeCostsSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 20);

/**
 * Describes the message tkd.roster.v1.GetOffTimeCostsResponse.
 * Use `create(GetOffTimeCostsResponseSchema)` to create a new message.
 */
export const GetOffTimeCostsResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 21);

/**
 * Describes the message tkd.roster.v1.DeleteOffTimeCostsRequest.
 * Use `create(DeleteOffTimeCostsRequestSchema)` to create a new message.
 */
export const DeleteOffTimeCostsRequestSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 22);

/**
 * Describes the message tkd.roster.v1.DeleteOffTimeCostsResponse.
 * Use `create(DeleteOffTimeCostsResponseSchema)` to create a new message.
 */
export const DeleteOffTimeCostsResponseSchema = /*@__PURE__*/
  messageDesc(file_tkd_roster_v1_offtime, 23);

/**
 * Describes the enum tkd.roster.v1.OffTimeType.
 */
export const OffTimeTypeSchema = /*@__PURE__*/
  enumDesc(file_tkd_roster_v1_offtime, 0);

/**
 * @generated from enum tkd.roster.v1.OffTimeType
 */
export const OffTimeType = /*@__PURE__*/
  tsEnum(OffTimeTypeSchema);

/**
 * Describes the enum tkd.roster.v1.ApprovalRequestType.
 */
export const ApprovalRequestTypeSchema = /*@__PURE__*/
  enumDesc(file_tkd_roster_v1_offtime, 1);

/**
 * @generated from enum tkd.roster.v1.ApprovalRequestType
 */
export const ApprovalRequestType = /*@__PURE__*/
  tsEnum(ApprovalRequestTypeSchema);

/**
 * @generated from service tkd.roster.v1.OffTimeService
 */
export const OffTimeService = /*@__PURE__*/
  serviceDesc(file_tkd_roster_v1_offtime, 0);

