// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: tkd/common/v1/daytime.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DayTime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hour          int32                  `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	Minute        int32                  `protobuf:"varint,2,opt,name=minute,proto3" json:"minute,omitempty"`
	Second        int32                  `protobuf:"varint,3,opt,name=second,proto3" json:"second,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DayTime) Reset() {
	*x = DayTime{}
	mi := &file_tkd_common_v1_daytime_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DayTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayTime) ProtoMessage() {}

func (x *DayTime) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_common_v1_daytime_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayTime.ProtoReflect.Descriptor instead.
func (*DayTime) Descriptor() ([]byte, []int) {
	return file_tkd_common_v1_daytime_proto_rawDescGZIP(), []int{0}
}

func (x *DayTime) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *DayTime) GetMinute() int32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *DayTime) GetSecond() int32 {
	if x != nil {
		return x.Second
	}
	return 0
}

// DayTimeRange describes a time range within an unspecified day.
// If start equals end, not time is matched. If both are unspecified,
// the whole day is considered. If either of both is unspecified,
// start defaults to the start of the day (if only end is specified)
// and end defaults to the end of the day (if only start is specified).
type DayTimeRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start is the inclusive start of the daytime range.
	Start *DayTime `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// End is the exclusive end of the daytime range.
	End           *DayTime `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DayTimeRange) Reset() {
	*x = DayTimeRange{}
	mi := &file_tkd_common_v1_daytime_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DayTimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayTimeRange) ProtoMessage() {}

func (x *DayTimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_common_v1_daytime_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayTimeRange.ProtoReflect.Descriptor instead.
func (*DayTimeRange) Descriptor() ([]byte, []int) {
	return file_tkd_common_v1_daytime_proto_rawDescGZIP(), []int{1}
}

func (x *DayTimeRange) GetStart() *DayTime {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *DayTimeRange) GetEnd() *DayTime {
	if x != nil {
		return x.End
	}
	return nil
}

var File_tkd_common_v1_daytime_proto protoreflect.FileDescriptor

var file_tkd_common_v1_daytime_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x74, 0x6b, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74,
	0x6b, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x4d, 0x0a, 0x07,
	0x44, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x6f, 0x75, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x66, 0x0a, 0x0c, 0x44,
	0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x64,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x42, 0xbc, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6b, 0x64, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x44, 0x61, 0x79, 0x74, 0x69,
	0x6d, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x69, 0x65, 0x72, 0x6b, 0x6c, 0x69, 0x6e, 0x69, 0x6b,
	0x2d, 0x64, 0x6f, 0x62, 0x65, 0x72, 0x73, 0x62, 0x65, 0x72, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x6b, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x54, 0x43, 0x58, 0xaa, 0x02, 0x0d, 0x54, 0x6b, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x54, 0x6b, 0x64, 0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x54, 0x6b, 0x64, 0x5c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0f, 0x54, 0x6b, 0x64, 0x3a, 0x3a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_tkd_common_v1_daytime_proto_rawDescOnce sync.Once
	file_tkd_common_v1_daytime_proto_rawDescData []byte
)

func file_tkd_common_v1_daytime_proto_rawDescGZIP() []byte {
	file_tkd_common_v1_daytime_proto_rawDescOnce.Do(func() {
		file_tkd_common_v1_daytime_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tkd_common_v1_daytime_proto_rawDesc), len(file_tkd_common_v1_daytime_proto_rawDesc)))
	})
	return file_tkd_common_v1_daytime_proto_rawDescData
}

var file_tkd_common_v1_daytime_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tkd_common_v1_daytime_proto_goTypes = []any{
	(*DayTime)(nil),      // 0: tkd.common.v1.DayTime
	(*DayTimeRange)(nil), // 1: tkd.common.v1.DayTimeRange
}
var file_tkd_common_v1_daytime_proto_depIdxs = []int32{
	0, // 0: tkd.common.v1.DayTimeRange.start:type_name -> tkd.common.v1.DayTime
	0, // 1: tkd.common.v1.DayTimeRange.end:type_name -> tkd.common.v1.DayTime
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tkd_common_v1_daytime_proto_init() }
func file_tkd_common_v1_daytime_proto_init() {
	if File_tkd_common_v1_daytime_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tkd_common_v1_daytime_proto_rawDesc), len(file_tkd_common_v1_daytime_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tkd_common_v1_daytime_proto_goTypes,
		DependencyIndexes: file_tkd_common_v1_daytime_proto_depIdxs,
		MessageInfos:      file_tkd_common_v1_daytime_proto_msgTypes,
	}.Build()
	File_tkd_common_v1_daytime_proto = out.File
	file_tkd_common_v1_daytime_proto_goTypes = nil
	file_tkd_common_v1_daytime_proto_depIdxs = nil
}
