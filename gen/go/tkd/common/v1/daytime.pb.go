// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: tkd/common/v1/daytime.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DayTime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hour          int32                  `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	Minute        int32                  `protobuf:"varint,2,opt,name=minute,proto3" json:"minute,omitempty"`
	Second        int32                  `protobuf:"varint,3,opt,name=second,proto3" json:"second,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DayTime) Reset() {
	*x = DayTime{}
	mi := &file_tkd_common_v1_daytime_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DayTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayTime) ProtoMessage() {}

func (x *DayTime) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_common_v1_daytime_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayTime.ProtoReflect.Descriptor instead.
func (*DayTime) Descriptor() ([]byte, []int) {
	return file_tkd_common_v1_daytime_proto_rawDescGZIP(), []int{0}
}

func (x *DayTime) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *DayTime) GetMinute() int32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *DayTime) GetSecond() int32 {
	if x != nil {
		return x.Second
	}
	return 0
}

// DayTimeRange describes a time range within an unspecified day.
// If start equals end, not time is matched. If both are unspecified,
// the whole day is considered. If either of both is unspecified,
// start defaults to the start of the day (if only end is specified)
// and end defaults to the end of the day (if only start is specified).
type DayTimeRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Start is the inclusive start of the daytime range.
	Start *DayTime `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// End is the exclusive end of the daytime range.
	End           *DayTime `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DayTimeRange) Reset() {
	*x = DayTimeRange{}
	mi := &file_tkd_common_v1_daytime_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DayTimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayTimeRange) ProtoMessage() {}

func (x *DayTimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_common_v1_daytime_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayTimeRange.ProtoReflect.Descriptor instead.
func (*DayTimeRange) Descriptor() ([]byte, []int) {
	return file_tkd_common_v1_daytime_proto_rawDescGZIP(), []int{1}
}

func (x *DayTimeRange) GetStart() *DayTime {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *DayTimeRange) GetEnd() *DayTime {
	if x != nil {
		return x.End
	}
	return nil
}

var File_tkd_common_v1_daytime_proto protoreflect.FileDescriptor

const file_tkd_common_v1_daytime_proto_rawDesc = "" +
	"\n" +
	"\x1btkd/common/v1/daytime.proto\x12\rtkd.common.v1\"M\n" +
	"\aDayTime\x12\x12\n" +
	"\x04hour\x18\x01 \x01(\x05R\x04hour\x12\x16\n" +
	"\x06minute\x18\x02 \x01(\x05R\x06minute\x12\x16\n" +
	"\x06second\x18\x03 \x01(\x05R\x06second\"f\n" +
	"\fDayTimeRange\x12,\n" +
	"\x05start\x18\x01 \x01(\v2\x16.tkd.common.v1.DayTimeR\x05start\x12(\n" +
	"\x03end\x18\x02 \x01(\v2\x16.tkd.common.v1.DayTimeR\x03endB\xbc\x01\n" +
	"\x11com.tkd.common.v1B\fDaytimeProtoP\x01ZCgithub.com/tierklinik-dobersberg/apis/gen/go/tkd/common/v1;commonv1\xa2\x02\x03TCX\xaa\x02\rTkd.Common.V1\xca\x02\rTkd\\Common\\V1\xe2\x02\x19Tkd\\Common\\V1\\GPBMetadata\xea\x02\x0fTkd::Common::V1b\x06proto3"

var (
	file_tkd_common_v1_daytime_proto_rawDescOnce sync.Once
	file_tkd_common_v1_daytime_proto_rawDescData []byte
)

func file_tkd_common_v1_daytime_proto_rawDescGZIP() []byte {
	file_tkd_common_v1_daytime_proto_rawDescOnce.Do(func() {
		file_tkd_common_v1_daytime_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tkd_common_v1_daytime_proto_rawDesc), len(file_tkd_common_v1_daytime_proto_rawDesc)))
	})
	return file_tkd_common_v1_daytime_proto_rawDescData
}

var file_tkd_common_v1_daytime_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tkd_common_v1_daytime_proto_goTypes = []any{
	(*DayTime)(nil),      // 0: tkd.common.v1.DayTime
	(*DayTimeRange)(nil), // 1: tkd.common.v1.DayTimeRange
}
var file_tkd_common_v1_daytime_proto_depIdxs = []int32{
	0, // 0: tkd.common.v1.DayTimeRange.start:type_name -> tkd.common.v1.DayTime
	0, // 1: tkd.common.v1.DayTimeRange.end:type_name -> tkd.common.v1.DayTime
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tkd_common_v1_daytime_proto_init() }
func file_tkd_common_v1_daytime_proto_init() {
	if File_tkd_common_v1_daytime_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tkd_common_v1_daytime_proto_rawDesc), len(file_tkd_common_v1_daytime_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tkd_common_v1_daytime_proto_goTypes,
		DependencyIndexes: file_tkd_common_v1_daytime_proto_depIdxs,
		MessageInfos:      file_tkd_common_v1_daytime_proto_msgTypes,
	}.Build()
	File_tkd_common_v1_daytime_proto = out.File
	file_tkd_common_v1_daytime_proto_goTypes = nil
	file_tkd_common_v1_daytime_proto_depIdxs = nil
}
