// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tkd/customer/v1/patient.proto

package customerv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/tierklinik-dobersberg/apis/gen/go/tkd/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PatientGender int32

const (
	PatientGender_PATIENT_GENDER_UNSPECIFIED      PatientGender = 0
	PatientGender_PATIENT_GENDER_MALE             PatientGender = 1
	PatientGender_PATIENT_GENDER_FEMALE           PatientGender = 2
	PatientGender_PATIENT_GENDER_MALE_CASTRATED   PatientGender = 3
	PatientGender_PATIENT_GENDER_FEMALE_CASTRATED PatientGender = 4
)

// Enum value maps for PatientGender.
var (
	PatientGender_name = map[int32]string{
		0: "PATIENT_GENDER_UNSPECIFIED",
		1: "PATIENT_GENDER_MALE",
		2: "PATIENT_GENDER_FEMALE",
		3: "PATIENT_GENDER_MALE_CASTRATED",
		4: "PATIENT_GENDER_FEMALE_CASTRATED",
	}
	PatientGender_value = map[string]int32{
		"PATIENT_GENDER_UNSPECIFIED":      0,
		"PATIENT_GENDER_MALE":             1,
		"PATIENT_GENDER_FEMALE":           2,
		"PATIENT_GENDER_MALE_CASTRATED":   3,
		"PATIENT_GENDER_FEMALE_CASTRATED": 4,
	}
)

func (x PatientGender) Enum() *PatientGender {
	p := new(PatientGender)
	*p = x
	return p
}

func (x PatientGender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PatientGender) Descriptor() protoreflect.EnumDescriptor {
	return file_tkd_customer_v1_patient_proto_enumTypes[0].Descriptor()
}

func (PatientGender) Type() protoreflect.EnumType {
	return &file_tkd_customer_v1_patient_proto_enumTypes[0]
}

func (x PatientGender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PatientGender.Descriptor instead.
func (PatientGender) EnumDescriptor() ([]byte, []int) {
	return file_tkd_customer_v1_patient_proto_rawDescGZIP(), []int{0}
}

type Patient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CustomerId holds the ID of the customer this patient belongs to.
	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// PatientName is the name of the patient.
	PatientName string `protobuf:"bytes,2,opt,name=patient_name,json=patientName,proto3" json:"patient_name,omitempty"`
	// Species describes the species of the patient.
	Species string `protobuf:"bytes,3,opt,name=species,proto3" json:"species,omitempty"`
	// Breed describes the breed of the patient.
	Breed string `protobuf:"bytes,14,opt,name=breed,proto3" json:"breed,omitempty"`
	// Birthday holds the birthday of the patient.
	Birthday *v1.Date `protobuf:"bytes,4,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// Gender holds the gender of a patient.
	Gender PatientGender `protobuf:"varint,5,opt,name=gender,proto3,enum=tkd.customer.v1.PatientGender" json:"gender,omitempty"`
	// Comment holds an optional comment for the patient in markdown format.
	Comment string `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	// PatientId holds the internal ID of the patient. It cannot be modified once the patient
	// has been created.
	PatientId string `protobuf:"bytes,7,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	// IsAlive is set to true if this patient is still alive.
	IsAlive bool `protobuf:"varint,8,opt,name=is_alive,json=isAlive,proto3" json:"is_alive,omitempty"`
	// ChipNumber is the chip-number of the patient.
	ChipNumber string           `protobuf:"bytes,15,opt,name=chip_number,json=chipNumber,proto3" json:"chip_number,omitempty"`
	Color      string           `protobuf:"bytes,16,opt,name=color,proto3" json:"color,omitempty"`
	ExtraData  *structpb.Struct `protobuf:"bytes,17,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	// InternalReference holds the internal identifier of the patient
	// from the importer.
	InternalReference string `protobuf:"bytes,9,opt,name=internal_reference,json=internalReference,proto3" json:"internal_reference,omitempty"`
	// Importer holds an identifier for the importer
	// that created this patient record.
	// Records created by human users whill have importer_reference
	// and importer_patient_id set to an empty string ("").
	Importer string `protobuf:"bytes,10,opt,name=importer,proto3" json:"importer,omitempty"`
	// FirstSeen holds the time the patient has been first seen.
	FirstSeen *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	// LastUpdated holds the time the patient records has been last updated.
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// LastUpdatedBy holds the ID of the user that modified the patient record last.
	LastUpdatedBy string `protobuf:"bytes,13,opt,name=last_updated_by,json=lastUpdatedBy,proto3" json:"last_updated_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Patient) Reset() {
	*x = Patient{}
	mi := &file_tkd_customer_v1_patient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient) ProtoMessage() {}

func (x *Patient) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_customer_v1_patient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient.ProtoReflect.Descriptor instead.
func (*Patient) Descriptor() ([]byte, []int) {
	return file_tkd_customer_v1_patient_proto_rawDescGZIP(), []int{0}
}

func (x *Patient) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Patient) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *Patient) GetSpecies() string {
	if x != nil {
		return x.Species
	}
	return ""
}

func (x *Patient) GetBreed() string {
	if x != nil {
		return x.Breed
	}
	return ""
}

func (x *Patient) GetBirthday() *v1.Date {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *Patient) GetGender() PatientGender {
	if x != nil {
		return x.Gender
	}
	return PatientGender_PATIENT_GENDER_UNSPECIFIED
}

func (x *Patient) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Patient) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *Patient) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

func (x *Patient) GetChipNumber() string {
	if x != nil {
		return x.ChipNumber
	}
	return ""
}

func (x *Patient) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Patient) GetExtraData() *structpb.Struct {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *Patient) GetInternalReference() string {
	if x != nil {
		return x.InternalReference
	}
	return ""
}

func (x *Patient) GetImporter() string {
	if x != nil {
		return x.Importer
	}
	return ""
}

func (x *Patient) GetFirstSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstSeen
	}
	return nil
}

func (x *Patient) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *Patient) GetLastUpdatedBy() string {
	if x != nil {
		return x.LastUpdatedBy
	}
	return ""
}

type QueryPatientsRequests struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPatientsRequests) Reset() {
	*x = QueryPatientsRequests{}
	mi := &file_tkd_customer_v1_patient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPatientsRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPatientsRequests) ProtoMessage() {}

func (x *QueryPatientsRequests) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_customer_v1_patient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPatientsRequests.ProtoReflect.Descriptor instead.
func (*QueryPatientsRequests) Descriptor() ([]byte, []int) {
	return file_tkd_customer_v1_patient_proto_rawDescGZIP(), []int{1}
}

func (x *QueryPatientsRequests) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type QueryPatientsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Patients      []*Patient             `protobuf:"bytes,1,rep,name=patients,proto3" json:"patients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPatientsResponse) Reset() {
	*x = QueryPatientsResponse{}
	mi := &file_tkd_customer_v1_patient_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPatientsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPatientsResponse) ProtoMessage() {}

func (x *QueryPatientsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_customer_v1_patient_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPatientsResponse.ProtoReflect.Descriptor instead.
func (*QueryPatientsResponse) Descriptor() ([]byte, []int) {
	return file_tkd_customer_v1_patient_proto_rawDescGZIP(), []int{2}
}

func (x *QueryPatientsResponse) GetPatients() []*Patient {
	if x != nil {
		return x.Patients
	}
	return nil
}

var File_tkd_customer_v1_patient_proto protoreflect.FileDescriptor

const file_tkd_customer_v1_patient_proto_rawDesc = "" +
	"\n" +
	"\x1dtkd/customer/v1/patient.proto\x12\x0ftkd.customer.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/field_mask.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x18tkd/common/v1/date.proto\x1a\x1bbuf/validate/validate.proto\"\x96\x05\n" +
	"\aPatient\x12\x1f\n" +
	"\vcustomer_id\x18\x01 \x01(\tR\n" +
	"customerId\x12!\n" +
	"\fpatient_name\x18\x02 \x01(\tR\vpatientName\x12\x18\n" +
	"\aspecies\x18\x03 \x01(\tR\aspecies\x12\x14\n" +
	"\x05breed\x18\x0e \x01(\tR\x05breed\x12/\n" +
	"\bbirthday\x18\x04 \x01(\v2\x13.tkd.common.v1.DateR\bbirthday\x126\n" +
	"\x06gender\x18\x05 \x01(\x0e2\x1e.tkd.customer.v1.PatientGenderR\x06gender\x12\x18\n" +
	"\acomment\x18\x06 \x01(\tR\acomment\x12\x1d\n" +
	"\n" +
	"patient_id\x18\a \x01(\tR\tpatientId\x12\x19\n" +
	"\bis_alive\x18\b \x01(\bR\aisAlive\x12\x1f\n" +
	"\vchip_number\x18\x0f \x01(\tR\n" +
	"chipNumber\x12\x14\n" +
	"\x05color\x18\x10 \x01(\tR\x05color\x126\n" +
	"\n" +
	"extra_data\x18\x11 \x01(\v2\x17.google.protobuf.StructR\textraData\x12-\n" +
	"\x12internal_reference\x18\t \x01(\tR\x11internalReference\x12\x1a\n" +
	"\bimporter\x18\n" +
	" \x01(\tR\bimporter\x129\n" +
	"\n" +
	"first_seen\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tfirstSeen\x12=\n" +
	"\flast_updated\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\x12&\n" +
	"\x0flast_updated_by\x18\r \x01(\tR\rlastUpdatedBy\"-\n" +
	"\x15QueryPatientsRequests\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\"M\n" +
	"\x15QueryPatientsResponse\x124\n" +
	"\bpatients\x18\x01 \x03(\v2\x18.tkd.customer.v1.PatientR\bpatients*\xab\x01\n" +
	"\rPatientGender\x12\x1e\n" +
	"\x1aPATIENT_GENDER_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13PATIENT_GENDER_MALE\x10\x01\x12\x19\n" +
	"\x15PATIENT_GENDER_FEMALE\x10\x02\x12!\n" +
	"\x1dPATIENT_GENDER_MALE_CASTRATED\x10\x03\x12#\n" +
	"\x1fPATIENT_GENDER_FEMALE_CASTRATED\x10\x042q\n" +
	"\x0ePatientService\x12_\n" +
	"\rQueryPatients\x12&.tkd.customer.v1.QueryPatientsRequests\x1a&.tkd.customer.v1.QueryPatientsResponseB\xca\x01\n" +
	"\x13com.tkd.customer.v1B\fPatientProtoP\x01ZGgithub.com/tierklinik-dobersberg/apis/gen/go/tkd/customer/v1;customerv1\xa2\x02\x03TCX\xaa\x02\x0fTkd.Customer.V1\xca\x02\x0fTkd\\Customer\\V1\xe2\x02\x1bTkd\\Customer\\V1\\GPBMetadata\xea\x02\x11Tkd::Customer::V1b\x06proto3"

var (
	file_tkd_customer_v1_patient_proto_rawDescOnce sync.Once
	file_tkd_customer_v1_patient_proto_rawDescData []byte
)

func file_tkd_customer_v1_patient_proto_rawDescGZIP() []byte {
	file_tkd_customer_v1_patient_proto_rawDescOnce.Do(func() {
		file_tkd_customer_v1_patient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tkd_customer_v1_patient_proto_rawDesc), len(file_tkd_customer_v1_patient_proto_rawDesc)))
	})
	return file_tkd_customer_v1_patient_proto_rawDescData
}

var file_tkd_customer_v1_patient_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tkd_customer_v1_patient_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tkd_customer_v1_patient_proto_goTypes = []any{
	(PatientGender)(0),            // 0: tkd.customer.v1.PatientGender
	(*Patient)(nil),               // 1: tkd.customer.v1.Patient
	(*QueryPatientsRequests)(nil), // 2: tkd.customer.v1.QueryPatientsRequests
	(*QueryPatientsResponse)(nil), // 3: tkd.customer.v1.QueryPatientsResponse
	(*v1.Date)(nil),               // 4: tkd.common.v1.Date
	(*structpb.Struct)(nil),       // 5: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_tkd_customer_v1_patient_proto_depIdxs = []int32{
	4, // 0: tkd.customer.v1.Patient.birthday:type_name -> tkd.common.v1.Date
	0, // 1: tkd.customer.v1.Patient.gender:type_name -> tkd.customer.v1.PatientGender
	5, // 2: tkd.customer.v1.Patient.extra_data:type_name -> google.protobuf.Struct
	6, // 3: tkd.customer.v1.Patient.first_seen:type_name -> google.protobuf.Timestamp
	6, // 4: tkd.customer.v1.Patient.last_updated:type_name -> google.protobuf.Timestamp
	1, // 5: tkd.customer.v1.QueryPatientsResponse.patients:type_name -> tkd.customer.v1.Patient
	2, // 6: tkd.customer.v1.PatientService.QueryPatients:input_type -> tkd.customer.v1.QueryPatientsRequests
	3, // 7: tkd.customer.v1.PatientService.QueryPatients:output_type -> tkd.customer.v1.QueryPatientsResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_tkd_customer_v1_patient_proto_init() }
func file_tkd_customer_v1_patient_proto_init() {
	if File_tkd_customer_v1_patient_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tkd_customer_v1_patient_proto_rawDesc), len(file_tkd_customer_v1_patient_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tkd_customer_v1_patient_proto_goTypes,
		DependencyIndexes: file_tkd_customer_v1_patient_proto_depIdxs,
		EnumInfos:         file_tkd_customer_v1_patient_proto_enumTypes,
		MessageInfos:      file_tkd_customer_v1_patient_proto_msgTypes,
	}.Build()
	File_tkd_customer_v1_patient_proto = out.File
	file_tkd_customer_v1_patient_proto_goTypes = nil
	file_tkd_customer_v1_patient_proto_depIdxs = nil
}
