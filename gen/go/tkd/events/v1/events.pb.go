// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: tkd/events/v1/events.proto

package eventsv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event describes is a protobuf defined event that
// can be published and subscribed to using the EventsService.
type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Event holds the actual event. Since the event type is unknown
	// to the events-service, it is encapsulated as a google.protobuf.Any
	// message.
	// To support JSON based Connect-RPC, the events service either needs to have
	// all possible event message descriptors compiled into the final binary or
	// use a typeserver to lookup the file/message descriptors.
	// See tkd.typeserver.v1 and github.com/tierklinik-dobersberg/pbtype-server
	// for a type-server implementation.
	//
	// This field is required!
	Event *anypb.Any `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// Retained may optionally be set to bool to indicate that this message should
	// be retained and immediately sent to every new subscriber.
	// Note that only one message per event-type can be retained and a new retained message
	// will overwrite any previously sent message of the same event-type (that is, Event.event.type_url)
	//
	// For more information check the Retained-Flag documentation of MQTT since this feature is based on it.
	Retained      bool `protobuf:"varint,2,opt,name=retained,proto3" json:"retained,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_tkd_events_v1_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_events_v1_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_tkd_events_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetEvent() *anypb.Any {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Event) GetRetained() bool {
	if x != nil {
		return x.Retained
	}
	return false
}

type SubscribeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*SubscribeRequest_Subscribe
	//	*SubscribeRequest_Unsubscribe
	Kind          isSubscribeRequest_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_tkd_events_v1_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_events_v1_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_tkd_events_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeRequest) GetKind() isSubscribeRequest_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *SubscribeRequest) GetSubscribe() string {
	if x != nil {
		if x, ok := x.Kind.(*SubscribeRequest_Subscribe); ok {
			return x.Subscribe
		}
	}
	return ""
}

func (x *SubscribeRequest) GetUnsubscribe() string {
	if x != nil {
		if x, ok := x.Kind.(*SubscribeRequest_Unsubscribe); ok {
			return x.Unsubscribe
		}
	}
	return ""
}

type isSubscribeRequest_Kind interface {
	isSubscribeRequest_Kind()
}

type SubscribeRequest_Subscribe struct {
	Subscribe string `protobuf:"bytes,1,opt,name=subscribe,proto3,oneof"`
}

type SubscribeRequest_Unsubscribe struct {
	Unsubscribe string `protobuf:"bytes,2,opt,name=unsubscribe,proto3,oneof"`
}

func (*SubscribeRequest_Subscribe) isSubscribeRequest_Kind() {}

func (*SubscribeRequest_Unsubscribe) isSubscribeRequest_Kind() {}

type SubscribeOnceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeUrls      []string               `protobuf:"bytes,1,rep,name=type_urls,json=typeUrls,proto3" json:"type_urls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeOnceRequest) Reset() {
	*x = SubscribeOnceRequest{}
	mi := &file_tkd_events_v1_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeOnceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeOnceRequest) ProtoMessage() {}

func (x *SubscribeOnceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_events_v1_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeOnceRequest.ProtoReflect.Descriptor instead.
func (*SubscribeOnceRequest) Descriptor() ([]byte, []int) {
	return file_tkd_events_v1_events_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeOnceRequest) GetTypeUrls() []string {
	if x != nil {
		return x.TypeUrls
	}
	return nil
}

var File_tkd_events_v1_events_proto protoreflect.FileDescriptor

const file_tkd_events_v1_events_proto_rawDesc = "" +
	"\n" +
	"\x1atkd/events/v1/events.proto\x12\rtkd.events.v1\x1a\x19google/protobuf/any.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1bbuf/validate/validate.proto\"X\n" +
	"\x05Event\x123\n" +
	"\x05event\x18\x01 \x01(\v2\x14.google.protobuf.AnyB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x05event\x12\x1a\n" +
	"\bretained\x18\x02 \x01(\bR\bretained\"f\n" +
	"\x10SubscribeRequest\x12\x1e\n" +
	"\tsubscribe\x18\x01 \x01(\tH\x00R\tsubscribe\x12\"\n" +
	"\vunsubscribe\x18\x02 \x01(\tH\x00R\vunsubscribeB\x0e\n" +
	"\x04kind\x12\x06\xfa\xf7\x18\x02\b\x01\"<\n" +
	"\x14SubscribeOnceRequest\x12$\n" +
	"\ttype_urls\x18\x01 \x03(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\btypeUrls2\x9e\x02\n" +
	"\fEventService\x12F\n" +
	"\tSubscribe\x12\x1f.tkd.events.v1.SubscribeRequest\x1a\x14.tkd.events.v1.Event(\x010\x01\x12L\n" +
	"\rSubscribeOnce\x12#.tkd.events.v1.SubscribeOnceRequest\x1a\x14.tkd.events.v1.Event0\x01\x127\n" +
	"\aPublish\x12\x14.tkd.events.v1.Event\x1a\x16.google.protobuf.Empty\x12?\n" +
	"\rPublishStream\x12\x14.tkd.events.v1.Event\x1a\x16.google.protobuf.Empty(\x01B\xbb\x01\n" +
	"\x11com.tkd.events.v1B\vEventsProtoP\x01ZCgithub.com/tierklinik-dobersberg/apis/gen/go/tkd/events/v1;eventsv1\xa2\x02\x03TEX\xaa\x02\rTkd.Events.V1\xca\x02\rTkd\\Events\\V1\xe2\x02\x19Tkd\\Events\\V1\\GPBMetadata\xea\x02\x0fTkd::Events::V1b\x06proto3"

var (
	file_tkd_events_v1_events_proto_rawDescOnce sync.Once
	file_tkd_events_v1_events_proto_rawDescData []byte
)

func file_tkd_events_v1_events_proto_rawDescGZIP() []byte {
	file_tkd_events_v1_events_proto_rawDescOnce.Do(func() {
		file_tkd_events_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tkd_events_v1_events_proto_rawDesc), len(file_tkd_events_v1_events_proto_rawDesc)))
	})
	return file_tkd_events_v1_events_proto_rawDescData
}

var file_tkd_events_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tkd_events_v1_events_proto_goTypes = []any{
	(*Event)(nil),                // 0: tkd.events.v1.Event
	(*SubscribeRequest)(nil),     // 1: tkd.events.v1.SubscribeRequest
	(*SubscribeOnceRequest)(nil), // 2: tkd.events.v1.SubscribeOnceRequest
	(*anypb.Any)(nil),            // 3: google.protobuf.Any
	(*emptypb.Empty)(nil),        // 4: google.protobuf.Empty
}
var file_tkd_events_v1_events_proto_depIdxs = []int32{
	3, // 0: tkd.events.v1.Event.event:type_name -> google.protobuf.Any
	1, // 1: tkd.events.v1.EventService.Subscribe:input_type -> tkd.events.v1.SubscribeRequest
	2, // 2: tkd.events.v1.EventService.SubscribeOnce:input_type -> tkd.events.v1.SubscribeOnceRequest
	0, // 3: tkd.events.v1.EventService.Publish:input_type -> tkd.events.v1.Event
	0, // 4: tkd.events.v1.EventService.PublishStream:input_type -> tkd.events.v1.Event
	0, // 5: tkd.events.v1.EventService.Subscribe:output_type -> tkd.events.v1.Event
	0, // 6: tkd.events.v1.EventService.SubscribeOnce:output_type -> tkd.events.v1.Event
	4, // 7: tkd.events.v1.EventService.Publish:output_type -> google.protobuf.Empty
	4, // 8: tkd.events.v1.EventService.PublishStream:output_type -> google.protobuf.Empty
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_tkd_events_v1_events_proto_init() }
func file_tkd_events_v1_events_proto_init() {
	if File_tkd_events_v1_events_proto != nil {
		return
	}
	file_tkd_events_v1_events_proto_msgTypes[1].OneofWrappers = []any{
		(*SubscribeRequest_Subscribe)(nil),
		(*SubscribeRequest_Unsubscribe)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tkd_events_v1_events_proto_rawDesc), len(file_tkd_events_v1_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tkd_events_v1_events_proto_goTypes,
		DependencyIndexes: file_tkd_events_v1_events_proto_depIdxs,
		MessageInfos:      file_tkd_events_v1_events_proto_msgTypes,
	}.Build()
	File_tkd_events_v1_events_proto = out.File
	file_tkd_events_v1_events_proto_goTypes = nil
	file_tkd_events_v1_events_proto_depIdxs = nil
}
