// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: tkd/roster/v1/constraint.proto

package rosterv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/tierklinik-dobersberg/apis/gen/go/tkd/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// OffTimeViolation is a constraint type due to a off-time request.
type OffTimeViolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Entry holds the OffTimeEntry.
	Entry *OffTimeEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *OffTimeViolation) Reset() {
	*x = OffTimeViolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffTimeViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffTimeViolation) ProtoMessage() {}

func (x *OffTimeViolation) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffTimeViolation.ProtoReflect.Descriptor instead.
func (*OffTimeViolation) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{0}
}

func (x *OffTimeViolation) GetEntry() *OffTimeEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// ConstraintEvaluationViolation is a constraint type that is the result
// of evaluating a constraint expression for a user or roster.
type ConstraintEvaluationViolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Id is the unique identifier of the Constraint that caused the violation.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Description is the description of the Constraint and copied to the
	// ConstraintEvaluationViolation for convenience.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ConstraintEvaluationViolation) Reset() {
	*x = ConstraintEvaluationViolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstraintEvaluationViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstraintEvaluationViolation) ProtoMessage() {}

func (x *ConstraintEvaluationViolation) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstraintEvaluationViolation.ProtoReflect.Descriptor instead.
func (*ConstraintEvaluationViolation) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{1}
}

func (x *ConstraintEvaluationViolation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConstraintEvaluationViolation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// ConstraintViolation is a violation of a constraint for a given
// user or roster.
type ConstraintViolation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hard bool `protobuf:"varint,1,opt,name=hard,proto3" json:"hard,omitempty"`
	// Types that are assignable to Kind:
	//
	//	*ConstraintViolation_OffTime
	//	*ConstraintViolation_Evaluation
	//	*ConstraintViolation_NoWorkTime
	Kind isConstraintViolation_Kind `protobuf_oneof:"kind"`
}

func (x *ConstraintViolation) Reset() {
	*x = ConstraintViolation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstraintViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstraintViolation) ProtoMessage() {}

func (x *ConstraintViolation) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstraintViolation.ProtoReflect.Descriptor instead.
func (*ConstraintViolation) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{2}
}

func (x *ConstraintViolation) GetHard() bool {
	if x != nil {
		return x.Hard
	}
	return false
}

func (m *ConstraintViolation) GetKind() isConstraintViolation_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *ConstraintViolation) GetOffTime() *OffTimeViolation {
	if x, ok := x.GetKind().(*ConstraintViolation_OffTime); ok {
		return x.OffTime
	}
	return nil
}

func (x *ConstraintViolation) GetEvaluation() *ConstraintEvaluationViolation {
	if x, ok := x.GetKind().(*ConstraintViolation_Evaluation); ok {
		return x.Evaluation
	}
	return nil
}

func (x *ConstraintViolation) GetNoWorkTime() bool {
	if x, ok := x.GetKind().(*ConstraintViolation_NoWorkTime); ok {
		return x.NoWorkTime
	}
	return false
}

type isConstraintViolation_Kind interface {
	isConstraintViolation_Kind()
}

type ConstraintViolation_OffTime struct {
	OffTime *OffTimeViolation `protobuf:"bytes,2,opt,name=off_time,json=offTime,proto3,oneof"`
}

type ConstraintViolation_Evaluation struct {
	Evaluation *ConstraintEvaluationViolation `protobuf:"bytes,3,opt,name=evaluation,proto3,oneof"`
}

type ConstraintViolation_NoWorkTime struct {
	NoWorkTime bool `protobuf:"varint,4,opt,name=NoWorkTime,proto3,oneof"`
}

func (*ConstraintViolation_OffTime) isConstraintViolation_Kind() {}

func (*ConstraintViolation_Evaluation) isConstraintViolation_Kind() {}

func (*ConstraintViolation_NoWorkTime) isConstraintViolation_Kind() {}

// ConstraintViolationList holds all ConstraintViolations for a
// user.
type ConstraintViolationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Violations []*ConstraintViolation `protobuf:"bytes,2,rep,name=violations,proto3" json:"violations,omitempty"`
}

func (x *ConstraintViolationList) Reset() {
	*x = ConstraintViolationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConstraintViolationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstraintViolationList) ProtoMessage() {}

func (x *ConstraintViolationList) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstraintViolationList.ProtoReflect.Descriptor instead.
func (*ConstraintViolationList) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{3}
}

func (x *ConstraintViolationList) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConstraintViolationList) GetViolations() []*ConstraintViolation {
	if x != nil {
		return x.Violations
	}
	return nil
}

type Constraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Expression    string                 `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	RoleIds       []string               `protobuf:"bytes,4,rep,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	UserIds       []string               `protobuf:"bytes,5,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	Hard          bool                   `protobuf:"varint,6,opt,name=hard,proto3" json:"hard,omitempty"`
	Penalty       float32                `protobuf:"fixed32,7,opt,name=penalty,proto3" json:"penalty,omitempty"`
	Deny          bool                   `protobuf:"varint,8,opt,name=deny,proto3" json:"deny,omitempty"`
	RosterOnly    bool                   `protobuf:"varint,9,opt,name=roster_only,json=rosterOnly,proto3" json:"roster_only,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatorId     string                 `protobuf:"bytes,11,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LastUpdatedBy string                 `protobuf:"bytes,13,opt,name=last_updated_by,json=lastUpdatedBy,proto3" json:"last_updated_by,omitempty"`
}

func (x *Constraint) Reset() {
	*x = Constraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Constraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Constraint) ProtoMessage() {}

func (x *Constraint) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Constraint.ProtoReflect.Descriptor instead.
func (*Constraint) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{4}
}

func (x *Constraint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Constraint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Constraint) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *Constraint) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *Constraint) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *Constraint) GetHard() bool {
	if x != nil {
		return x.Hard
	}
	return false
}

func (x *Constraint) GetPenalty() float32 {
	if x != nil {
		return x.Penalty
	}
	return 0
}

func (x *Constraint) GetDeny() bool {
	if x != nil {
		return x.Deny
	}
	return false
}

func (x *Constraint) GetRosterOnly() bool {
	if x != nil {
		return x.RosterOnly
	}
	return false
}

func (x *Constraint) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Constraint) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Constraint) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Constraint) GetLastUpdatedBy() string {
	if x != nil {
		return x.LastUpdatedBy
	}
	return ""
}

type CreateConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Expression  string   `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	RoleIds     []string `protobuf:"bytes,3,rep,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	UserIds     []string `protobuf:"bytes,4,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	Hard        bool     `protobuf:"varint,5,opt,name=hard,proto3" json:"hard,omitempty"`
	Penalty     float32  `protobuf:"fixed32,6,opt,name=penalty,proto3" json:"penalty,omitempty"`
	Deny        bool     `protobuf:"varint,7,opt,name=deny,proto3" json:"deny,omitempty"`
	RosterOnly  bool     `protobuf:"varint,8,opt,name=roster_only,json=rosterOnly,proto3" json:"roster_only,omitempty"`
}

func (x *CreateConstraintRequest) Reset() {
	*x = CreateConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConstraintRequest) ProtoMessage() {}

func (x *CreateConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConstraintRequest.ProtoReflect.Descriptor instead.
func (*CreateConstraintRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{5}
}

func (x *CreateConstraintRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateConstraintRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *CreateConstraintRequest) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *CreateConstraintRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *CreateConstraintRequest) GetHard() bool {
	if x != nil {
		return x.Hard
	}
	return false
}

func (x *CreateConstraintRequest) GetPenalty() float32 {
	if x != nil {
		return x.Penalty
	}
	return 0
}

func (x *CreateConstraintRequest) GetDeny() bool {
	if x != nil {
		return x.Deny
	}
	return false
}

func (x *CreateConstraintRequest) GetRosterOnly() bool {
	if x != nil {
		return x.RosterOnly
	}
	return false
}

type CreateConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constraint *Constraint `protobuf:"bytes,1,opt,name=constraint,proto3" json:"constraint,omitempty"`
}

func (x *CreateConstraintResponse) Reset() {
	*x = CreateConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConstraintResponse) ProtoMessage() {}

func (x *CreateConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConstraintResponse.ProtoReflect.Descriptor instead.
func (*CreateConstraintResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{6}
}

func (x *CreateConstraintResponse) GetConstraint() *Constraint {
	if x != nil {
		return x.Constraint
	}
	return nil
}

type UpdateConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Expression  string                 `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	RoleIds     []string               `protobuf:"bytes,4,rep,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	UserIds     []string               `protobuf:"bytes,5,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	Hard        bool                   `protobuf:"varint,6,opt,name=hard,proto3" json:"hard,omitempty"`
	Penalty     float32                `protobuf:"fixed32,7,opt,name=penalty,proto3" json:"penalty,omitempty"`
	Deny        bool                   `protobuf:"varint,8,opt,name=deny,proto3" json:"deny,omitempty"`
	RosterOnly  bool                   `protobuf:"varint,9,opt,name=roster_only,json=rosterOnly,proto3" json:"roster_only,omitempty"`
	WriteMask   *fieldmaskpb.FieldMask `protobuf:"bytes,20,opt,name=write_mask,json=writeMask,proto3" json:"write_mask,omitempty"`
}

func (x *UpdateConstraintRequest) Reset() {
	*x = UpdateConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConstraintRequest) ProtoMessage() {}

func (x *UpdateConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConstraintRequest.ProtoReflect.Descriptor instead.
func (*UpdateConstraintRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateConstraintRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateConstraintRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateConstraintRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *UpdateConstraintRequest) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *UpdateConstraintRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *UpdateConstraintRequest) GetHard() bool {
	if x != nil {
		return x.Hard
	}
	return false
}

func (x *UpdateConstraintRequest) GetPenalty() float32 {
	if x != nil {
		return x.Penalty
	}
	return 0
}

func (x *UpdateConstraintRequest) GetDeny() bool {
	if x != nil {
		return x.Deny
	}
	return false
}

func (x *UpdateConstraintRequest) GetRosterOnly() bool {
	if x != nil {
		return x.RosterOnly
	}
	return false
}

func (x *UpdateConstraintRequest) GetWriteMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.WriteMask
	}
	return nil
}

type UpdateConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Constraint *Constraint `protobuf:"bytes,1,opt,name=constraint,proto3" json:"constraint,omitempty"`
}

func (x *UpdateConstraintResponse) Reset() {
	*x = UpdateConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConstraintResponse) ProtoMessage() {}

func (x *UpdateConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConstraintResponse.ProtoReflect.Descriptor instead.
func (*UpdateConstraintResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateConstraintResponse) GetConstraint() *Constraint {
	if x != nil {
		return x.Constraint
	}
	return nil
}

type DeleteConstraintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteConstraintRequest) Reset() {
	*x = DeleteConstraintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConstraintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConstraintRequest) ProtoMessage() {}

func (x *DeleteConstraintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConstraintRequest.ProtoReflect.Descriptor instead.
func (*DeleteConstraintRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteConstraintRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteConstraintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteConstraintResponse) Reset() {
	*x = DeleteConstraintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConstraintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConstraintResponse) ProtoMessage() {}

func (x *DeleteConstraintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConstraintResponse.ProtoReflect.Descriptor instead.
func (*DeleteConstraintResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{10}
}

type FindConstraintsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	RoleIds []string `protobuf:"bytes,2,rep,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
}

func (x *FindConstraintsRequest) Reset() {
	*x = FindConstraintsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindConstraintsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindConstraintsRequest) ProtoMessage() {}

func (x *FindConstraintsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindConstraintsRequest.ProtoReflect.Descriptor instead.
func (*FindConstraintsRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{11}
}

func (x *FindConstraintsRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *FindConstraintsRequest) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type FindConstraintsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Constraint `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *FindConstraintsResponse) Reset() {
	*x = FindConstraintsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_roster_v1_constraint_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindConstraintsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindConstraintsResponse) ProtoMessage() {}

func (x *FindConstraintsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_constraint_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindConstraintsResponse.ProtoReflect.Descriptor instead.
func (*FindConstraintsResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_constraint_proto_rawDescGZIP(), []int{12}
}

func (x *FindConstraintsResponse) GetResults() []*Constraint {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_tkd_roster_v1_constraint_proto protoreflect.FileDescriptor

var file_tkd_roster_v1_constraint_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x74, 0x6b, 0x64, 0x2f, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a,
	0x1b, 0x74, 0x6b, 0x64, 0x2f, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6f,
	0x66, 0x66, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x74, 0x6b,
	0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75,
	0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x10,
	0x4f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x31, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x22, 0x51, 0x0a, 0x1d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x6f, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe1, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x61,
	0x72, 0x64, 0x12, 0x3c, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x69, 0x6f, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x4e, 0x0a, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0a, 0x4e, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x4e, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x76, 0x0a, 0x17, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42,
	0x0a, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x56, 0x69, 0x6f,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xb4, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x72,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x6e, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x6e, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x86, 0x02, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0xf7, 0x18, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x27, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0xf7, 0x18, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68,
	0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x6e, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x6e,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x6e,
	0x6c, 0x79, 0x22, 0x55, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x22, 0xbf, 0x02, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x61, 0x72,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x65, 0x6e, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x6e, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x6c, 0x79,
	0x12, 0x39, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x55, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6b,
	0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x22, 0x32, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0xf7, 0x18, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x73, 0x22, 0x4e, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x32, 0xd5, 0x03, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x74,
	0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x05, 0xb2,
	0x7e, 0x02, 0x08, 0x02, 0x12, 0x6a, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x05, 0xb2, 0x7e, 0x02, 0x08, 0x02,
	0x12, 0x6a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74,
	0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x05, 0xb2, 0x7e, 0x02, 0x08, 0x02, 0x12, 0x67, 0x0a, 0x0f,
	0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x25, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x05,
	0xb2, 0x7e, 0x02, 0x08, 0x02, 0x1a, 0x13, 0xba, 0x7e, 0x10, 0x0a, 0x0e, 0x72, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x42, 0xbf, 0x01, 0x0a, 0x11, 0x63,
	0x6f, 0x6d, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x42, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x69, 0x65, 0x72, 0x6b, 0x6c, 0x69, 0x6e, 0x69, 0x6b, 0x2d, 0x64, 0x6f, 0x62, 0x65, 0x72,
	0x73, 0x62, 0x65, 0x72, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x74, 0x6b, 0x64, 0x2f, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b,
	0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x52, 0x58, 0xaa, 0x02,
	0x0d, 0x54, 0x6b, 0x64, 0x2e, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0d, 0x54, 0x6b, 0x64, 0x5c, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x19, 0x54, 0x6b, 0x64, 0x5c, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x54, 0x6b, 0x64,
	0x3a, 0x3a, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tkd_roster_v1_constraint_proto_rawDescOnce sync.Once
	file_tkd_roster_v1_constraint_proto_rawDescData = file_tkd_roster_v1_constraint_proto_rawDesc
)

func file_tkd_roster_v1_constraint_proto_rawDescGZIP() []byte {
	file_tkd_roster_v1_constraint_proto_rawDescOnce.Do(func() {
		file_tkd_roster_v1_constraint_proto_rawDescData = protoimpl.X.CompressGZIP(file_tkd_roster_v1_constraint_proto_rawDescData)
	})
	return file_tkd_roster_v1_constraint_proto_rawDescData
}

var file_tkd_roster_v1_constraint_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_tkd_roster_v1_constraint_proto_goTypes = []interface{}{
	(*OffTimeViolation)(nil),              // 0: tkd.roster.v1.OffTimeViolation
	(*ConstraintEvaluationViolation)(nil), // 1: tkd.roster.v1.ConstraintEvaluationViolation
	(*ConstraintViolation)(nil),           // 2: tkd.roster.v1.ConstraintViolation
	(*ConstraintViolationList)(nil),       // 3: tkd.roster.v1.ConstraintViolationList
	(*Constraint)(nil),                    // 4: tkd.roster.v1.Constraint
	(*CreateConstraintRequest)(nil),       // 5: tkd.roster.v1.CreateConstraintRequest
	(*CreateConstraintResponse)(nil),      // 6: tkd.roster.v1.CreateConstraintResponse
	(*UpdateConstraintRequest)(nil),       // 7: tkd.roster.v1.UpdateConstraintRequest
	(*UpdateConstraintResponse)(nil),      // 8: tkd.roster.v1.UpdateConstraintResponse
	(*DeleteConstraintRequest)(nil),       // 9: tkd.roster.v1.DeleteConstraintRequest
	(*DeleteConstraintResponse)(nil),      // 10: tkd.roster.v1.DeleteConstraintResponse
	(*FindConstraintsRequest)(nil),        // 11: tkd.roster.v1.FindConstraintsRequest
	(*FindConstraintsResponse)(nil),       // 12: tkd.roster.v1.FindConstraintsResponse
	(*OffTimeEntry)(nil),                  // 13: tkd.roster.v1.OffTimeEntry
	(*timestamppb.Timestamp)(nil),         // 14: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),         // 15: google.protobuf.FieldMask
}
var file_tkd_roster_v1_constraint_proto_depIdxs = []int32{
	13, // 0: tkd.roster.v1.OffTimeViolation.entry:type_name -> tkd.roster.v1.OffTimeEntry
	0,  // 1: tkd.roster.v1.ConstraintViolation.off_time:type_name -> tkd.roster.v1.OffTimeViolation
	1,  // 2: tkd.roster.v1.ConstraintViolation.evaluation:type_name -> tkd.roster.v1.ConstraintEvaluationViolation
	2,  // 3: tkd.roster.v1.ConstraintViolationList.violations:type_name -> tkd.roster.v1.ConstraintViolation
	14, // 4: tkd.roster.v1.Constraint.created_at:type_name -> google.protobuf.Timestamp
	14, // 5: tkd.roster.v1.Constraint.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 6: tkd.roster.v1.CreateConstraintResponse.constraint:type_name -> tkd.roster.v1.Constraint
	15, // 7: tkd.roster.v1.UpdateConstraintRequest.write_mask:type_name -> google.protobuf.FieldMask
	4,  // 8: tkd.roster.v1.UpdateConstraintResponse.constraint:type_name -> tkd.roster.v1.Constraint
	4,  // 9: tkd.roster.v1.FindConstraintsResponse.results:type_name -> tkd.roster.v1.Constraint
	5,  // 10: tkd.roster.v1.ConstraintService.CreateConstraint:input_type -> tkd.roster.v1.CreateConstraintRequest
	7,  // 11: tkd.roster.v1.ConstraintService.UpdateConstraint:input_type -> tkd.roster.v1.UpdateConstraintRequest
	9,  // 12: tkd.roster.v1.ConstraintService.DeleteConstraint:input_type -> tkd.roster.v1.DeleteConstraintRequest
	11, // 13: tkd.roster.v1.ConstraintService.FindConstraints:input_type -> tkd.roster.v1.FindConstraintsRequest
	6,  // 14: tkd.roster.v1.ConstraintService.CreateConstraint:output_type -> tkd.roster.v1.CreateConstraintResponse
	8,  // 15: tkd.roster.v1.ConstraintService.UpdateConstraint:output_type -> tkd.roster.v1.UpdateConstraintResponse
	10, // 16: tkd.roster.v1.ConstraintService.DeleteConstraint:output_type -> tkd.roster.v1.DeleteConstraintResponse
	12, // 17: tkd.roster.v1.ConstraintService.FindConstraints:output_type -> tkd.roster.v1.FindConstraintsResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_tkd_roster_v1_constraint_proto_init() }
func file_tkd_roster_v1_constraint_proto_init() {
	if File_tkd_roster_v1_constraint_proto != nil {
		return
	}
	file_tkd_roster_v1_offtime_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tkd_roster_v1_constraint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffTimeViolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstraintEvaluationViolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstraintViolation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConstraintViolationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Constraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConstraintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConstraintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindConstraintsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_roster_v1_constraint_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindConstraintsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tkd_roster_v1_constraint_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ConstraintViolation_OffTime)(nil),
		(*ConstraintViolation_Evaluation)(nil),
		(*ConstraintViolation_NoWorkTime)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tkd_roster_v1_constraint_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tkd_roster_v1_constraint_proto_goTypes,
		DependencyIndexes: file_tkd_roster_v1_constraint_proto_depIdxs,
		MessageInfos:      file_tkd_roster_v1_constraint_proto_msgTypes,
	}.Build()
	File_tkd_roster_v1_constraint_proto = out.File
	file_tkd_roster_v1_constraint_proto_rawDesc = nil
	file_tkd_roster_v1_constraint_proto_goTypes = nil
	file_tkd_roster_v1_constraint_proto_depIdxs = nil
}
