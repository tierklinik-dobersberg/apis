// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: tkd/roster/v1/offtime.proto

package rosterv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/tierklinik-dobersberg/apis/gen/go/tkd/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OffTimeType int32

const (
	// Unspecified means that the requestor does not care whether the off-time
	// is based on vacation credits of time compenstation.
	OffTimeType_OFF_TIME_TYPE_UNSPECIFIED OffTimeType = 0
	// Vacation is used to tell the manager that this off-time is highly required
	// and the requestor is fine with spending vacation credits.
	OffTimeType_OFF_TIME_TYPE_VACATION OffTimeType = 1
	// TimeOff is used to tell the manager that this off-time is not mandatory
	// and that the requestor is only willing to spend time-compensation.
	OffTimeType_OFF_TIME_TYPE_TIME_OFF OffTimeType = 2
)

// Enum value maps for OffTimeType.
var (
	OffTimeType_name = map[int32]string{
		0: "OFF_TIME_TYPE_UNSPECIFIED",
		1: "OFF_TIME_TYPE_VACATION",
		2: "OFF_TIME_TYPE_TIME_OFF",
	}
	OffTimeType_value = map[string]int32{
		"OFF_TIME_TYPE_UNSPECIFIED": 0,
		"OFF_TIME_TYPE_VACATION":    1,
		"OFF_TIME_TYPE_TIME_OFF":    2,
	}
)

func (x OffTimeType) Enum() *OffTimeType {
	p := new(OffTimeType)
	*p = x
	return p
}

func (x OffTimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OffTimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_tkd_roster_v1_offtime_proto_enumTypes[0].Descriptor()
}

func (OffTimeType) Type() protoreflect.EnumType {
	return &file_tkd_roster_v1_offtime_proto_enumTypes[0]
}

func (x OffTimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OffTimeType.Descriptor instead.
func (OffTimeType) EnumDescriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{0}
}

type ApprovalRequestType int32

const (
	ApprovalRequestType_APPROVAL_REQUEST_TYPE_UNSPECIFIED ApprovalRequestType = 0
	ApprovalRequestType_APPROVAL_REQUEST_TYPE_APPROVED    ApprovalRequestType = 1
	ApprovalRequestType_APPROVAL_REQUEST_TYPE_REJECTED    ApprovalRequestType = 2
)

// Enum value maps for ApprovalRequestType.
var (
	ApprovalRequestType_name = map[int32]string{
		0: "APPROVAL_REQUEST_TYPE_UNSPECIFIED",
		1: "APPROVAL_REQUEST_TYPE_APPROVED",
		2: "APPROVAL_REQUEST_TYPE_REJECTED",
	}
	ApprovalRequestType_value = map[string]int32{
		"APPROVAL_REQUEST_TYPE_UNSPECIFIED": 0,
		"APPROVAL_REQUEST_TYPE_APPROVED":    1,
		"APPROVAL_REQUEST_TYPE_REJECTED":    2,
	}
)

func (x ApprovalRequestType) Enum() *ApprovalRequestType {
	p := new(ApprovalRequestType)
	*p = x
	return p
}

func (x ApprovalRequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApprovalRequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_tkd_roster_v1_offtime_proto_enumTypes[1].Descriptor()
}

func (ApprovalRequestType) Type() protoreflect.EnumType {
	return &file_tkd_roster_v1_offtime_proto_enumTypes[1]
}

func (x ApprovalRequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApprovalRequestType.Descriptor instead.
func (ApprovalRequestType) EnumDescriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{1}
}

type OffTimeApproval struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Approved is set to true when the off-time request has been approved
	// by a manager.
	Approved bool `protobuf:"varint,2,opt,name=approved,proto3" json:"approved,omitempty"`
	// ApprovedAt is set to the time-stamp the off-time request has been
	// approved.
	ApprovedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=approved_at,json=approvedAt,proto3" json:"approved_at,omitempty"`
	// ApproverId holds the ID of the user that approved the request.
	ApproverId string `protobuf:"bytes,4,opt,name=approver_id,json=approverId,proto3" json:"approver_id,omitempty"`
	// Comment may hold an additional comment from management.
	Comment       string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OffTimeApproval) Reset() {
	*x = OffTimeApproval{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffTimeApproval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffTimeApproval) ProtoMessage() {}

func (x *OffTimeApproval) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffTimeApproval.ProtoReflect.Descriptor instead.
func (*OffTimeApproval) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{0}
}

func (x *OffTimeApproval) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *OffTimeApproval) GetApprovedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

func (x *OffTimeApproval) GetApproverId() string {
	if x != nil {
		return x.ApproverId
	}
	return ""
}

func (x *OffTimeApproval) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type OffTimeCosts struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// OfftimeId is the ID of the off-time request, if any.
	OfftimeId string `protobuf:"bytes,2,opt,name=offtime_id,json=offtimeId,proto3" json:"offtime_id,omitempty"`
	// RosterId is the ID of the roster this OffTimeCosts belong to.
	RosterId string `protobuf:"bytes,3,opt,name=roster_id,json=rosterId,proto3" json:"roster_id,omitempty"`
	// UserId is the ID of the user this off-time costs belong to.
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// CreatedAt is set to the time this off-time-costs entry has been
	// created. This field must not be set during OffTimeService.AddOffTimeCosts.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// CreatorId holds the ID of the user that created this entry.
	// This field must not be set during OffTimeService.AddOffTimeCosts.
	CreatorId string `protobuf:"bytes,6,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	// The actual duration costs of this entry.
	Costs *durationpb.Duration `protobuf:"bytes,7,opt,name=costs,proto3" json:"costs,omitempty"`
	// IsVacation is set to true if the off-time-costs apply to the vacation
	// credits. If set to false, the off-time costs are for time compensation.
	IsVacation bool `protobuf:"varint,8,opt,name=is_vacation,json=isVacation,proto3" json:"is_vacation,omitempty"`
	// Date holds the date of the off-time costs.
	Date *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=date,proto3" json:"date,omitempty"`
	// Comment may holde an optional comment for the off-time costs.
	Comment       string `protobuf:"bytes,10,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OffTimeCosts) Reset() {
	*x = OffTimeCosts{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffTimeCosts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffTimeCosts) ProtoMessage() {}

func (x *OffTimeCosts) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffTimeCosts.ProtoReflect.Descriptor instead.
func (*OffTimeCosts) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{1}
}

func (x *OffTimeCosts) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OffTimeCosts) GetOfftimeId() string {
	if x != nil {
		return x.OfftimeId
	}
	return ""
}

func (x *OffTimeCosts) GetRosterId() string {
	if x != nil {
		return x.RosterId
	}
	return ""
}

func (x *OffTimeCosts) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OffTimeCosts) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OffTimeCosts) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *OffTimeCosts) GetCosts() *durationpb.Duration {
	if x != nil {
		return x.Costs
	}
	return nil
}

func (x *OffTimeCosts) GetIsVacation() bool {
	if x != nil {
		return x.IsVacation
	}
	return false
}

func (x *OffTimeCosts) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *OffTimeCosts) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type OffTimeEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id is a unique identifier for this off-time entry.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// RequestorId is the ID of the user that requested off-time.
	RequestorId string `protobuf:"bytes,2,opt,name=requestor_id,json=requestorId,proto3" json:"requestor_id,omitempty"`
	// The date/time (inclusive) at which the off-time should start.
	From *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// The date/time (inclusive) at which the off-time should end.
	To *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	// An optional description for management in Markdown format.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// The type of the off-time request.
	Type OffTimeType `protobuf:"varint,6,opt,name=type,proto3,enum=tkd.roster.v1.OffTimeType" json:"type,omitempty"`
	// If approved/rejected by management, this field will be poluated.
	Approval      *OffTimeApproval       `protobuf:"bytes,7,opt,name=approval,proto3" json:"approval,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatorId     string                 `protobuf:"bytes,9,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OffTimeEntry) Reset() {
	*x = OffTimeEntry{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffTimeEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffTimeEntry) ProtoMessage() {}

func (x *OffTimeEntry) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffTimeEntry.ProtoReflect.Descriptor instead.
func (*OffTimeEntry) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{2}
}

func (x *OffTimeEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OffTimeEntry) GetRequestorId() string {
	if x != nil {
		return x.RequestorId
	}
	return ""
}

func (x *OffTimeEntry) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *OffTimeEntry) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *OffTimeEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OffTimeEntry) GetType() OffTimeType {
	if x != nil {
		return x.Type
	}
	return OffTimeType_OFF_TIME_TYPE_UNSPECIFIED
}

func (x *OffTimeEntry) GetApproval() *OffTimeApproval {
	if x != nil {
		return x.Approval
	}
	return nil
}

func (x *OffTimeEntry) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OffTimeEntry) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

type GetOffTimeEntryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of OffTimeEntry IDs to load.
	Ids           []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOffTimeEntryRequest) Reset() {
	*x = GetOffTimeEntryRequest{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOffTimeEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffTimeEntryRequest) ProtoMessage() {}

func (x *GetOffTimeEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffTimeEntryRequest.ProtoReflect.Descriptor instead.
func (*GetOffTimeEntryRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{3}
}

func (x *GetOffTimeEntryRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetOffTimeEntryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entry         []*OffTimeEntry        `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOffTimeEntryResponse) Reset() {
	*x = GetOffTimeEntryResponse{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOffTimeEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffTimeEntryResponse) ProtoMessage() {}

func (x *GetOffTimeEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffTimeEntryResponse.ProtoReflect.Descriptor instead.
func (*GetOffTimeEntryResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{4}
}

func (x *GetOffTimeEntryResponse) GetEntry() []*OffTimeEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type CreateOffTimeRequestRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	From  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// The ID of the user that requests off-time. Only administrators may
	// set this field.
	// For non-administrators, or if the field is empty, it defaults to the
	// user-id that performs the request.
	RequestorId string `protobuf:"bytes,3,opt,name=requestor_id,json=requestorId,proto3" json:"requestor_id,omitempty"`
	// An optional description of the off-time-request.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The type of off-time request.
	RequestType   OffTimeType `protobuf:"varint,5,opt,name=request_type,json=requestType,proto3,enum=tkd.roster.v1.OffTimeType" json:"request_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOffTimeRequestRequest) Reset() {
	*x = CreateOffTimeRequestRequest{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOffTimeRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOffTimeRequestRequest) ProtoMessage() {}

func (x *CreateOffTimeRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOffTimeRequestRequest.ProtoReflect.Descriptor instead.
func (*CreateOffTimeRequestRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{5}
}

func (x *CreateOffTimeRequestRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *CreateOffTimeRequestRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *CreateOffTimeRequestRequest) GetRequestorId() string {
	if x != nil {
		return x.RequestorId
	}
	return ""
}

func (x *CreateOffTimeRequestRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOffTimeRequestRequest) GetRequestType() OffTimeType {
	if x != nil {
		return x.RequestType
	}
	return OffTimeType_OFF_TIME_TYPE_UNSPECIFIED
}

type CreateOffTimeRequestResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Holds the created off-time request entry.
	Entry         *OffTimeEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOffTimeRequestResponse) Reset() {
	*x = CreateOffTimeRequestResponse{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOffTimeRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOffTimeRequestResponse) ProtoMessage() {}

func (x *CreateOffTimeRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOffTimeRequestResponse.ProtoReflect.Descriptor instead.
func (*CreateOffTimeRequestResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{6}
}

func (x *CreateOffTimeRequestResponse) GetEntry() *OffTimeEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type UpdateOffTimeRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To            *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	RequestorId   string                 `protobuf:"bytes,4,opt,name=requestor_id,json=requestorId,proto3" json:"requestor_id,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	RequestType   OffTimeType            `protobuf:"varint,6,opt,name=request_type,json=requestType,proto3,enum=tkd.roster.v1.OffTimeType" json:"request_type,omitempty"`
	FieldMask     *fieldmaskpb.FieldMask `protobuf:"bytes,7,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOffTimeRequestRequest) Reset() {
	*x = UpdateOffTimeRequestRequest{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOffTimeRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOffTimeRequestRequest) ProtoMessage() {}

func (x *UpdateOffTimeRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOffTimeRequestRequest.ProtoReflect.Descriptor instead.
func (*UpdateOffTimeRequestRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateOffTimeRequestRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateOffTimeRequestRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *UpdateOffTimeRequestRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *UpdateOffTimeRequestRequest) GetRequestorId() string {
	if x != nil {
		return x.RequestorId
	}
	return ""
}

func (x *UpdateOffTimeRequestRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateOffTimeRequestRequest) GetRequestType() OffTimeType {
	if x != nil {
		return x.RequestType
	}
	return OffTimeType_OFF_TIME_TYPE_UNSPECIFIED
}

func (x *UpdateOffTimeRequestRequest) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

type UpdateOffTimeRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entry         *OffTimeEntry          `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOffTimeRequestResponse) Reset() {
	*x = UpdateOffTimeRequestResponse{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOffTimeRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOffTimeRequestResponse) ProtoMessage() {}

func (x *UpdateOffTimeRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOffTimeRequestResponse.ProtoReflect.Descriptor instead.
func (*UpdateOffTimeRequestResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateOffTimeRequestResponse) GetEntry() *OffTimeEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// Request deletion of one or more off-time-request.
type DeleteOffTimeRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []string               `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOffTimeRequestRequest) Reset() {
	*x = DeleteOffTimeRequestRequest{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOffTimeRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOffTimeRequestRequest) ProtoMessage() {}

func (x *DeleteOffTimeRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOffTimeRequestRequest.ProtoReflect.Descriptor instead.
func (*DeleteOffTimeRequestRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteOffTimeRequestRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteOffTimeRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOffTimeRequestResponse) Reset() {
	*x = DeleteOffTimeRequestResponse{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOffTimeRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOffTimeRequestResponse) ProtoMessage() {}

func (x *DeleteOffTimeRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOffTimeRequestResponse.ProtoReflect.Descriptor instead.
func (*DeleteOffTimeRequestResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{10}
}

type FindOffTimeRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	UserIds       []string               `protobuf:"bytes,3,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	Approved      *wrapperspb.BoolValue  `protobuf:"bytes,4,opt,name=approved,proto3" json:"approved,omitempty"`
	ReadMask      *fieldmaskpb.FieldMask `protobuf:"bytes,5,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindOffTimeRequestsRequest) Reset() {
	*x = FindOffTimeRequestsRequest{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindOffTimeRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOffTimeRequestsRequest) ProtoMessage() {}

func (x *FindOffTimeRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOffTimeRequestsRequest.ProtoReflect.Descriptor instead.
func (*FindOffTimeRequestsRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{11}
}

func (x *FindOffTimeRequestsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *FindOffTimeRequestsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *FindOffTimeRequestsRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *FindOffTimeRequestsRequest) GetApproved() *wrapperspb.BoolValue {
	if x != nil {
		return x.Approved
	}
	return nil
}

func (x *FindOffTimeRequestsRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

type FindOffTimeRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*OffTimeEntry        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindOffTimeRequestsResponse) Reset() {
	*x = FindOffTimeRequestsResponse{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindOffTimeRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOffTimeRequestsResponse) ProtoMessage() {}

func (x *FindOffTimeRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOffTimeRequestsResponse.ProtoReflect.Descriptor instead.
func (*FindOffTimeRequestsResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{12}
}

func (x *FindOffTimeRequestsResponse) GetResults() []*OffTimeEntry {
	if x != nil {
		return x.Results
	}
	return nil
}

type ApproveOrRejectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	Type          ApprovalRequestType    `protobuf:"varint,3,opt,name=type,proto3,enum=tkd.roster.v1.ApprovalRequestType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveOrRejectRequest) Reset() {
	*x = ApproveOrRejectRequest{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveOrRejectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveOrRejectRequest) ProtoMessage() {}

func (x *ApproveOrRejectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveOrRejectRequest.ProtoReflect.Descriptor instead.
func (*ApproveOrRejectRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{13}
}

func (x *ApproveOrRejectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApproveOrRejectRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ApproveOrRejectRequest) GetType() ApprovalRequestType {
	if x != nil {
		return x.Type
	}
	return ApprovalRequestType_APPROVAL_REQUEST_TYPE_UNSPECIFIED
}

type ApproveOrRejectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entry         *OffTimeEntry          `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveOrRejectResponse) Reset() {
	*x = ApproveOrRejectResponse{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveOrRejectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveOrRejectResponse) ProtoMessage() {}

func (x *ApproveOrRejectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveOrRejectResponse.ProtoReflect.Descriptor instead.
func (*ApproveOrRejectResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{14}
}

func (x *ApproveOrRejectResponse) GetEntry() *OffTimeEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type AddOffTimeCostsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AddCosts      []*OffTimeCosts        `protobuf:"bytes,1,rep,name=add_costs,json=addCosts,proto3" json:"add_costs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddOffTimeCostsRequest) Reset() {
	*x = AddOffTimeCostsRequest{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOffTimeCostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOffTimeCostsRequest) ProtoMessage() {}

func (x *AddOffTimeCostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOffTimeCostsRequest.ProtoReflect.Descriptor instead.
func (*AddOffTimeCostsRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{15}
}

func (x *AddOffTimeCostsRequest) GetAddCosts() []*OffTimeCosts {
	if x != nil {
		return x.AddCosts
	}
	return nil
}

type AddOffTimeCostsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddOffTimeCostsResponse) Reset() {
	*x = AddOffTimeCostsResponse{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOffTimeCostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOffTimeCostsResponse) ProtoMessage() {}

func (x *AddOffTimeCostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOffTimeCostsResponse.ProtoReflect.Descriptor instead.
func (*AddOffTimeCostsResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{16}
}

type CostsForUsers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIds       []string               `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CostsForUsers) Reset() {
	*x = CostsForUsers{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CostsForUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostsForUsers) ProtoMessage() {}

func (x *CostsForUsers) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostsForUsers.ProtoReflect.Descriptor instead.
func (*CostsForUsers) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{17}
}

func (x *CostsForUsers) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type GetOffTimeCostsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ForUsers      *CostsForUsers         `protobuf:"bytes,1,opt,name=for_users,json=forUsers,proto3" json:"for_users,omitempty"`
	ReadMask      *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=read_mask,json=readMask,proto3" json:"read_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOffTimeCostsRequest) Reset() {
	*x = GetOffTimeCostsRequest{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOffTimeCostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffTimeCostsRequest) ProtoMessage() {}

func (x *GetOffTimeCostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffTimeCostsRequest.ProtoReflect.Descriptor instead.
func (*GetOffTimeCostsRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{18}
}

func (x *GetOffTimeCostsRequest) GetForUsers() *CostsForUsers {
	if x != nil {
		return x.ForUsers
	}
	return nil
}

func (x *GetOffTimeCostsRequest) GetReadMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.ReadMask
	}
	return nil
}

type OffTimeCostSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vacation      *durationpb.Duration   `protobuf:"bytes,1,opt,name=vacation,proto3" json:"vacation,omitempty"`
	TimeOff       *durationpb.Duration   `protobuf:"bytes,2,opt,name=time_off,json=timeOff,proto3" json:"time_off,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OffTimeCostSummary) Reset() {
	*x = OffTimeCostSummary{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OffTimeCostSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffTimeCostSummary) ProtoMessage() {}

func (x *OffTimeCostSummary) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffTimeCostSummary.ProtoReflect.Descriptor instead.
func (*OffTimeCostSummary) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{19}
}

func (x *OffTimeCostSummary) GetVacation() *durationpb.Duration {
	if x != nil {
		return x.Vacation
	}
	return nil
}

func (x *OffTimeCostSummary) GetTimeOff() *durationpb.Duration {
	if x != nil {
		return x.TimeOff
	}
	return nil
}

type UserOffTimeCosts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Costs         []*OffTimeCosts        `protobuf:"bytes,2,rep,name=costs,proto3" json:"costs,omitempty"`
	Summary       *OffTimeCostSummary    `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserOffTimeCosts) Reset() {
	*x = UserOffTimeCosts{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserOffTimeCosts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOffTimeCosts) ProtoMessage() {}

func (x *UserOffTimeCosts) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOffTimeCosts.ProtoReflect.Descriptor instead.
func (*UserOffTimeCosts) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{20}
}

func (x *UserOffTimeCosts) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserOffTimeCosts) GetCosts() []*OffTimeCosts {
	if x != nil {
		return x.Costs
	}
	return nil
}

func (x *UserOffTimeCosts) GetSummary() *OffTimeCostSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type GetOffTimeCostsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*UserOffTimeCosts    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOffTimeCostsResponse) Reset() {
	*x = GetOffTimeCostsResponse{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOffTimeCostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffTimeCostsResponse) ProtoMessage() {}

func (x *GetOffTimeCostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffTimeCostsResponse.ProtoReflect.Descriptor instead.
func (*GetOffTimeCostsResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{21}
}

func (x *GetOffTimeCostsResponse) GetResults() []*UserOffTimeCosts {
	if x != nil {
		return x.Results
	}
	return nil
}

type DeleteOffTimeCostsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOffTimeCostsRequest) Reset() {
	*x = DeleteOffTimeCostsRequest{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOffTimeCostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOffTimeCostsRequest) ProtoMessage() {}

func (x *DeleteOffTimeCostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOffTimeCostsRequest.ProtoReflect.Descriptor instead.
func (*DeleteOffTimeCostsRequest) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteOffTimeCostsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteOffTimeCostsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteOffTimeCostsResponse) Reset() {
	*x = DeleteOffTimeCostsResponse{}
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteOffTimeCostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOffTimeCostsResponse) ProtoMessage() {}

func (x *DeleteOffTimeCostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_roster_v1_offtime_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOffTimeCostsResponse.ProtoReflect.Descriptor instead.
func (*DeleteOffTimeCostsResponse) Descriptor() ([]byte, []int) {
	return file_tkd_roster_v1_offtime_proto_rawDescGZIP(), []int{23}
}

var File_tkd_roster_v1_offtime_proto protoreflect.FileDescriptor

const file_tkd_roster_v1_offtime_proto_rawDesc = "" +
	"\n" +
	"\x1btkd/roster/v1/offtime.proto\x12\rtkd.roster.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a google/protobuf/field_mask.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1etkd/common/v1/descriptor.proto\x1a\x1bbuf/validate/validate.proto\"\xa5\x01\n" +
	"\x0fOffTimeApproval\x12\x1a\n" +
	"\bapproved\x18\x02 \x01(\bR\bapproved\x12;\n" +
	"\vapproved_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"approvedAt\x12\x1f\n" +
	"\vapprover_id\x18\x04 \x01(\tR\n" +
	"approverId\x12\x18\n" +
	"\acomment\x18\x05 \x01(\tR\acomment\"\xfb\x02\n" +
	"\fOffTimeCosts\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"offtime_id\x18\x02 \x01(\tR\tofftimeId\x12\x1b\n" +
	"\troster_id\x18\x03 \x01(\tR\brosterId\x12 \n" +
	"\auser_id\x18\x04 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x06userId\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"creator_id\x18\x06 \x01(\tR\tcreatorId\x128\n" +
	"\x05costs\x18\a \x01(\v2\x19.google.protobuf.DurationB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x05costs\x12\x1f\n" +
	"\vis_vacation\x18\b \x01(\bR\n" +
	"isVacation\x12.\n" +
	"\x04date\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x04date\x12\x18\n" +
	"\acomment\x18\n" +
	" \x01(\tR\acomment\"\x85\x03\n" +
	"\fOffTimeEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\frequestor_id\x18\x02 \x01(\tR\vrequestorId\x12.\n" +
	"\x04from\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12.\n" +
	"\x04type\x18\x06 \x01(\x0e2\x1a.tkd.roster.v1.OffTimeTypeR\x04type\x12:\n" +
	"\bapproval\x18\a \x01(\v2\x1e.tkd.roster.v1.OffTimeApprovalR\bapproval\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"creator_id\x18\t \x01(\tR\tcreatorId\"3\n" +
	"\x16GetOffTimeEntryRequest\x12\x19\n" +
	"\x03ids\x18\x01 \x03(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x03ids\"L\n" +
	"\x17GetOffTimeEntryResponse\x121\n" +
	"\x05entry\x18\x01 \x03(\v2\x1b.tkd.roster.v1.OffTimeEntryR\x05entry\"\x99\x02\n" +
	"\x1bCreateOffTimeRequestRequest\x12<\n" +
	"\x04from\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampB\f\xfa\xf7\x18\b\xc8\x01\x01\xb2\x01\x02@\x01R\x04from\x128\n" +
	"\x02to\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampB\f\xfa\xf7\x18\b\xc8\x01\x01\xb2\x01\x02@\x01R\x02to\x12!\n" +
	"\frequestor_id\x18\x03 \x01(\tR\vrequestorId\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12=\n" +
	"\frequest_type\x18\x05 \x01(\x0e2\x1a.tkd.roster.v1.OffTimeTypeR\vrequestType\"Q\n" +
	"\x1cCreateOffTimeRequestResponse\x121\n" +
	"\x05entry\x18\x01 \x01(\v2\x1b.tkd.roster.v1.OffTimeEntryR\x05entry\"\xd1\x02\n" +
	"\x1bUpdateOffTimeRequestRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x02id\x12.\n" +
	"\x04from\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\x12!\n" +
	"\frequestor_id\x18\x04 \x01(\tR\vrequestorId\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12=\n" +
	"\frequest_type\x18\x06 \x01(\x0e2\x1a.tkd.roster.v1.OffTimeTypeR\vrequestType\x129\n" +
	"\n" +
	"field_mask\x18\a \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\"Q\n" +
	"\x1cUpdateOffTimeRequestResponse\x121\n" +
	"\x05entry\x18\x01 \x01(\v2\x1b.tkd.roster.v1.OffTimeEntryR\x05entry\"6\n" +
	"\x1bDeleteOffTimeRequestRequest\x12\x17\n" +
	"\x02id\x18\x01 \x03(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x02id\"\x1e\n" +
	"\x1cDeleteOffTimeRequestResponse\"\x84\x02\n" +
	"\x1aFindOffTimeRequestsRequest\x12.\n" +
	"\x04from\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\x12\x19\n" +
	"\buser_ids\x18\x03 \x03(\tR\auserIds\x126\n" +
	"\bapproved\x18\x04 \x01(\v2\x1a.google.protobuf.BoolValueR\bapproved\x127\n" +
	"\tread_mask\x18\x05 \x01(\v2\x1a.google.protobuf.FieldMaskR\breadMask\"T\n" +
	"\x1bFindOffTimeRequestsResponse\x125\n" +
	"\aresults\x18\x01 \x03(\v2\x1b.tkd.roster.v1.OffTimeEntryR\aresults\"\x8c\x01\n" +
	"\x16ApproveOrRejectRequest\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x02id\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12?\n" +
	"\x04type\x18\x03 \x01(\x0e2\".tkd.roster.v1.ApprovalRequestTypeB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x04type\"L\n" +
	"\x17ApproveOrRejectResponse\x121\n" +
	"\x05entry\x18\x01 \x01(\v2\x1b.tkd.roster.v1.OffTimeEntryR\x05entry\"[\n" +
	"\x16AddOffTimeCostsRequest\x12A\n" +
	"\tadd_costs\x18\x01 \x03(\v2\x1b.tkd.roster.v1.OffTimeCostsB\a\xfa\xf7\x18\x03\xc8\x01\x01R\baddCosts\"\x19\n" +
	"\x17AddOffTimeCostsResponse\"*\n" +
	"\rCostsForUsers\x12\x19\n" +
	"\buser_ids\x18\x01 \x03(\tR\auserIds\"\x8c\x01\n" +
	"\x16GetOffTimeCostsRequest\x129\n" +
	"\tfor_users\x18\x01 \x01(\v2\x1c.tkd.roster.v1.CostsForUsersR\bforUsers\x127\n" +
	"\tread_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\breadMask\"\x81\x01\n" +
	"\x12OffTimeCostSummary\x125\n" +
	"\bvacation\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\bvacation\x124\n" +
	"\btime_off\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\atimeOff\"\x9b\x01\n" +
	"\x10UserOffTimeCosts\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x121\n" +
	"\x05costs\x18\x02 \x03(\v2\x1b.tkd.roster.v1.OffTimeCostsR\x05costs\x12;\n" +
	"\asummary\x18\x03 \x01(\v2!.tkd.roster.v1.OffTimeCostSummaryR\asummary\"T\n" +
	"\x17GetOffTimeCostsResponse\x129\n" +
	"\aresults\x18\x01 \x03(\v2\x1f.tkd.roster.v1.UserOffTimeCostsR\aresults\"-\n" +
	"\x19DeleteOffTimeCostsRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\"\x1c\n" +
	"\x1aDeleteOffTimeCostsResponse*d\n" +
	"\vOffTimeType\x12\x1d\n" +
	"\x19OFF_TIME_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16OFF_TIME_TYPE_VACATION\x10\x01\x12\x1a\n" +
	"\x16OFF_TIME_TYPE_TIME_OFF\x10\x02*\x84\x01\n" +
	"\x13ApprovalRequestType\x12%\n" +
	"!APPROVAL_REQUEST_TYPE_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eAPPROVAL_REQUEST_TYPE_APPROVED\x10\x01\x12\"\n" +
	"\x1eAPPROVAL_REQUEST_TYPE_REJECTED\x10\x022\x98\b\n" +
	"\x0eOffTimeService\x12g\n" +
	"\x0fGetOffTimeEntry\x12%.tkd.roster.v1.GetOffTimeEntryRequest\x1a&.tkd.roster.v1.GetOffTimeEntryResponse\"\x05\xb2~\x02\b\x01\x12v\n" +
	"\x14CreateOffTimeRequest\x12*.tkd.roster.v1.CreateOffTimeRequestRequest\x1a+.tkd.roster.v1.CreateOffTimeRequestResponse\"\x05\xb2~\x02\b\x01\x12v\n" +
	"\x14UpdateOffTimeRequest\x12*.tkd.roster.v1.UpdateOffTimeRequestRequest\x1a+.tkd.roster.v1.UpdateOffTimeRequestResponse\"\x05\xb2~\x02\b\x01\x12v\n" +
	"\x14DeleteOffTimeRequest\x12*.tkd.roster.v1.DeleteOffTimeRequestRequest\x1a+.tkd.roster.v1.DeleteOffTimeRequestResponse\"\x05\xb2~\x02\b\x01\x12s\n" +
	"\x13FindOffTimeRequests\x12).tkd.roster.v1.FindOffTimeRequestsRequest\x1a*.tkd.roster.v1.FindOffTimeRequestsResponse\"\x05\xb2~\x02\b\x01\x12g\n" +
	"\x0fApproveOrReject\x12%.tkd.roster.v1.ApproveOrRejectRequest\x1a&.tkd.roster.v1.ApproveOrRejectResponse\"\x05\xb2~\x02\b\x02\x12g\n" +
	"\x0fAddOffTimeCosts\x12%.tkd.roster.v1.AddOffTimeCostsRequest\x1a&.tkd.roster.v1.AddOffTimeCostsResponse\"\x05\xb2~\x02\b\x02\x12g\n" +
	"\x0fGetOffTimeCosts\x12%.tkd.roster.v1.GetOffTimeCostsRequest\x1a&.tkd.roster.v1.GetOffTimeCostsResponse\"\x05\xb2~\x02\b\x01\x12p\n" +
	"\x12DeleteOffTimeCosts\x12(.tkd.roster.v1.DeleteOffTimeCostsRequest\x1a).tkd.roster.v1.DeleteOffTimeCostsResponse\"\x05\xb2~\x02\b\x02\x1a\x13\xba~\x10\n" +
	"\x0eroster_managerB\xbc\x01\n" +
	"\x11com.tkd.roster.v1B\fOfftimeProtoP\x01ZCgithub.com/tierklinik-dobersberg/apis/gen/go/tkd/roster/v1;rosterv1\xa2\x02\x03TRX\xaa\x02\rTkd.Roster.V1\xca\x02\rTkd\\Roster\\V1\xe2\x02\x19Tkd\\Roster\\V1\\GPBMetadata\xea\x02\x0fTkd::Roster::V1b\x06proto3"

var (
	file_tkd_roster_v1_offtime_proto_rawDescOnce sync.Once
	file_tkd_roster_v1_offtime_proto_rawDescData []byte
)

func file_tkd_roster_v1_offtime_proto_rawDescGZIP() []byte {
	file_tkd_roster_v1_offtime_proto_rawDescOnce.Do(func() {
		file_tkd_roster_v1_offtime_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tkd_roster_v1_offtime_proto_rawDesc), len(file_tkd_roster_v1_offtime_proto_rawDesc)))
	})
	return file_tkd_roster_v1_offtime_proto_rawDescData
}

var file_tkd_roster_v1_offtime_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tkd_roster_v1_offtime_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_tkd_roster_v1_offtime_proto_goTypes = []any{
	(OffTimeType)(0),                     // 0: tkd.roster.v1.OffTimeType
	(ApprovalRequestType)(0),             // 1: tkd.roster.v1.ApprovalRequestType
	(*OffTimeApproval)(nil),              // 2: tkd.roster.v1.OffTimeApproval
	(*OffTimeCosts)(nil),                 // 3: tkd.roster.v1.OffTimeCosts
	(*OffTimeEntry)(nil),                 // 4: tkd.roster.v1.OffTimeEntry
	(*GetOffTimeEntryRequest)(nil),       // 5: tkd.roster.v1.GetOffTimeEntryRequest
	(*GetOffTimeEntryResponse)(nil),      // 6: tkd.roster.v1.GetOffTimeEntryResponse
	(*CreateOffTimeRequestRequest)(nil),  // 7: tkd.roster.v1.CreateOffTimeRequestRequest
	(*CreateOffTimeRequestResponse)(nil), // 8: tkd.roster.v1.CreateOffTimeRequestResponse
	(*UpdateOffTimeRequestRequest)(nil),  // 9: tkd.roster.v1.UpdateOffTimeRequestRequest
	(*UpdateOffTimeRequestResponse)(nil), // 10: tkd.roster.v1.UpdateOffTimeRequestResponse
	(*DeleteOffTimeRequestRequest)(nil),  // 11: tkd.roster.v1.DeleteOffTimeRequestRequest
	(*DeleteOffTimeRequestResponse)(nil), // 12: tkd.roster.v1.DeleteOffTimeRequestResponse
	(*FindOffTimeRequestsRequest)(nil),   // 13: tkd.roster.v1.FindOffTimeRequestsRequest
	(*FindOffTimeRequestsResponse)(nil),  // 14: tkd.roster.v1.FindOffTimeRequestsResponse
	(*ApproveOrRejectRequest)(nil),       // 15: tkd.roster.v1.ApproveOrRejectRequest
	(*ApproveOrRejectResponse)(nil),      // 16: tkd.roster.v1.ApproveOrRejectResponse
	(*AddOffTimeCostsRequest)(nil),       // 17: tkd.roster.v1.AddOffTimeCostsRequest
	(*AddOffTimeCostsResponse)(nil),      // 18: tkd.roster.v1.AddOffTimeCostsResponse
	(*CostsForUsers)(nil),                // 19: tkd.roster.v1.CostsForUsers
	(*GetOffTimeCostsRequest)(nil),       // 20: tkd.roster.v1.GetOffTimeCostsRequest
	(*OffTimeCostSummary)(nil),           // 21: tkd.roster.v1.OffTimeCostSummary
	(*UserOffTimeCosts)(nil),             // 22: tkd.roster.v1.UserOffTimeCosts
	(*GetOffTimeCostsResponse)(nil),      // 23: tkd.roster.v1.GetOffTimeCostsResponse
	(*DeleteOffTimeCostsRequest)(nil),    // 24: tkd.roster.v1.DeleteOffTimeCostsRequest
	(*DeleteOffTimeCostsResponse)(nil),   // 25: tkd.roster.v1.DeleteOffTimeCostsResponse
	(*timestamppb.Timestamp)(nil),        // 26: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),          // 27: google.protobuf.Duration
	(*fieldmaskpb.FieldMask)(nil),        // 28: google.protobuf.FieldMask
	(*wrapperspb.BoolValue)(nil),         // 29: google.protobuf.BoolValue
}
var file_tkd_roster_v1_offtime_proto_depIdxs = []int32{
	26, // 0: tkd.roster.v1.OffTimeApproval.approved_at:type_name -> google.protobuf.Timestamp
	26, // 1: tkd.roster.v1.OffTimeCosts.created_at:type_name -> google.protobuf.Timestamp
	27, // 2: tkd.roster.v1.OffTimeCosts.costs:type_name -> google.protobuf.Duration
	26, // 3: tkd.roster.v1.OffTimeCosts.date:type_name -> google.protobuf.Timestamp
	26, // 4: tkd.roster.v1.OffTimeEntry.from:type_name -> google.protobuf.Timestamp
	26, // 5: tkd.roster.v1.OffTimeEntry.to:type_name -> google.protobuf.Timestamp
	0,  // 6: tkd.roster.v1.OffTimeEntry.type:type_name -> tkd.roster.v1.OffTimeType
	2,  // 7: tkd.roster.v1.OffTimeEntry.approval:type_name -> tkd.roster.v1.OffTimeApproval
	26, // 8: tkd.roster.v1.OffTimeEntry.created_at:type_name -> google.protobuf.Timestamp
	4,  // 9: tkd.roster.v1.GetOffTimeEntryResponse.entry:type_name -> tkd.roster.v1.OffTimeEntry
	26, // 10: tkd.roster.v1.CreateOffTimeRequestRequest.from:type_name -> google.protobuf.Timestamp
	26, // 11: tkd.roster.v1.CreateOffTimeRequestRequest.to:type_name -> google.protobuf.Timestamp
	0,  // 12: tkd.roster.v1.CreateOffTimeRequestRequest.request_type:type_name -> tkd.roster.v1.OffTimeType
	4,  // 13: tkd.roster.v1.CreateOffTimeRequestResponse.entry:type_name -> tkd.roster.v1.OffTimeEntry
	26, // 14: tkd.roster.v1.UpdateOffTimeRequestRequest.from:type_name -> google.protobuf.Timestamp
	26, // 15: tkd.roster.v1.UpdateOffTimeRequestRequest.to:type_name -> google.protobuf.Timestamp
	0,  // 16: tkd.roster.v1.UpdateOffTimeRequestRequest.request_type:type_name -> tkd.roster.v1.OffTimeType
	28, // 17: tkd.roster.v1.UpdateOffTimeRequestRequest.field_mask:type_name -> google.protobuf.FieldMask
	4,  // 18: tkd.roster.v1.UpdateOffTimeRequestResponse.entry:type_name -> tkd.roster.v1.OffTimeEntry
	26, // 19: tkd.roster.v1.FindOffTimeRequestsRequest.from:type_name -> google.protobuf.Timestamp
	26, // 20: tkd.roster.v1.FindOffTimeRequestsRequest.to:type_name -> google.protobuf.Timestamp
	29, // 21: tkd.roster.v1.FindOffTimeRequestsRequest.approved:type_name -> google.protobuf.BoolValue
	28, // 22: tkd.roster.v1.FindOffTimeRequestsRequest.read_mask:type_name -> google.protobuf.FieldMask
	4,  // 23: tkd.roster.v1.FindOffTimeRequestsResponse.results:type_name -> tkd.roster.v1.OffTimeEntry
	1,  // 24: tkd.roster.v1.ApproveOrRejectRequest.type:type_name -> tkd.roster.v1.ApprovalRequestType
	4,  // 25: tkd.roster.v1.ApproveOrRejectResponse.entry:type_name -> tkd.roster.v1.OffTimeEntry
	3,  // 26: tkd.roster.v1.AddOffTimeCostsRequest.add_costs:type_name -> tkd.roster.v1.OffTimeCosts
	19, // 27: tkd.roster.v1.GetOffTimeCostsRequest.for_users:type_name -> tkd.roster.v1.CostsForUsers
	28, // 28: tkd.roster.v1.GetOffTimeCostsRequest.read_mask:type_name -> google.protobuf.FieldMask
	27, // 29: tkd.roster.v1.OffTimeCostSummary.vacation:type_name -> google.protobuf.Duration
	27, // 30: tkd.roster.v1.OffTimeCostSummary.time_off:type_name -> google.protobuf.Duration
	3,  // 31: tkd.roster.v1.UserOffTimeCosts.costs:type_name -> tkd.roster.v1.OffTimeCosts
	21, // 32: tkd.roster.v1.UserOffTimeCosts.summary:type_name -> tkd.roster.v1.OffTimeCostSummary
	22, // 33: tkd.roster.v1.GetOffTimeCostsResponse.results:type_name -> tkd.roster.v1.UserOffTimeCosts
	5,  // 34: tkd.roster.v1.OffTimeService.GetOffTimeEntry:input_type -> tkd.roster.v1.GetOffTimeEntryRequest
	7,  // 35: tkd.roster.v1.OffTimeService.CreateOffTimeRequest:input_type -> tkd.roster.v1.CreateOffTimeRequestRequest
	9,  // 36: tkd.roster.v1.OffTimeService.UpdateOffTimeRequest:input_type -> tkd.roster.v1.UpdateOffTimeRequestRequest
	11, // 37: tkd.roster.v1.OffTimeService.DeleteOffTimeRequest:input_type -> tkd.roster.v1.DeleteOffTimeRequestRequest
	13, // 38: tkd.roster.v1.OffTimeService.FindOffTimeRequests:input_type -> tkd.roster.v1.FindOffTimeRequestsRequest
	15, // 39: tkd.roster.v1.OffTimeService.ApproveOrReject:input_type -> tkd.roster.v1.ApproveOrRejectRequest
	17, // 40: tkd.roster.v1.OffTimeService.AddOffTimeCosts:input_type -> tkd.roster.v1.AddOffTimeCostsRequest
	20, // 41: tkd.roster.v1.OffTimeService.GetOffTimeCosts:input_type -> tkd.roster.v1.GetOffTimeCostsRequest
	24, // 42: tkd.roster.v1.OffTimeService.DeleteOffTimeCosts:input_type -> tkd.roster.v1.DeleteOffTimeCostsRequest
	6,  // 43: tkd.roster.v1.OffTimeService.GetOffTimeEntry:output_type -> tkd.roster.v1.GetOffTimeEntryResponse
	8,  // 44: tkd.roster.v1.OffTimeService.CreateOffTimeRequest:output_type -> tkd.roster.v1.CreateOffTimeRequestResponse
	10, // 45: tkd.roster.v1.OffTimeService.UpdateOffTimeRequest:output_type -> tkd.roster.v1.UpdateOffTimeRequestResponse
	12, // 46: tkd.roster.v1.OffTimeService.DeleteOffTimeRequest:output_type -> tkd.roster.v1.DeleteOffTimeRequestResponse
	14, // 47: tkd.roster.v1.OffTimeService.FindOffTimeRequests:output_type -> tkd.roster.v1.FindOffTimeRequestsResponse
	16, // 48: tkd.roster.v1.OffTimeService.ApproveOrReject:output_type -> tkd.roster.v1.ApproveOrRejectResponse
	18, // 49: tkd.roster.v1.OffTimeService.AddOffTimeCosts:output_type -> tkd.roster.v1.AddOffTimeCostsResponse
	23, // 50: tkd.roster.v1.OffTimeService.GetOffTimeCosts:output_type -> tkd.roster.v1.GetOffTimeCostsResponse
	25, // 51: tkd.roster.v1.OffTimeService.DeleteOffTimeCosts:output_type -> tkd.roster.v1.DeleteOffTimeCostsResponse
	43, // [43:52] is the sub-list for method output_type
	34, // [34:43] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_tkd_roster_v1_offtime_proto_init() }
func file_tkd_roster_v1_offtime_proto_init() {
	if File_tkd_roster_v1_offtime_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tkd_roster_v1_offtime_proto_rawDesc), len(file_tkd_roster_v1_offtime_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tkd_roster_v1_offtime_proto_goTypes,
		DependencyIndexes: file_tkd_roster_v1_offtime_proto_depIdxs,
		EnumInfos:         file_tkd_roster_v1_offtime_proto_enumTypes,
		MessageInfos:      file_tkd_roster_v1_offtime_proto_msgTypes,
	}.Build()
	File_tkd_roster_v1_offtime_proto = out.File
	file_tkd_roster_v1_offtime_proto_goTypes = nil
	file_tkd_roster_v1_offtime_proto_depIdxs = nil
}
