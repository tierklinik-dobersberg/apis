// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: tkd/notification/v1/notification.proto

package notificationv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/tierklinik-dobersberg/apis/gen/go/tkd/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendSMSRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// To holds the receipients phone number.
	To string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// Message holds the message to send.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// From may be set to use a custom sender name. Not all SMS
	// providers support using a custom sender name so this field
	// may be ignored.
	From          string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSMSRequest) Reset() {
	*x = SendSMSRequest{}
	mi := &file_tkd_notification_v1_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSMSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSMSRequest) ProtoMessage() {}

func (x *SendSMSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_notification_v1_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSMSRequest.ProtoReflect.Descriptor instead.
func (*SendSMSRequest) Descriptor() ([]byte, []int) {
	return file_tkd_notification_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *SendSMSRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendSMSRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendSMSRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

type SendSMSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSMSResponse) Reset() {
	*x = SendSMSResponse{}
	mi := &file_tkd_notification_v1_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSMSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSMSResponse) ProtoMessage() {}

func (x *SendSMSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_notification_v1_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSMSResponse.ProtoReflect.Descriptor instead.
func (*SendSMSResponse) Descriptor() ([]byte, []int) {
	return file_tkd_notification_v1_notification_proto_rawDescGZIP(), []int{1}
}

type SendEMailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEMailResponse) Reset() {
	*x = SendEMailResponse{}
	mi := &file_tkd_notification_v1_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEMailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEMailResponse) ProtoMessage() {}

func (x *SendEMailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_notification_v1_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEMailResponse.ProtoReflect.Descriptor instead.
func (*SendEMailResponse) Descriptor() ([]byte, []int) {
	return file_tkd_notification_v1_notification_proto_rawDescGZIP(), []int{2}
}

type SendEMailRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// To holds the receipients email address.
	To string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	// Subject holds the email subject.
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// HtmlMessage holds the content of the email as text/html
	HtmlMessage string `protobuf:"bytes,3,opt,name=html_message,json=htmlMessage,proto3" json:"html_message,omitempty"`
	// TextMessage holds the content of the email as text/plain
	TextMessage string `protobuf:"bytes,4,opt,name=text_message,json=textMessage,proto3" json:"text_message,omitempty"`
	// Cc holds additional email addresses that are included as carbon-copy
	Cc []string `protobuf:"bytes,5,rep,name=cc,proto3" json:"cc,omitempty"`
	// Bcc holds additional email addresses that are used for blind-carbon-copy.
	Bcc []string `protobuf:"bytes,6,rep,name=bcc,proto3" json:"bcc,omitempty"`
	// AdditionalHeaders might be used to add additional headers to the outgoing email.
	AdditionalHeaders map[string]string `protobuf:"bytes,7,rep,name=additional_headers,json=additionalHeaders,proto3" json:"additional_headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Attachments might be used to attach one ore more files to the outgoing email.
	Attachments   []*EMailAttachment `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEMailRequest) Reset() {
	*x = SendEMailRequest{}
	mi := &file_tkd_notification_v1_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEMailRequest) ProtoMessage() {}

func (x *SendEMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_notification_v1_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEMailRequest.ProtoReflect.Descriptor instead.
func (*SendEMailRequest) Descriptor() ([]byte, []int) {
	return file_tkd_notification_v1_notification_proto_rawDescGZIP(), []int{3}
}

func (x *SendEMailRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendEMailRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SendEMailRequest) GetHtmlMessage() string {
	if x != nil {
		return x.HtmlMessage
	}
	return ""
}

func (x *SendEMailRequest) GetTextMessage() string {
	if x != nil {
		return x.TextMessage
	}
	return ""
}

func (x *SendEMailRequest) GetCc() []string {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *SendEMailRequest) GetBcc() []string {
	if x != nil {
		return x.Bcc
	}
	return nil
}

func (x *SendEMailRequest) GetAdditionalHeaders() map[string]string {
	if x != nil {
		return x.AdditionalHeaders
	}
	return nil
}

func (x *SendEMailRequest) GetAttachments() []*EMailAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type EMailAttachment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the name of the attachment.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// ContentType holds the content-type of the email attachment.
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Content specifies the content of the attachment.
	//
	// Types that are valid to be assigned to Content:
	//
	//	*EMailAttachment_Url
	//	*EMailAttachment_Data
	Content       isEMailAttachment_Content `protobuf_oneof:"content"`
	Embed         bool                      `protobuf:"varint,5,opt,name=embed,proto3" json:"embed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EMailAttachment) Reset() {
	*x = EMailAttachment{}
	mi := &file_tkd_notification_v1_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EMailAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EMailAttachment) ProtoMessage() {}

func (x *EMailAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_notification_v1_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EMailAttachment.ProtoReflect.Descriptor instead.
func (*EMailAttachment) Descriptor() ([]byte, []int) {
	return file_tkd_notification_v1_notification_proto_rawDescGZIP(), []int{4}
}

func (x *EMailAttachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EMailAttachment) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *EMailAttachment) GetContent() isEMailAttachment_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *EMailAttachment) GetUrl() string {
	if x != nil {
		if x, ok := x.Content.(*EMailAttachment_Url); ok {
			return x.Url
		}
	}
	return ""
}

func (x *EMailAttachment) GetData() []byte {
	if x != nil {
		if x, ok := x.Content.(*EMailAttachment_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *EMailAttachment) GetEmbed() bool {
	if x != nil {
		return x.Embed
	}
	return false
}

type isEMailAttachment_Content interface {
	isEMailAttachment_Content()
}

type EMailAttachment_Url struct {
	// Url can be used to instruct the notification service to download the
	// attachment content from the specified URL.
	Url string `protobuf:"bytes,3,opt,name=url,proto3,oneof"`
}

type EMailAttachment_Data struct {
	// Data is used to provide the attachment data inline.
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*EMailAttachment_Url) isEMailAttachment_Content() {}

func (*EMailAttachment_Data) isEMailAttachment_Content() {}

var File_tkd_notification_v1_notification_proto protoreflect.FileDescriptor

const file_tkd_notification_v1_notification_proto_rawDesc = "" +
	"\n" +
	"&tkd/notification/v1/notification.proto\x12\x13tkd.notification.v1\x1a\x1etkd/common/v1/descriptor.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bbuf/validate/validate.proto\"`\n" +
	"\x0eSendSMSRequest\x12\x17\n" +
	"\x02to\x18\x01 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x02to\x12!\n" +
	"\amessage\x18\x02 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\amessage\x12\x12\n" +
	"\x04from\x18\x03 \x01(\tR\x04from\"\x11\n" +
	"\x0fSendSMSResponse\"\x13\n" +
	"\x11SendEMailResponse\"\xb1\x03\n" +
	"\x10SendEMailRequest\x12\x17\n" +
	"\x02to\x18\x01 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x02to\x12!\n" +
	"\asubject\x18\x02 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\asubject\x12!\n" +
	"\fhtml_message\x18\x03 \x01(\tR\vhtmlMessage\x12!\n" +
	"\ftext_message\x18\x04 \x01(\tR\vtextMessage\x12\x0e\n" +
	"\x02cc\x18\x05 \x03(\tR\x02cc\x12\x10\n" +
	"\x03bcc\x18\x06 \x03(\tR\x03bcc\x12k\n" +
	"\x12additional_headers\x18\a \x03(\v2<.tkd.notification.v1.SendEMailRequest.AdditionalHeadersEntryR\x11additionalHeaders\x12F\n" +
	"\vattachments\x18\b \x03(\v2$.tkd.notification.v1.EMailAttachmentR\vattachments\x1aD\n" +
	"\x16AdditionalHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa5\x01\n" +
	"\x0fEMailAttachment\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x04name\x12*\n" +
	"\fcontent_type\x18\x02 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\vcontentType\x12\x12\n" +
	"\x03url\x18\x03 \x01(\tH\x00R\x03url\x12\x14\n" +
	"\x04data\x18\x04 \x01(\fH\x00R\x04data\x12\x14\n" +
	"\x05embed\x18\x05 \x01(\bR\x05embedB\t\n" +
	"\acontent2\xd5\x01\n" +
	"\x13NotificationService\x12[\n" +
	"\aSendSMS\x12#.tkd.notification.v1.SendSMSRequest\x1a$.tkd.notification.v1.SendSMSResponse\"\x05\xb2~\x02\b\x01\x12a\n" +
	"\tSendEMail\x12%.tkd.notification.v1.SendEMailRequest\x1a&.tkd.notification.v1.SendEMailResponse\"\x05\xb2~\x02\b\x01B\xeb\x01\n" +
	"\x17com.tkd.notification.v1B\x11NotificationProtoP\x01ZOgithub.com/tierklinik-dobersberg/apis/gen/go/tkd/notification/v1;notificationv1\xa2\x02\x03TNX\xaa\x02\x13Tkd.Notification.V1\xca\x02\x13Tkd\\Notification\\V1\xe2\x02\x1fTkd\\Notification\\V1\\GPBMetadata\xea\x02\x15Tkd::Notification::V1b\x06proto3"

var (
	file_tkd_notification_v1_notification_proto_rawDescOnce sync.Once
	file_tkd_notification_v1_notification_proto_rawDescData []byte
)

func file_tkd_notification_v1_notification_proto_rawDescGZIP() []byte {
	file_tkd_notification_v1_notification_proto_rawDescOnce.Do(func() {
		file_tkd_notification_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tkd_notification_v1_notification_proto_rawDesc), len(file_tkd_notification_v1_notification_proto_rawDesc)))
	})
	return file_tkd_notification_v1_notification_proto_rawDescData
}

var file_tkd_notification_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_tkd_notification_v1_notification_proto_goTypes = []any{
	(*SendSMSRequest)(nil),    // 0: tkd.notification.v1.SendSMSRequest
	(*SendSMSResponse)(nil),   // 1: tkd.notification.v1.SendSMSResponse
	(*SendEMailResponse)(nil), // 2: tkd.notification.v1.SendEMailResponse
	(*SendEMailRequest)(nil),  // 3: tkd.notification.v1.SendEMailRequest
	(*EMailAttachment)(nil),   // 4: tkd.notification.v1.EMailAttachment
	nil,                       // 5: tkd.notification.v1.SendEMailRequest.AdditionalHeadersEntry
}
var file_tkd_notification_v1_notification_proto_depIdxs = []int32{
	5, // 0: tkd.notification.v1.SendEMailRequest.additional_headers:type_name -> tkd.notification.v1.SendEMailRequest.AdditionalHeadersEntry
	4, // 1: tkd.notification.v1.SendEMailRequest.attachments:type_name -> tkd.notification.v1.EMailAttachment
	0, // 2: tkd.notification.v1.NotificationService.SendSMS:input_type -> tkd.notification.v1.SendSMSRequest
	3, // 3: tkd.notification.v1.NotificationService.SendEMail:input_type -> tkd.notification.v1.SendEMailRequest
	1, // 4: tkd.notification.v1.NotificationService.SendSMS:output_type -> tkd.notification.v1.SendSMSResponse
	2, // 5: tkd.notification.v1.NotificationService.SendEMail:output_type -> tkd.notification.v1.SendEMailResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tkd_notification_v1_notification_proto_init() }
func file_tkd_notification_v1_notification_proto_init() {
	if File_tkd_notification_v1_notification_proto != nil {
		return
	}
	file_tkd_notification_v1_notification_proto_msgTypes[4].OneofWrappers = []any{
		(*EMailAttachment_Url)(nil),
		(*EMailAttachment_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tkd_notification_v1_notification_proto_rawDesc), len(file_tkd_notification_v1_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tkd_notification_v1_notification_proto_goTypes,
		DependencyIndexes: file_tkd_notification_v1_notification_proto_depIdxs,
		MessageInfos:      file_tkd_notification_v1_notification_proto_msgTypes,
	}.Build()
	File_tkd_notification_v1_notification_proto = out.File
	file_tkd_notification_v1_notification_proto_goTypes = nil
	file_tkd_notification_v1_notification_proto_depIdxs = nil
}
