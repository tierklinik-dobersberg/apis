// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: tkd/orthanc_bridge/v1/orthanc-bridge.proto

package orthanc_bridgev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v11 "github.com/tierklinik-dobersberg/apis/gen/go/tkd/common/v1"
	v1 "github.com/tierklinik-dobersberg/apis/gen/go/tkd/dicom/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DownloadType int32

const (
	DownloadType_DOWNLOAD_TYPE_UNSPECIFIED DownloadType = 0
	// DICOM specifies that the study/instance should be exported
	// as DICOM (.dcm) file
	DownloadType_DICOM DownloadType = 1
	// PNG specifies that the study/instance should be exported
	// as a PNG (.png) image
	DownloadType_PNG DownloadType = 2
	// JPEG specifies that the study/instance should be exported
	// as a JPEG (.jpg) image
	DownloadType_JPEG DownloadType = 3
	// AVI specifies that multi-frame instances should be exported
	// as a MJPEG video (.avi)
	DownloadType_AVI DownloadType = 4
)

// Enum value maps for DownloadType.
var (
	DownloadType_name = map[int32]string{
		0: "DOWNLOAD_TYPE_UNSPECIFIED",
		1: "DICOM",
		2: "PNG",
		3: "JPEG",
		4: "AVI",
	}
	DownloadType_value = map[string]int32{
		"DOWNLOAD_TYPE_UNSPECIFIED": 0,
		"DICOM":                     1,
		"PNG":                       2,
		"JPEG":                      3,
		"AVI":                       4,
	}
)

func (x DownloadType) Enum() *DownloadType {
	p := new(DownloadType)
	*p = x
	return p
}

func (x DownloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DownloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_enumTypes[0].Descriptor()
}

func (DownloadType) Type() protoreflect.EnumType {
	return &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_enumTypes[0]
}

func (x DownloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DownloadType.Descriptor instead.
func (DownloadType) EnumDescriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{0}
}

type DICOMTag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tag is the DICOM tag value in it's hex format
	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	// ValueRepresentation is the VR of the DICOM tag.
	ValueRepresentation string `protobuf:"bytes,2,opt,name=value_representation,json=valueRepresentation,proto3" json:"value_representation,omitempty"`
	// Value holds the DICOM tag value(s) encoded as google.protobuf.Value
	Value []*structpb.Value `protobuf:"bytes,3,rep,name=value,proto3" json:"value,omitempty"`
	// Name holds the pretty-name of the DICOM tag.
	// For private tags, this field is unset.
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DICOMTag) Reset() {
	*x = DICOMTag{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DICOMTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DICOMTag) ProtoMessage() {}

func (x *DICOMTag) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DICOMTag.ProtoReflect.Descriptor instead.
func (*DICOMTag) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{0}
}

func (x *DICOMTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *DICOMTag) GetValueRepresentation() string {
	if x != nil {
		return x.ValueRepresentation
	}
	return ""
}

func (x *DICOMTag) GetValue() []*structpb.Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DICOMTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WorklistEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tags          []*DICOMTag            `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Elements      []*v1.Element          `protobuf:"bytes,3,rep,name=elements,proto3" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorklistEntry) Reset() {
	*x = WorklistEntry{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorklistEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorklistEntry) ProtoMessage() {}

func (x *WorklistEntry) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorklistEntry.ProtoReflect.Descriptor instead.
func (*WorklistEntry) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{1}
}

func (x *WorklistEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorklistEntry) GetTags() []*DICOMTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *WorklistEntry) GetElements() []*v1.Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

type FilterTag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tag is either the well-known name or the numeric DICOM tag.
	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	// Value holds the tag value represented as a string.
	Value         []string `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterTag) Reset() {
	*x = FilterTag{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterTag) ProtoMessage() {}

func (x *FilterTag) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterTag.ProtoReflect.Descriptor instead.
func (*FilterTag) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{2}
}

func (x *FilterTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *FilterTag) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type ListStudiesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DateRange might be set to only return studies created
	// withing the specified date-range.
	DateRange *v11.DateRange `protobuf:"bytes,1,opt,name=date_range,json=dateRange,proto3" json:"date_range,omitempty"`
	// OwnerName might be set to only return studies where the
	// ResponsiblePersonName matches owner_name.
	OwnerName string `protobuf:"bytes,2,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	// PatientName might be set to only return studies for the
	// given patient name
	PatientName string `protobuf:"bytes,3,opt,name=patient_name,json=patientName,proto3" json:"patient_name,omitempty"`
	PatientId   string `protobuf:"bytes,7,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	// Modality might be set to only return studies for the given
	// DICOM modality.
	Modality string `protobuf:"bytes,4,opt,name=modality,proto3" json:"modality,omitempty"`
	// FilterTags might contain additional DICOM tag filters
	// represented by their stringified value.
	FilterTags []*FilterTag `protobuf:"bytes,5,rep,name=filter_tags,json=filterTags,proto3" json:"filter_tags,omitempty"`
	// IncludeTags might hold well-known names or their numeric DICOM tag
	// values that should be included in the response.
	IncludeTags []string `protobuf:"bytes,6,rep,name=include_tags,json=includeTags,proto3" json:"include_tags,omitempty"`
	// EnableFuzzyMatching might be set to true to enable fuzzy matching
	// using the wildcard character '*'
	EnableFuzzyMatching bool `protobuf:"varint,10,opt,name=enable_fuzzy_matching,json=enableFuzzyMatching,proto3" json:"enable_fuzzy_matching,omitempty"`
	// Pagintion can be set to enable paginated responses.
	Pagination    *v11.Pagination `protobuf:"bytes,11,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStudiesRequest) Reset() {
	*x = ListStudiesRequest{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudiesRequest) ProtoMessage() {}

func (x *ListStudiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudiesRequest.ProtoReflect.Descriptor instead.
func (*ListStudiesRequest) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{3}
}

func (x *ListStudiesRequest) GetDateRange() *v11.DateRange {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *ListStudiesRequest) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *ListStudiesRequest) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *ListStudiesRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *ListStudiesRequest) GetModality() string {
	if x != nil {
		return x.Modality
	}
	return ""
}

func (x *ListStudiesRequest) GetFilterTags() []*FilterTag {
	if x != nil {
		return x.FilterTags
	}
	return nil
}

func (x *ListStudiesRequest) GetIncludeTags() []string {
	if x != nil {
		return x.IncludeTags
	}
	return nil
}

func (x *ListStudiesRequest) GetEnableFuzzyMatching() bool {
	if x != nil {
		return x.EnableFuzzyMatching
	}
	return false
}

func (x *ListStudiesRequest) GetPagination() *v11.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Thumbnail struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mime holds the mime type of Thumbnail.data
	Mime string `protobuf:"bytes,1,opt,name=mime,proto3" json:"mime,omitempty"`
	// Data holds the binary thumbnail image.
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Thumbnail) Reset() {
	*x = Thumbnail{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Thumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thumbnail) ProtoMessage() {}

func (x *Thumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thumbnail.ProtoReflect.Descriptor instead.
func (*Thumbnail) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{4}
}

func (x *Thumbnail) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *Thumbnail) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Instance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// InstanceUID holds the DICOM instance UID
	InstanceUid string `protobuf:"bytes,1,opt,name=instance_uid,json=instanceUid,proto3" json:"instance_uid,omitempty"`
	// Time holds the time the instance has been created.
	Time *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Tags []*DICOMTag            `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// Thumbail may hold a image thumbnail of the DICOM instance.
	Thumbnail     *Thumbnail `protobuf:"bytes,5,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Instance) Reset() {
	*x = Instance{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{5}
}

func (x *Instance) GetInstanceUid() string {
	if x != nil {
		return x.InstanceUid
	}
	return ""
}

func (x *Instance) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Instance) GetTags() []*DICOMTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Instance) GetThumbnail() *Thumbnail {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

type Series struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// SeriesUid is the DICOM UID for the series
	SeriesUid string `protobuf:"bytes,1,opt,name=series_uid,json=seriesUid,proto3" json:"series_uid,omitempty"`
	// Instances holds all DICOM instances of this series.
	Instances []*Instance `protobuf:"bytes,2,rep,name=instances,proto3" json:"instances,omitempty"`
	// Time holds the timestamp at which the series has been created.
	Time          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Tags          []*DICOMTag            `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Series) Reset() {
	*x = Series{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Series) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Series) ProtoMessage() {}

func (x *Series) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Series.ProtoReflect.Descriptor instead.
func (*Series) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{6}
}

func (x *Series) GetSeriesUid() string {
	if x != nil {
		return x.SeriesUid
	}
	return ""
}

func (x *Series) GetInstances() []*Instance {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *Series) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Series) GetTags() []*DICOMTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Study struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// StudyUid is the DICOM UID of the study
	StudyUid string `protobuf:"bytes,1,opt,name=study_uid,json=studyUid,proto3" json:"study_uid,omitempty"`
	// Series holds all series within the study.
	Series []*Series `protobuf:"bytes,2,rep,name=series,proto3" json:"series,omitempty"`
	// Time holds the time at which the study has been created.
	Time *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	// PatientName is the name of the patient.
	PatientName string `protobuf:"bytes,4,opt,name=patient_name,json=patientName,proto3" json:"patient_name,omitempty"`
	// OwnerName is the name of the patient owner.
	OwnerName string `protobuf:"bytes,5,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	PatientId string `protobuf:"bytes,8,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	// Modalities holds all modalities available within the study.
	Modalities    []string    `protobuf:"bytes,6,rep,name=modalities,proto3" json:"modalities,omitempty"`
	Tags          []*DICOMTag `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Study) Reset() {
	*x = Study{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Study) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Study) ProtoMessage() {}

func (x *Study) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Study.ProtoReflect.Descriptor instead.
func (*Study) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{7}
}

func (x *Study) GetStudyUid() string {
	if x != nil {
		return x.StudyUid
	}
	return ""
}

func (x *Study) GetSeries() []*Series {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *Study) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Study) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *Study) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *Study) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *Study) GetModalities() []string {
	if x != nil {
		return x.Modalities
	}
	return nil
}

func (x *Study) GetTags() []*DICOMTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ListStudiesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Studies holds all studies that satisfied the ListStudiesRequest
	Studies []*Study `protobuf:"bytes,5,rep,name=studies,proto3" json:"studies,omitempty"`
	// TotalCount holds the total count of matched studies. Only
	// the subset requested by ListStudiesRequest.pagination is
	// returned in the studies field.
	TotalCount    int64 `protobuf:"varint,10,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStudiesResponse) Reset() {
	*x = ListStudiesResponse{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStudiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStudiesResponse) ProtoMessage() {}

func (x *ListStudiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStudiesResponse.ProtoReflect.Descriptor instead.
func (*ListStudiesResponse) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{8}
}

func (x *ListStudiesResponse) GetStudies() []*Study {
	if x != nil {
		return x.Studies
	}
	return nil
}

func (x *ListStudiesResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type DownloadStudyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// StudyUid holds the UID of the study that should be downloaded
	StudyUid string `protobuf:"bytes,1,opt,name=study_uid,json=studyUid,proto3" json:"study_uid,omitempty"`
	// InstanceUids might be set to limit wich DICOM instances should
	// be part of the download.
	// If unset, all instances of the given study will be downloaded.
	InstanceUids []string `protobuf:"bytes,2,rep,name=instance_uids,json=instanceUids,proto3" json:"instance_uids,omitempty"`
	// Specifies which types to download.
	Types []DownloadType `protobuf:"varint,3,rep,packed,name=types,proto3,enum=tkd.orthanc_bridge.v1.DownloadType" json:"types,omitempty"`
	// TimeToLive specifies how long the generated export should
	// be kept on the file-system.
	// Note that server implementation might decided to add a lower
	// or upper limit to the TTL.
	// Check the expire_time field in DownloadStudyResponse.
	TimeToLive    *durationpb.Duration `protobuf:"bytes,4,opt,name=time_to_live,json=timeToLive,proto3" json:"time_to_live,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadStudyRequest) Reset() {
	*x = DownloadStudyRequest{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadStudyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadStudyRequest) ProtoMessage() {}

func (x *DownloadStudyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadStudyRequest.ProtoReflect.Descriptor instead.
func (*DownloadStudyRequest) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{9}
}

func (x *DownloadStudyRequest) GetStudyUid() string {
	if x != nil {
		return x.StudyUid
	}
	return ""
}

func (x *DownloadStudyRequest) GetInstanceUids() []string {
	if x != nil {
		return x.InstanceUids
	}
	return nil
}

func (x *DownloadStudyRequest) GetTypes() []DownloadType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *DownloadStudyRequest) GetTimeToLive() *durationpb.Duration {
	if x != nil {
		return x.TimeToLive
	}
	return nil
}

type DownloadStudyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DownloadLink holds the download link for the study.
	DownloadLink string `protobuf:"bytes,1,opt,name=download_link,json=downloadLink,proto3" json:"download_link,omitempty"`
	// ExpireTime holds the time at which the download link expires
	// and the generated export will be deleted from the server.
	ExpireTime    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadStudyResponse) Reset() {
	*x = DownloadStudyResponse{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadStudyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadStudyResponse) ProtoMessage() {}

func (x *DownloadStudyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadStudyResponse.ProtoReflect.Descriptor instead.
func (*DownloadStudyResponse) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{10}
}

func (x *DownloadStudyResponse) GetDownloadLink() string {
	if x != nil {
		return x.DownloadLink
	}
	return ""
}

func (x *DownloadStudyResponse) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

type ShareStudyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StudyUid      string                 `protobuf:"bytes,1,opt,name=study_uid,json=studyUid,proto3" json:"study_uid,omitempty"`
	InstanceUids  []string               `protobuf:"bytes,2,rep,name=instance_uids,json=instanceUids,proto3" json:"instance_uids,omitempty"`
	ValidDuration *durationpb.Duration   `protobuf:"bytes,3,opt,name=valid_duration,json=validDuration,proto3" json:"valid_duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareStudyRequest) Reset() {
	*x = ShareStudyRequest{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareStudyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareStudyRequest) ProtoMessage() {}

func (x *ShareStudyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareStudyRequest.ProtoReflect.Descriptor instead.
func (*ShareStudyRequest) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{11}
}

func (x *ShareStudyRequest) GetStudyUid() string {
	if x != nil {
		return x.StudyUid
	}
	return ""
}

func (x *ShareStudyRequest) GetInstanceUids() []string {
	if x != nil {
		return x.InstanceUids
	}
	return nil
}

func (x *ShareStudyRequest) GetValidDuration() *durationpb.Duration {
	if x != nil {
		return x.ValidDuration
	}
	return nil
}

type ShareStudyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Token is the generated share token.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// ViewerUrl is the access url to the shared study
	// on the built-in viewer
	ViewerUrl     string `protobuf:"bytes,2,opt,name=viewer_url,json=viewerUrl,proto3" json:"viewer_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareStudyResponse) Reset() {
	*x = ShareStudyResponse{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareStudyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareStudyResponse) ProtoMessage() {}

func (x *ShareStudyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareStudyResponse.ProtoReflect.Descriptor instead.
func (*ShareStudyResponse) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{12}
}

func (x *ShareStudyResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ShareStudyResponse) GetViewerUrl() string {
	if x != nil {
		return x.ViewerUrl
	}
	return ""
}

type GetWorklistEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorklistEntriesRequest) Reset() {
	*x = GetWorklistEntriesRequest{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorklistEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorklistEntriesRequest) ProtoMessage() {}

func (x *GetWorklistEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorklistEntriesRequest.ProtoReflect.Descriptor instead.
func (*GetWorklistEntriesRequest) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{13}
}

type GetWorklistEntriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*WorklistEntry       `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorklistEntriesResponse) Reset() {
	*x = GetWorklistEntriesResponse{}
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorklistEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorklistEntriesResponse) ProtoMessage() {}

func (x *GetWorklistEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorklistEntriesResponse.ProtoReflect.Descriptor instead.
func (*GetWorklistEntriesResponse) Descriptor() ([]byte, []int) {
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP(), []int{14}
}

func (x *GetWorklistEntriesResponse) GetEntries() []*WorklistEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

var File_tkd_orthanc_bridge_v1_orthanc_bridge_proto protoreflect.FileDescriptor

const file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDesc = "" +
	"\n" +
	"*tkd/orthanc_bridge/v1/orthanc-bridge.proto\x12\x15tkd.orthanc_bridge.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1etkd/common/v1/pagination.proto\x1a\x18tkd/common/v1/date.proto\x1a\x1etkd/common/v1/descriptor.proto\x1a\x18tkd/dicom/v1/dicom.proto\"\x91\x01\n" +
	"\bDICOMTag\x12\x10\n" +
	"\x03tag\x18\x01 \x01(\tR\x03tag\x121\n" +
	"\x14value_representation\x18\x02 \x01(\tR\x13valueRepresentation\x12,\n" +
	"\x05value\x18\x03 \x03(\v2\x16.google.protobuf.ValueR\x05value\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\x8b\x01\n" +
	"\rWorklistEntry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x123\n" +
	"\x04tags\x18\x02 \x03(\v2\x1f.tkd.orthanc_bridge.v1.DICOMTagR\x04tags\x121\n" +
	"\belements\x18\x03 \x03(\v2\x15.tkd.dicom.v1.ElementR\belements\"3\n" +
	"\tFilterTag\x12\x10\n" +
	"\x03tag\x18\x01 \x01(\tR\x03tag\x12\x14\n" +
	"\x05value\x18\x02 \x03(\tR\x05value\"\x9f\x03\n" +
	"\x12ListStudiesRequest\x127\n" +
	"\n" +
	"date_range\x18\x01 \x01(\v2\x18.tkd.common.v1.DateRangeR\tdateRange\x12\x1d\n" +
	"\n" +
	"owner_name\x18\x02 \x01(\tR\townerName\x12!\n" +
	"\fpatient_name\x18\x03 \x01(\tR\vpatientName\x12\x1d\n" +
	"\n" +
	"patient_id\x18\a \x01(\tR\tpatientId\x12\x1a\n" +
	"\bmodality\x18\x04 \x01(\tR\bmodality\x12A\n" +
	"\vfilter_tags\x18\x05 \x03(\v2 .tkd.orthanc_bridge.v1.FilterTagR\n" +
	"filterTags\x12!\n" +
	"\finclude_tags\x18\x06 \x03(\tR\vincludeTags\x122\n" +
	"\x15enable_fuzzy_matching\x18\n" +
	" \x01(\bR\x13enableFuzzyMatching\x129\n" +
	"\n" +
	"pagination\x18\v \x01(\v2\x19.tkd.common.v1.PaginationR\n" +
	"pagination\"3\n" +
	"\tThumbnail\x12\x12\n" +
	"\x04mime\x18\x01 \x01(\tR\x04mime\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"\xd2\x01\n" +
	"\bInstance\x12!\n" +
	"\finstance_uid\x18\x01 \x01(\tR\vinstanceUid\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x123\n" +
	"\x04tags\x18\x04 \x03(\v2\x1f.tkd.orthanc_bridge.v1.DICOMTagR\x04tags\x12>\n" +
	"\tthumbnail\x18\x05 \x01(\v2 .tkd.orthanc_bridge.v1.ThumbnailR\tthumbnail\"\xcb\x01\n" +
	"\x06Series\x12\x1d\n" +
	"\n" +
	"series_uid\x18\x01 \x01(\tR\tseriesUid\x12=\n" +
	"\tinstances\x18\x02 \x03(\v2\x1f.tkd.orthanc_bridge.v1.InstanceR\tinstances\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x123\n" +
	"\x04tags\x18\x04 \x03(\v2\x1f.tkd.orthanc_bridge.v1.DICOMTagR\x04tags\"\xc1\x02\n" +
	"\x05Study\x12\x1b\n" +
	"\tstudy_uid\x18\x01 \x01(\tR\bstudyUid\x125\n" +
	"\x06series\x18\x02 \x03(\v2\x1d.tkd.orthanc_bridge.v1.SeriesR\x06series\x12.\n" +
	"\x04time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12!\n" +
	"\fpatient_name\x18\x04 \x01(\tR\vpatientName\x12\x1d\n" +
	"\n" +
	"owner_name\x18\x05 \x01(\tR\townerName\x12\x1d\n" +
	"\n" +
	"patient_id\x18\b \x01(\tR\tpatientId\x12\x1e\n" +
	"\n" +
	"modalities\x18\x06 \x03(\tR\n" +
	"modalities\x123\n" +
	"\x04tags\x18\a \x03(\v2\x1f.tkd.orthanc_bridge.v1.DICOMTagR\x04tags\"n\n" +
	"\x13ListStudiesResponse\x126\n" +
	"\astudies\x18\x05 \x03(\v2\x1c.tkd.orthanc_bridge.v1.StudyR\astudies\x12\x1f\n" +
	"\vtotal_count\x18\n" +
	" \x01(\x03R\n" +
	"totalCount\"\xe2\x01\n" +
	"\x14DownloadStudyRequest\x12$\n" +
	"\tstudy_uid\x18\x01 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\bstudyUid\x12#\n" +
	"\rinstance_uids\x18\x02 \x03(\tR\finstanceUids\x12B\n" +
	"\x05types\x18\x03 \x03(\x0e2#.tkd.orthanc_bridge.v1.DownloadTypeB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x05types\x12;\n" +
	"\ftime_to_live\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\n" +
	"timeToLive\"y\n" +
	"\x15DownloadStudyResponse\x12#\n" +
	"\rdownload_link\x18\x01 \x01(\tR\fdownloadLink\x12;\n" +
	"\vexpire_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expireTime\"\xa0\x01\n" +
	"\x11ShareStudyRequest\x12$\n" +
	"\tstudy_uid\x18\x01 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\bstudyUid\x12#\n" +
	"\rinstance_uids\x18\x02 \x03(\tR\finstanceUids\x12@\n" +
	"\x0evalid_duration\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\rvalidDuration\"I\n" +
	"\x12ShareStudyResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\x1d\n" +
	"\n" +
	"viewer_url\x18\x02 \x01(\tR\tviewerUrl\"\x1b\n" +
	"\x19GetWorklistEntriesRequest\"\\\n" +
	"\x1aGetWorklistEntriesResponse\x12>\n" +
	"\aentries\x18\x01 \x03(\v2$.tkd.orthanc_bridge.v1.WorklistEntryR\aentries*T\n" +
	"\fDownloadType\x12\x1d\n" +
	"\x19DOWNLOAD_TYPE_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05DICOM\x10\x01\x12\a\n" +
	"\x03PNG\x10\x02\x12\b\n" +
	"\x04JPEG\x10\x03\x12\a\n" +
	"\x03AVI\x10\x042\xbc\x04\n" +
	"\rOrthancBridge\x12k\n" +
	"\vListStudies\x12).tkd.orthanc_bridge.v1.ListStudiesRequest\x1a*.tkd.orthanc_bridge.v1.ListStudiesResponse\"\x05\xb2~\x02\b\x01\x12^\n" +
	"\x11ListRecentStudies\x12\x16.google.protobuf.Empty\x1a*.tkd.orthanc_bridge.v1.ListStudiesResponse\"\x05\xb2~\x02\b\x01\x12q\n" +
	"\rDownloadStudy\x12+.tkd.orthanc_bridge.v1.DownloadStudyRequest\x1a,.tkd.orthanc_bridge.v1.DownloadStudyResponse\"\x05\xb2~\x02\b\x01\x12h\n" +
	"\n" +
	"ShareStudy\x12(.tkd.orthanc_bridge.v1.ShareStudyRequest\x1a).tkd.orthanc_bridge.v1.ShareStudyResponse\"\x05\xb2~\x02\b\x01\x12\x80\x01\n" +
	"\x12GetWorklistEntries\x120.tkd.orthanc_bridge.v1.GetWorklistEntriesRequest\x1a1.tkd.orthanc_bridge.v1.GetWorklistEntriesResponse\"\x05\xb2~\x02\b\x01B\xf6\x01\n" +
	"\x19com.tkd.orthanc_bridge.v1B\x12OrthancBridgeProtoP\x01ZSgithub.com/tierklinik-dobersberg/apis/gen/go/tkd/orthanc_bridge/v1;orthanc_bridgev1\xa2\x02\x03TOX\xaa\x02\x14Tkd.OrthancBridge.V1\xca\x02\x14Tkd\\OrthancBridge\\V1\xe2\x02 Tkd\\OrthancBridge\\V1\\GPBMetadata\xea\x02\x16Tkd::OrthancBridge::V1b\x06proto3"

var (
	file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescOnce sync.Once
	file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescData []byte
)

func file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescGZIP() []byte {
	file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescOnce.Do(func() {
		file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDesc), len(file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDesc)))
	})
	return file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDescData
}

var file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_goTypes = []any{
	(DownloadType)(0),                  // 0: tkd.orthanc_bridge.v1.DownloadType
	(*DICOMTag)(nil),                   // 1: tkd.orthanc_bridge.v1.DICOMTag
	(*WorklistEntry)(nil),              // 2: tkd.orthanc_bridge.v1.WorklistEntry
	(*FilterTag)(nil),                  // 3: tkd.orthanc_bridge.v1.FilterTag
	(*ListStudiesRequest)(nil),         // 4: tkd.orthanc_bridge.v1.ListStudiesRequest
	(*Thumbnail)(nil),                  // 5: tkd.orthanc_bridge.v1.Thumbnail
	(*Instance)(nil),                   // 6: tkd.orthanc_bridge.v1.Instance
	(*Series)(nil),                     // 7: tkd.orthanc_bridge.v1.Series
	(*Study)(nil),                      // 8: tkd.orthanc_bridge.v1.Study
	(*ListStudiesResponse)(nil),        // 9: tkd.orthanc_bridge.v1.ListStudiesResponse
	(*DownloadStudyRequest)(nil),       // 10: tkd.orthanc_bridge.v1.DownloadStudyRequest
	(*DownloadStudyResponse)(nil),      // 11: tkd.orthanc_bridge.v1.DownloadStudyResponse
	(*ShareStudyRequest)(nil),          // 12: tkd.orthanc_bridge.v1.ShareStudyRequest
	(*ShareStudyResponse)(nil),         // 13: tkd.orthanc_bridge.v1.ShareStudyResponse
	(*GetWorklistEntriesRequest)(nil),  // 14: tkd.orthanc_bridge.v1.GetWorklistEntriesRequest
	(*GetWorklistEntriesResponse)(nil), // 15: tkd.orthanc_bridge.v1.GetWorklistEntriesResponse
	(*structpb.Value)(nil),             // 16: google.protobuf.Value
	(*v1.Element)(nil),                 // 17: tkd.dicom.v1.Element
	(*v11.DateRange)(nil),              // 18: tkd.common.v1.DateRange
	(*v11.Pagination)(nil),             // 19: tkd.common.v1.Pagination
	(*timestamppb.Timestamp)(nil),      // 20: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),        // 21: google.protobuf.Duration
	(*emptypb.Empty)(nil),              // 22: google.protobuf.Empty
}
var file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_depIdxs = []int32{
	16, // 0: tkd.orthanc_bridge.v1.DICOMTag.value:type_name -> google.protobuf.Value
	1,  // 1: tkd.orthanc_bridge.v1.WorklistEntry.tags:type_name -> tkd.orthanc_bridge.v1.DICOMTag
	17, // 2: tkd.orthanc_bridge.v1.WorklistEntry.elements:type_name -> tkd.dicom.v1.Element
	18, // 3: tkd.orthanc_bridge.v1.ListStudiesRequest.date_range:type_name -> tkd.common.v1.DateRange
	3,  // 4: tkd.orthanc_bridge.v1.ListStudiesRequest.filter_tags:type_name -> tkd.orthanc_bridge.v1.FilterTag
	19, // 5: tkd.orthanc_bridge.v1.ListStudiesRequest.pagination:type_name -> tkd.common.v1.Pagination
	20, // 6: tkd.orthanc_bridge.v1.Instance.time:type_name -> google.protobuf.Timestamp
	1,  // 7: tkd.orthanc_bridge.v1.Instance.tags:type_name -> tkd.orthanc_bridge.v1.DICOMTag
	5,  // 8: tkd.orthanc_bridge.v1.Instance.thumbnail:type_name -> tkd.orthanc_bridge.v1.Thumbnail
	6,  // 9: tkd.orthanc_bridge.v1.Series.instances:type_name -> tkd.orthanc_bridge.v1.Instance
	20, // 10: tkd.orthanc_bridge.v1.Series.time:type_name -> google.protobuf.Timestamp
	1,  // 11: tkd.orthanc_bridge.v1.Series.tags:type_name -> tkd.orthanc_bridge.v1.DICOMTag
	7,  // 12: tkd.orthanc_bridge.v1.Study.series:type_name -> tkd.orthanc_bridge.v1.Series
	20, // 13: tkd.orthanc_bridge.v1.Study.time:type_name -> google.protobuf.Timestamp
	1,  // 14: tkd.orthanc_bridge.v1.Study.tags:type_name -> tkd.orthanc_bridge.v1.DICOMTag
	8,  // 15: tkd.orthanc_bridge.v1.ListStudiesResponse.studies:type_name -> tkd.orthanc_bridge.v1.Study
	0,  // 16: tkd.orthanc_bridge.v1.DownloadStudyRequest.types:type_name -> tkd.orthanc_bridge.v1.DownloadType
	21, // 17: tkd.orthanc_bridge.v1.DownloadStudyRequest.time_to_live:type_name -> google.protobuf.Duration
	20, // 18: tkd.orthanc_bridge.v1.DownloadStudyResponse.expire_time:type_name -> google.protobuf.Timestamp
	21, // 19: tkd.orthanc_bridge.v1.ShareStudyRequest.valid_duration:type_name -> google.protobuf.Duration
	2,  // 20: tkd.orthanc_bridge.v1.GetWorklistEntriesResponse.entries:type_name -> tkd.orthanc_bridge.v1.WorklistEntry
	4,  // 21: tkd.orthanc_bridge.v1.OrthancBridge.ListStudies:input_type -> tkd.orthanc_bridge.v1.ListStudiesRequest
	22, // 22: tkd.orthanc_bridge.v1.OrthancBridge.ListRecentStudies:input_type -> google.protobuf.Empty
	10, // 23: tkd.orthanc_bridge.v1.OrthancBridge.DownloadStudy:input_type -> tkd.orthanc_bridge.v1.DownloadStudyRequest
	12, // 24: tkd.orthanc_bridge.v1.OrthancBridge.ShareStudy:input_type -> tkd.orthanc_bridge.v1.ShareStudyRequest
	14, // 25: tkd.orthanc_bridge.v1.OrthancBridge.GetWorklistEntries:input_type -> tkd.orthanc_bridge.v1.GetWorklistEntriesRequest
	9,  // 26: tkd.orthanc_bridge.v1.OrthancBridge.ListStudies:output_type -> tkd.orthanc_bridge.v1.ListStudiesResponse
	9,  // 27: tkd.orthanc_bridge.v1.OrthancBridge.ListRecentStudies:output_type -> tkd.orthanc_bridge.v1.ListStudiesResponse
	11, // 28: tkd.orthanc_bridge.v1.OrthancBridge.DownloadStudy:output_type -> tkd.orthanc_bridge.v1.DownloadStudyResponse
	13, // 29: tkd.orthanc_bridge.v1.OrthancBridge.ShareStudy:output_type -> tkd.orthanc_bridge.v1.ShareStudyResponse
	15, // 30: tkd.orthanc_bridge.v1.OrthancBridge.GetWorklistEntries:output_type -> tkd.orthanc_bridge.v1.GetWorklistEntriesResponse
	26, // [26:31] is the sub-list for method output_type
	21, // [21:26] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_init() }
func file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_init() {
	if File_tkd_orthanc_bridge_v1_orthanc_bridge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDesc), len(file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_goTypes,
		DependencyIndexes: file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_depIdxs,
		EnumInfos:         file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_enumTypes,
		MessageInfos:      file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_msgTypes,
	}.Build()
	File_tkd_orthanc_bridge_v1_orthanc_bridge_proto = out.File
	file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_goTypes = nil
	file_tkd_orthanc_bridge_v1_orthanc_bridge_proto_depIdxs = nil
}
