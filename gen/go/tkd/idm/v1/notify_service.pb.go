// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: tkd/idm/v1/notify_service.proto

package idmv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/tierklinik-dobersberg/apis/gen/go/tkd/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AttachmentType int32

const (
	AttachmentType_UNSPECIFIED      AttachmentType = 0
	AttachmentType_INLINE           AttachmentType = 1
	AttachmentType_ATTACHEMNT       AttachmentType = 2
	AttachmentType_ALTERNATIVE_BODY AttachmentType = 3
)

// Enum value maps for AttachmentType.
var (
	AttachmentType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "INLINE",
		2: "ATTACHEMNT",
		3: "ALTERNATIVE_BODY",
	}
	AttachmentType_value = map[string]int32{
		"UNSPECIFIED":      0,
		"INLINE":           1,
		"ATTACHEMNT":       2,
		"ALTERNATIVE_BODY": 3,
	}
)

func (x AttachmentType) Enum() *AttachmentType {
	p := new(AttachmentType)
	*p = x
	return p
}

func (x AttachmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_tkd_idm_v1_notify_service_proto_enumTypes[0].Descriptor()
}

func (AttachmentType) Type() protoreflect.EnumType {
	return &file_tkd_idm_v1_notify_service_proto_enumTypes[0]
}

func (x AttachmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachmentType.Descriptor instead.
func (AttachmentType) EnumDescriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{0}
}

type ErrorKind int32

const (
	ErrorKind_ERROR_KIND_UNSPECIFIED             ErrorKind = 0
	ErrorKind_ERROR_KIND_NO_PRIMARY_MAIL         ErrorKind = 1
	ErrorKind_ERROR_KIND_NO_PRIMARY_PHONE        ErrorKind = 2
	ErrorKind_ERROR_KIND_NO_WEBPUSH_SUBSCRIPTION ErrorKind = 3
	ErrorKind_ERROR_KIND_TRANSPORT               ErrorKind = 4
	ErrorKind_ERROR_KIND_TEMPLATE                ErrorKind = 5
	ErrorKind_ERROR_KIND_OTHER                   ErrorKind = 255
)

// Enum value maps for ErrorKind.
var (
	ErrorKind_name = map[int32]string{
		0:   "ERROR_KIND_UNSPECIFIED",
		1:   "ERROR_KIND_NO_PRIMARY_MAIL",
		2:   "ERROR_KIND_NO_PRIMARY_PHONE",
		3:   "ERROR_KIND_NO_WEBPUSH_SUBSCRIPTION",
		4:   "ERROR_KIND_TRANSPORT",
		5:   "ERROR_KIND_TEMPLATE",
		255: "ERROR_KIND_OTHER",
	}
	ErrorKind_value = map[string]int32{
		"ERROR_KIND_UNSPECIFIED":             0,
		"ERROR_KIND_NO_PRIMARY_MAIL":         1,
		"ERROR_KIND_NO_PRIMARY_PHONE":        2,
		"ERROR_KIND_NO_WEBPUSH_SUBSCRIPTION": 3,
		"ERROR_KIND_TRANSPORT":               4,
		"ERROR_KIND_TEMPLATE":                5,
		"ERROR_KIND_OTHER":                   255,
	}
)

func (x ErrorKind) Enum() *ErrorKind {
	p := new(ErrorKind)
	*p = x
	return p
}

func (x ErrorKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorKind) Descriptor() protoreflect.EnumDescriptor {
	return file_tkd_idm_v1_notify_service_proto_enumTypes[1].Descriptor()
}

func (ErrorKind) Type() protoreflect.EnumType {
	return &file_tkd_idm_v1_notify_service_proto_enumTypes[1]
}

func (x ErrorKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorKind.Descriptor instead.
func (ErrorKind) EnumDescriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{1}
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MediaType      string         `protobuf:"bytes,2,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`
	Content        []byte         `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ContentId      string         `protobuf:"bytes,4,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	AttachmentType AttachmentType `protobuf:"varint,5,opt,name=attachment_type,json=attachmentType,proto3,enum=tkd.idm.v1.AttachmentType" json:"attachment_type,omitempty"`
	// A list of user IDs this attachment is for.
	// if left empty, the attachment will be sent to
	// all users.
	ForUser []string `protobuf:"bytes,6,rep,name=for_user,json=forUser,proto3" json:"for_user,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{0}
}

func (x *Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attachment) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *Attachment) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Attachment) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *Attachment) GetAttachmentType() AttachmentType {
	if x != nil {
		return x.AttachmentType
	}
	return AttachmentType_UNSPECIFIED
}

func (x *Attachment) GetForUser() []string {
	if x != nil {
		return x.ForUser
	}
	return nil
}

type EMailMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject     string        `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Body        string        `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Attachments []*Attachment `protobuf:"bytes,3,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *EMailMessage) Reset() {
	*x = EMailMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EMailMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EMailMessage) ProtoMessage() {}

func (x *EMailMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EMailMessage.ProtoReflect.Descriptor instead.
func (*EMailMessage) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{1}
}

func (x *EMailMessage) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EMailMessage) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *EMailMessage) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type SMS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *SMS) Reset() {
	*x = SMS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMS) ProtoMessage() {}

func (x *SMS) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMS.ProtoReflect.Descriptor instead.
func (*SMS) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{2}
}

func (x *SMS) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type WebPushNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*WebPushNotification_Binary
	//	*WebPushNotification_Template
	Kind isWebPushNotification_Kind `protobuf_oneof:"kind"`
}

func (x *WebPushNotification) Reset() {
	*x = WebPushNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebPushNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebPushNotification) ProtoMessage() {}

func (x *WebPushNotification) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebPushNotification.ProtoReflect.Descriptor instead.
func (*WebPushNotification) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{3}
}

func (m *WebPushNotification) GetKind() isWebPushNotification_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *WebPushNotification) GetBinary() []byte {
	if x, ok := x.GetKind().(*WebPushNotification_Binary); ok {
		return x.Binary
	}
	return nil
}

func (x *WebPushNotification) GetTemplate() string {
	if x, ok := x.GetKind().(*WebPushNotification_Template); ok {
		return x.Template
	}
	return ""
}

type isWebPushNotification_Kind interface {
	isWebPushNotification_Kind()
}

type WebPushNotification_Binary struct {
	Binary []byte `protobuf:"bytes,1,opt,name=binary,proto3,oneof"`
}

type WebPushNotification_Template struct {
	Template string `protobuf:"bytes,2,opt,name=template,proto3,oneof"`
}

func (*WebPushNotification_Binary) isWebPushNotification_Kind() {}

func (*WebPushNotification_Template) isWebPushNotification_Kind() {}

type SendNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*SendNotificationRequest_Sms
	//	*SendNotificationRequest_Email
	//	*SendNotificationRequest_Webpush
	Message                isSendNotificationRequest_Message `protobuf_oneof:"message"`
	TargetUsers            []string                          `protobuf:"bytes,3,rep,name=target_users,json=targetUsers,proto3" json:"target_users,omitempty"`
	TargetRoles            []string                          `protobuf:"bytes,4,rep,name=target_roles,json=targetRoles,proto3" json:"target_roles,omitempty"`
	PerUserTemplateContext map[string]*structpb.Struct       `protobuf:"bytes,5,rep,name=per_user_template_context,json=perUserTemplateContext,proto3" json:"per_user_template_context,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SenderUserId           string                            `protobuf:"bytes,6,opt,name=sender_user_id,json=senderUserId,proto3" json:"sender_user_id,omitempty"`
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{4}
}

func (m *SendNotificationRequest) GetMessage() isSendNotificationRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *SendNotificationRequest) GetSms() *SMS {
	if x, ok := x.GetMessage().(*SendNotificationRequest_Sms); ok {
		return x.Sms
	}
	return nil
}

func (x *SendNotificationRequest) GetEmail() *EMailMessage {
	if x, ok := x.GetMessage().(*SendNotificationRequest_Email); ok {
		return x.Email
	}
	return nil
}

func (x *SendNotificationRequest) GetWebpush() *WebPushNotification {
	if x, ok := x.GetMessage().(*SendNotificationRequest_Webpush); ok {
		return x.Webpush
	}
	return nil
}

func (x *SendNotificationRequest) GetTargetUsers() []string {
	if x != nil {
		return x.TargetUsers
	}
	return nil
}

func (x *SendNotificationRequest) GetTargetRoles() []string {
	if x != nil {
		return x.TargetRoles
	}
	return nil
}

func (x *SendNotificationRequest) GetPerUserTemplateContext() map[string]*structpb.Struct {
	if x != nil {
		return x.PerUserTemplateContext
	}
	return nil
}

func (x *SendNotificationRequest) GetSenderUserId() string {
	if x != nil {
		return x.SenderUserId
	}
	return ""
}

type isSendNotificationRequest_Message interface {
	isSendNotificationRequest_Message()
}

type SendNotificationRequest_Sms struct {
	Sms *SMS `protobuf:"bytes,1,opt,name=sms,proto3,oneof"`
}

type SendNotificationRequest_Email struct {
	Email *EMailMessage `protobuf:"bytes,2,opt,name=email,proto3,oneof"`
}

type SendNotificationRequest_Webpush struct {
	Webpush *WebPushNotification `protobuf:"bytes,7,opt,name=webpush,proto3,oneof"`
}

func (*SendNotificationRequest_Sms) isSendNotificationRequest_Message() {}

func (*SendNotificationRequest_Email) isSendNotificationRequest_Message() {}

func (*SendNotificationRequest_Webpush) isSendNotificationRequest_Message() {}

type DeliveryNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUser string    `protobuf:"bytes,1,opt,name=target_user,json=targetUser,proto3" json:"target_user,omitempty"`
	Error      string    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ErrorKind  ErrorKind `protobuf:"varint,3,opt,name=error_kind,json=errorKind,proto3,enum=tkd.idm.v1.ErrorKind" json:"error_kind,omitempty"`
}

func (x *DeliveryNotification) Reset() {
	*x = DeliveryNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryNotification) ProtoMessage() {}

func (x *DeliveryNotification) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryNotification.ProtoReflect.Descriptor instead.
func (*DeliveryNotification) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeliveryNotification) GetTargetUser() string {
	if x != nil {
		return x.TargetUser
	}
	return ""
}

func (x *DeliveryNotification) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *DeliveryNotification) GetErrorKind() ErrorKind {
	if x != nil {
		return x.ErrorKind
	}
	return ErrorKind_ERROR_KIND_UNSPECIFIED
}

type SendNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deliveries []*DeliveryNotification `protobuf:"bytes,1,rep,name=deliveries,proto3" json:"deliveries,omitempty"`
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{6}
}

func (x *SendNotificationResponse) GetDeliveries() []*DeliveryNotification {
	if x != nil {
		return x.Deliveries
	}
	return nil
}

type GetVAPIDPublicKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVAPIDPublicKeyRequest) Reset() {
	*x = GetVAPIDPublicKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVAPIDPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVAPIDPublicKeyRequest) ProtoMessage() {}

func (x *GetVAPIDPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVAPIDPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*GetVAPIDPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{7}
}

type GetVAPIDPublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetVAPIDPublicKeyResponse) Reset() {
	*x = GetVAPIDPublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVAPIDPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVAPIDPublicKeyResponse) ProtoMessage() {}

func (x *GetVAPIDPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVAPIDPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*GetVAPIDPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetVAPIDPublicKeyResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type WebPushSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint       string               `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	ExpirationType *durationpb.Duration `protobuf:"bytes,2,opt,name=expiration_type,json=expirationType,proto3" json:"expiration_type,omitempty"`
	Keys           *WebPushKeys         `protobuf:"bytes,3,opt,name=keys,proto3" json:"keys,omitempty"`
}

func (x *WebPushSubscription) Reset() {
	*x = WebPushSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebPushSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebPushSubscription) ProtoMessage() {}

func (x *WebPushSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebPushSubscription.ProtoReflect.Descriptor instead.
func (*WebPushSubscription) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{9}
}

func (x *WebPushSubscription) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *WebPushSubscription) GetExpirationType() *durationpb.Duration {
	if x != nil {
		return x.ExpirationType
	}
	return nil
}

func (x *WebPushSubscription) GetKeys() *WebPushKeys {
	if x != nil {
		return x.Keys
	}
	return nil
}

type WebPushKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   string `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	P256Dh string `protobuf:"bytes,2,opt,name=p256dh,proto3" json:"p256dh,omitempty"`
}

func (x *WebPushKeys) Reset() {
	*x = WebPushKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebPushKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebPushKeys) ProtoMessage() {}

func (x *WebPushKeys) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebPushKeys.ProtoReflect.Descriptor instead.
func (*WebPushKeys) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{10}
}

func (x *WebPushKeys) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *WebPushKeys) GetP256Dh() string {
	if x != nil {
		return x.P256Dh
	}
	return ""
}

type AddWebPushSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscription *WebPushSubscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *AddWebPushSubscriptionRequest) Reset() {
	*x = AddWebPushSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWebPushSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWebPushSubscriptionRequest) ProtoMessage() {}

func (x *AddWebPushSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWebPushSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*AddWebPushSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{11}
}

func (x *AddWebPushSubscriptionRequest) GetSubscription() *WebPushSubscription {
	if x != nil {
		return x.Subscription
	}
	return nil
}

type AddWebPushSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddWebPushSubscriptionResponse) Reset() {
	*x = AddWebPushSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWebPushSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWebPushSubscriptionResponse) ProtoMessage() {}

func (x *AddWebPushSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_idm_v1_notify_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWebPushSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*AddWebPushSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_tkd_idm_v1_notify_service_proto_rawDescGZIP(), []int{12}
}

var File_tkd_idm_v1_notify_service_proto protoreflect.FileDescriptor

var file_tkd_idm_v1_notify_service_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x74, 0x6b, 0x64, 0x2f, 0x69, 0x64, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x74, 0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62,
	0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x74, 0x6b, 0x64, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd8, 0x01, 0x0a, 0x0a, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x74,
	0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x45, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0xf7, 0x18, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0xf7, 0x18, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x6b, 0x64, 0x2e,
	0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x19,
	0x0a, 0x03, 0x53, 0x4d, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x5d, 0x0a, 0x13, 0x57, 0x65, 0x62,
	0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x06, 0xfa, 0xf7, 0x18, 0x02, 0x08, 0x01, 0x22, 0x9b, 0x04, 0x0a, 0x17, 0x53, 0x65, 0x6e,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x73, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x4d, 0x53, 0x48, 0x00, 0x52, 0x03, 0x73, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x69,
	0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x4d, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x3b, 0x0a, 0x07, 0x77,
	0x65, 0x62, 0x70, 0x75, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74,
	0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73,
	0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x07, 0x77, 0x65, 0x62, 0x70, 0x75, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x7a,
	0x0a, 0x19, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3f, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x16, 0x70, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2d, 0x0a, 0x0e, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0xf7, 0x18, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0c, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x62, 0x0a, 0x1b, 0x50, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x11, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x06, 0xfa, 0xf7, 0x18, 0x02, 0x08, 0x01,
	0x4a, 0x04, 0x08, 0x08, 0x10, 0x0d, 0x22, 0x83, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x6b, 0x64,
	0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x22, 0x5c, 0x0a, 0x18,
	0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74,
	0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x56, 0x41, 0x50, 0x49, 0x44, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x56, 0x41, 0x50,
	0x49, 0x44, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xab, 0x01, 0x0a, 0x13, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73,
	0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0xf7, 0x18, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x22, 0x39, 0x0a, 0x0b, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x32, 0x35, 0x36, 0x64, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x32, 0x35, 0x36, 0x64, 0x68, 0x22, 0x64,
	0x0a, 0x1d, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x43, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x1e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x50, 0x75,
	0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x53, 0x0a, 0x0e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x4c,
	0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x45,
	0x4d, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x4c, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x54, 0x49, 0x56, 0x45, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x03, 0x2a, 0xda, 0x01, 0x0a, 0x09,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4b,
	0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x4d,
	0x41, 0x49, 0x4c, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4b,
	0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x50,
	0x48, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x5f, 0x57, 0x45, 0x42, 0x50, 0x55, 0x53, 0x48, 0x5f,
	0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x18,
	0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10,
	0x05, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f,
	0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0xff, 0x01, 0x32, 0xea, 0x02, 0x0a, 0x0d, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x10, 0x53, 0x65,
	0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x05, 0xb2, 0x7e, 0x02, 0x08, 0x02,
	0x12, 0x67, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x41, 0x50, 0x49, 0x44, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x41, 0x50, 0x49, 0x44, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x6b,
	0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x41, 0x50, 0x49,
	0x44, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x05, 0xb2, 0x7e, 0x02, 0x08, 0x01, 0x12, 0x76, 0x0a, 0x16, 0x41, 0x64, 0x64,
	0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x74, 0x6b, 0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x57,
	0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x05, 0xb2, 0x7e, 0x02, 0x08,
	0x01, 0x1a, 0x12, 0xba, 0x7e, 0x0f, 0x0a, 0x0d, 0x69, 0x64, 0x6d, 0x5f, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x75, 0x73, 0x65, 0x72, 0x42, 0xad, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x6b,
	0x64, 0x2e, 0x69, 0x64, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x69, 0x65, 0x72, 0x6b,
	0x6c, 0x69, 0x6e, 0x69, 0x6b, 0x2d, 0x64, 0x6f, 0x62, 0x65, 0x72, 0x73, 0x62, 0x65, 0x72, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x6b, 0x64,
	0x2f, 0x69, 0x64, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x64, 0x6d, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x54, 0x49, 0x58, 0xaa, 0x02, 0x0a, 0x54, 0x6b, 0x64, 0x2e, 0x49, 0x64, 0x6d, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0a, 0x54, 0x6b, 0x64, 0x5c, 0x49, 0x64, 0x6d, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16,
	0x54, 0x6b, 0x64, 0x5c, 0x49, 0x64, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x54, 0x6b, 0x64, 0x3a, 0x3a, 0x49, 0x64,
	0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tkd_idm_v1_notify_service_proto_rawDescOnce sync.Once
	file_tkd_idm_v1_notify_service_proto_rawDescData = file_tkd_idm_v1_notify_service_proto_rawDesc
)

func file_tkd_idm_v1_notify_service_proto_rawDescGZIP() []byte {
	file_tkd_idm_v1_notify_service_proto_rawDescOnce.Do(func() {
		file_tkd_idm_v1_notify_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_tkd_idm_v1_notify_service_proto_rawDescData)
	})
	return file_tkd_idm_v1_notify_service_proto_rawDescData
}

var file_tkd_idm_v1_notify_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tkd_idm_v1_notify_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_tkd_idm_v1_notify_service_proto_goTypes = []interface{}{
	(AttachmentType)(0),                    // 0: tkd.idm.v1.AttachmentType
	(ErrorKind)(0),                         // 1: tkd.idm.v1.ErrorKind
	(*Attachment)(nil),                     // 2: tkd.idm.v1.Attachment
	(*EMailMessage)(nil),                   // 3: tkd.idm.v1.EMailMessage
	(*SMS)(nil),                            // 4: tkd.idm.v1.SMS
	(*WebPushNotification)(nil),            // 5: tkd.idm.v1.WebPushNotification
	(*SendNotificationRequest)(nil),        // 6: tkd.idm.v1.SendNotificationRequest
	(*DeliveryNotification)(nil),           // 7: tkd.idm.v1.DeliveryNotification
	(*SendNotificationResponse)(nil),       // 8: tkd.idm.v1.SendNotificationResponse
	(*GetVAPIDPublicKeyRequest)(nil),       // 9: tkd.idm.v1.GetVAPIDPublicKeyRequest
	(*GetVAPIDPublicKeyResponse)(nil),      // 10: tkd.idm.v1.GetVAPIDPublicKeyResponse
	(*WebPushSubscription)(nil),            // 11: tkd.idm.v1.WebPushSubscription
	(*WebPushKeys)(nil),                    // 12: tkd.idm.v1.WebPushKeys
	(*AddWebPushSubscriptionRequest)(nil),  // 13: tkd.idm.v1.AddWebPushSubscriptionRequest
	(*AddWebPushSubscriptionResponse)(nil), // 14: tkd.idm.v1.AddWebPushSubscriptionResponse
	nil,                                    // 15: tkd.idm.v1.SendNotificationRequest.PerUserTemplateContextEntry
	(*durationpb.Duration)(nil),            // 16: google.protobuf.Duration
	(*structpb.Struct)(nil),                // 17: google.protobuf.Struct
}
var file_tkd_idm_v1_notify_service_proto_depIdxs = []int32{
	0,  // 0: tkd.idm.v1.Attachment.attachment_type:type_name -> tkd.idm.v1.AttachmentType
	2,  // 1: tkd.idm.v1.EMailMessage.attachments:type_name -> tkd.idm.v1.Attachment
	4,  // 2: tkd.idm.v1.SendNotificationRequest.sms:type_name -> tkd.idm.v1.SMS
	3,  // 3: tkd.idm.v1.SendNotificationRequest.email:type_name -> tkd.idm.v1.EMailMessage
	5,  // 4: tkd.idm.v1.SendNotificationRequest.webpush:type_name -> tkd.idm.v1.WebPushNotification
	15, // 5: tkd.idm.v1.SendNotificationRequest.per_user_template_context:type_name -> tkd.idm.v1.SendNotificationRequest.PerUserTemplateContextEntry
	1,  // 6: tkd.idm.v1.DeliveryNotification.error_kind:type_name -> tkd.idm.v1.ErrorKind
	7,  // 7: tkd.idm.v1.SendNotificationResponse.deliveries:type_name -> tkd.idm.v1.DeliveryNotification
	16, // 8: tkd.idm.v1.WebPushSubscription.expiration_type:type_name -> google.protobuf.Duration
	12, // 9: tkd.idm.v1.WebPushSubscription.keys:type_name -> tkd.idm.v1.WebPushKeys
	11, // 10: tkd.idm.v1.AddWebPushSubscriptionRequest.subscription:type_name -> tkd.idm.v1.WebPushSubscription
	17, // 11: tkd.idm.v1.SendNotificationRequest.PerUserTemplateContextEntry.value:type_name -> google.protobuf.Struct
	6,  // 12: tkd.idm.v1.NotifyService.SendNotification:input_type -> tkd.idm.v1.SendNotificationRequest
	9,  // 13: tkd.idm.v1.NotifyService.GetVAPIDPublicKey:input_type -> tkd.idm.v1.GetVAPIDPublicKeyRequest
	13, // 14: tkd.idm.v1.NotifyService.AddWebPushSubscription:input_type -> tkd.idm.v1.AddWebPushSubscriptionRequest
	8,  // 15: tkd.idm.v1.NotifyService.SendNotification:output_type -> tkd.idm.v1.SendNotificationResponse
	10, // 16: tkd.idm.v1.NotifyService.GetVAPIDPublicKey:output_type -> tkd.idm.v1.GetVAPIDPublicKeyResponse
	14, // 17: tkd.idm.v1.NotifyService.AddWebPushSubscription:output_type -> tkd.idm.v1.AddWebPushSubscriptionResponse
	15, // [15:18] is the sub-list for method output_type
	12, // [12:15] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_tkd_idm_v1_notify_service_proto_init() }
func file_tkd_idm_v1_notify_service_proto_init() {
	if File_tkd_idm_v1_notify_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tkd_idm_v1_notify_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EMailMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebPushNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVAPIDPublicKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVAPIDPublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebPushSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebPushKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWebPushSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tkd_idm_v1_notify_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWebPushSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tkd_idm_v1_notify_service_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*WebPushNotification_Binary)(nil),
		(*WebPushNotification_Template)(nil),
	}
	file_tkd_idm_v1_notify_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SendNotificationRequest_Sms)(nil),
		(*SendNotificationRequest_Email)(nil),
		(*SendNotificationRequest_Webpush)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tkd_idm_v1_notify_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tkd_idm_v1_notify_service_proto_goTypes,
		DependencyIndexes: file_tkd_idm_v1_notify_service_proto_depIdxs,
		EnumInfos:         file_tkd_idm_v1_notify_service_proto_enumTypes,
		MessageInfos:      file_tkd_idm_v1_notify_service_proto_msgTypes,
	}.Build()
	File_tkd_idm_v1_notify_service_proto = out.File
	file_tkd_idm_v1_notify_service_proto_rawDesc = nil
	file_tkd_idm_v1_notify_service_proto_goTypes = nil
	file_tkd_idm_v1_notify_service_proto_depIdxs = nil
}
