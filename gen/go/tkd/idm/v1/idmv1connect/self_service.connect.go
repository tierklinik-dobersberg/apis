// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: tkd/idm/v1/self_service.proto

package idmv1connect

import (
	context "context"
	errors "errors"
	connect_go "github.com/bufbuild/connect-go"
	v1 "github.com/tierklinik-dobersberg/apis/gen/go/tkd/idm/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect_go.IsAtLeastVersion0_1_0

const (
	// SelfServiceServiceName is the fully-qualified name of the SelfServiceService service.
	SelfServiceServiceName = "tkd.idm.v1.SelfServiceService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// SelfServiceServiceChangePasswordProcedure is the fully-qualified name of the SelfServiceService's
	// ChangePassword RPC.
	SelfServiceServiceChangePasswordProcedure = "/tkd.idm.v1.SelfServiceService/ChangePassword"
	// SelfServiceServiceUpdateProfileProcedure is the fully-qualified name of the SelfServiceService's
	// UpdateProfile RPC.
	SelfServiceServiceUpdateProfileProcedure = "/tkd.idm.v1.SelfServiceService/UpdateProfile"
	// SelfServiceServiceAddEmailAddressProcedure is the fully-qualified name of the
	// SelfServiceService's AddEmailAddress RPC.
	SelfServiceServiceAddEmailAddressProcedure = "/tkd.idm.v1.SelfServiceService/AddEmailAddress"
	// SelfServiceServiceDeleteEmailAddressProcedure is the fully-qualified name of the
	// SelfServiceService's DeleteEmailAddress RPC.
	SelfServiceServiceDeleteEmailAddressProcedure = "/tkd.idm.v1.SelfServiceService/DeleteEmailAddress"
	// SelfServiceServiceMarkEmailAsPrimaryProcedure is the fully-qualified name of the
	// SelfServiceService's MarkEmailAsPrimary RPC.
	SelfServiceServiceMarkEmailAsPrimaryProcedure = "/tkd.idm.v1.SelfServiceService/MarkEmailAsPrimary"
	// SelfServiceServiceValidateEmailProcedure is the fully-qualified name of the SelfServiceService's
	// ValidateEmail RPC.
	SelfServiceServiceValidateEmailProcedure = "/tkd.idm.v1.SelfServiceService/ValidateEmail"
	// SelfServiceServiceAddAddressProcedure is the fully-qualified name of the SelfServiceService's
	// AddAddress RPC.
	SelfServiceServiceAddAddressProcedure = "/tkd.idm.v1.SelfServiceService/AddAddress"
	// SelfServiceServiceDeleteAddressProcedure is the fully-qualified name of the SelfServiceService's
	// DeleteAddress RPC.
	SelfServiceServiceDeleteAddressProcedure = "/tkd.idm.v1.SelfServiceService/DeleteAddress"
	// SelfServiceServiceUpdateAddressProcedure is the fully-qualified name of the SelfServiceService's
	// UpdateAddress RPC.
	SelfServiceServiceUpdateAddressProcedure = "/tkd.idm.v1.SelfServiceService/UpdateAddress"
	// SelfServiceServiceAddPhoneNumberProcedure is the fully-qualified name of the SelfServiceService's
	// AddPhoneNumber RPC.
	SelfServiceServiceAddPhoneNumberProcedure = "/tkd.idm.v1.SelfServiceService/AddPhoneNumber"
	// SelfServiceServiceDeletePhoneNumberProcedure is the fully-qualified name of the
	// SelfServiceService's DeletePhoneNumber RPC.
	SelfServiceServiceDeletePhoneNumberProcedure = "/tkd.idm.v1.SelfServiceService/DeletePhoneNumber"
	// SelfServiceServiceMarkPhoneNumberAsPrimaryProcedure is the fully-qualified name of the
	// SelfServiceService's MarkPhoneNumberAsPrimary RPC.
	SelfServiceServiceMarkPhoneNumberAsPrimaryProcedure = "/tkd.idm.v1.SelfServiceService/MarkPhoneNumberAsPrimary"
	// SelfServiceServiceValidatePhoneNumberProcedure is the fully-qualified name of the
	// SelfServiceService's ValidatePhoneNumber RPC.
	SelfServiceServiceValidatePhoneNumberProcedure = "/tkd.idm.v1.SelfServiceService/ValidatePhoneNumber"
	// SelfServiceServiceGetRegisteredPasskeysProcedure is the fully-qualified name of the
	// SelfServiceService's GetRegisteredPasskeys RPC.
	SelfServiceServiceGetRegisteredPasskeysProcedure = "/tkd.idm.v1.SelfServiceService/GetRegisteredPasskeys"
	// SelfServiceServiceRemovePasskeyProcedure is the fully-qualified name of the SelfServiceService's
	// RemovePasskey RPC.
	SelfServiceServiceRemovePasskeyProcedure = "/tkd.idm.v1.SelfServiceService/RemovePasskey"
	// SelfServiceServiceEnroll2FAProcedure is the fully-qualified name of the SelfServiceService's
	// Enroll2FA RPC.
	SelfServiceServiceEnroll2FAProcedure = "/tkd.idm.v1.SelfServiceService/Enroll2FA"
	// SelfServiceServiceRemove2FAProcedure is the fully-qualified name of the SelfServiceService's
	// Remove2FA RPC.
	SelfServiceServiceRemove2FAProcedure = "/tkd.idm.v1.SelfServiceService/Remove2FA"
	// SelfServiceServiceGenerateRecoveryCodesProcedure is the fully-qualified name of the
	// SelfServiceService's GenerateRecoveryCodes RPC.
	SelfServiceServiceGenerateRecoveryCodesProcedure = "/tkd.idm.v1.SelfServiceService/GenerateRecoveryCodes"
)

// SelfServiceServiceClient is a client for the tkd.idm.v1.SelfServiceService service.
type SelfServiceServiceClient interface {
	ChangePassword(context.Context, *connect_go.Request[v1.ChangePasswordRequest]) (*connect_go.Response[v1.ChangePasswordResponse], error)
	UpdateProfile(context.Context, *connect_go.Request[v1.UpdateProfileRequest]) (*connect_go.Response[v1.UpdateProfileResponse], error)
	// E-Mails
	AddEmailAddress(context.Context, *connect_go.Request[v1.AddEmailAddressRequest]) (*connect_go.Response[v1.AddEmailAddressResponse], error)
	DeleteEmailAddress(context.Context, *connect_go.Request[v1.DeleteEmailAddressRequest]) (*connect_go.Response[v1.DeleteEmailAddressResponse], error)
	MarkEmailAsPrimary(context.Context, *connect_go.Request[v1.MarkEmailAsPrimaryRequest]) (*connect_go.Response[v1.MarkEmailAsPrimaryResponse], error)
	ValidateEmail(context.Context, *connect_go.Request[v1.ValidateEmailRequest]) (*connect_go.Response[v1.ValidateEmailResponse], error)
	// Addresses
	AddAddress(context.Context, *connect_go.Request[v1.AddAddressRequest]) (*connect_go.Response[v1.AddAddressResponse], error)
	DeleteAddress(context.Context, *connect_go.Request[v1.DeleteAddressRequest]) (*connect_go.Response[v1.DeleteAddressResponse], error)
	UpdateAddress(context.Context, *connect_go.Request[v1.UpdateAddressRequest]) (*connect_go.Response[v1.UpdateAddressResponse], error)
	// Phone Numbers
	AddPhoneNumber(context.Context, *connect_go.Request[v1.AddPhoneNumberRequest]) (*connect_go.Response[v1.AddPhoneNumberResponse], error)
	DeletePhoneNumber(context.Context, *connect_go.Request[v1.DeletePhoneNumberRequest]) (*connect_go.Response[v1.DeletePhoneNumberResponse], error)
	MarkPhoneNumberAsPrimary(context.Context, *connect_go.Request[v1.MarkPhoneNumberAsPrimaryRequest]) (*connect_go.Response[v1.MarkPhoneNumberAsPrimaryResponse], error)
	ValidatePhoneNumber(context.Context, *connect_go.Request[v1.ValidatePhoneNumberRequest]) (*connect_go.Response[v1.ValidatePhoneNumberResponse], error)
	// WebAuthN
	GetRegisteredPasskeys(context.Context, *connect_go.Request[v1.GetRegisteredPasskeysRequest]) (*connect_go.Response[v1.GetRegisteredPasskeysResponse], error)
	RemovePasskey(context.Context, *connect_go.Request[v1.RemovePasskeyRequest]) (*connect_go.Response[v1.RemovePasskeyResponse], error)
	// Two-Factor authentication
	Enroll2FA(context.Context, *connect_go.Request[v1.Enroll2FARequest]) (*connect_go.Response[v1.Enroll2FAResponse], error)
	Remove2FA(context.Context, *connect_go.Request[v1.Remove2FARequest]) (*connect_go.Response[v1.Remove2FAResponse], error)
	GenerateRecoveryCodes(context.Context, *connect_go.Request[v1.GenerateRecoveryCodesRequest]) (*connect_go.Response[v1.GenerateRecoveryCodesResponse], error)
}

// NewSelfServiceServiceClient constructs a client for the tkd.idm.v1.SelfServiceService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewSelfServiceServiceClient(httpClient connect_go.HTTPClient, baseURL string, opts ...connect_go.ClientOption) SelfServiceServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &selfServiceServiceClient{
		changePassword: connect_go.NewClient[v1.ChangePasswordRequest, v1.ChangePasswordResponse](
			httpClient,
			baseURL+SelfServiceServiceChangePasswordProcedure,
			opts...,
		),
		updateProfile: connect_go.NewClient[v1.UpdateProfileRequest, v1.UpdateProfileResponse](
			httpClient,
			baseURL+SelfServiceServiceUpdateProfileProcedure,
			opts...,
		),
		addEmailAddress: connect_go.NewClient[v1.AddEmailAddressRequest, v1.AddEmailAddressResponse](
			httpClient,
			baseURL+SelfServiceServiceAddEmailAddressProcedure,
			opts...,
		),
		deleteEmailAddress: connect_go.NewClient[v1.DeleteEmailAddressRequest, v1.DeleteEmailAddressResponse](
			httpClient,
			baseURL+SelfServiceServiceDeleteEmailAddressProcedure,
			opts...,
		),
		markEmailAsPrimary: connect_go.NewClient[v1.MarkEmailAsPrimaryRequest, v1.MarkEmailAsPrimaryResponse](
			httpClient,
			baseURL+SelfServiceServiceMarkEmailAsPrimaryProcedure,
			opts...,
		),
		validateEmail: connect_go.NewClient[v1.ValidateEmailRequest, v1.ValidateEmailResponse](
			httpClient,
			baseURL+SelfServiceServiceValidateEmailProcedure,
			opts...,
		),
		addAddress: connect_go.NewClient[v1.AddAddressRequest, v1.AddAddressResponse](
			httpClient,
			baseURL+SelfServiceServiceAddAddressProcedure,
			opts...,
		),
		deleteAddress: connect_go.NewClient[v1.DeleteAddressRequest, v1.DeleteAddressResponse](
			httpClient,
			baseURL+SelfServiceServiceDeleteAddressProcedure,
			opts...,
		),
		updateAddress: connect_go.NewClient[v1.UpdateAddressRequest, v1.UpdateAddressResponse](
			httpClient,
			baseURL+SelfServiceServiceUpdateAddressProcedure,
			opts...,
		),
		addPhoneNumber: connect_go.NewClient[v1.AddPhoneNumberRequest, v1.AddPhoneNumberResponse](
			httpClient,
			baseURL+SelfServiceServiceAddPhoneNumberProcedure,
			opts...,
		),
		deletePhoneNumber: connect_go.NewClient[v1.DeletePhoneNumberRequest, v1.DeletePhoneNumberResponse](
			httpClient,
			baseURL+SelfServiceServiceDeletePhoneNumberProcedure,
			opts...,
		),
		markPhoneNumberAsPrimary: connect_go.NewClient[v1.MarkPhoneNumberAsPrimaryRequest, v1.MarkPhoneNumberAsPrimaryResponse](
			httpClient,
			baseURL+SelfServiceServiceMarkPhoneNumberAsPrimaryProcedure,
			opts...,
		),
		validatePhoneNumber: connect_go.NewClient[v1.ValidatePhoneNumberRequest, v1.ValidatePhoneNumberResponse](
			httpClient,
			baseURL+SelfServiceServiceValidatePhoneNumberProcedure,
			opts...,
		),
		getRegisteredPasskeys: connect_go.NewClient[v1.GetRegisteredPasskeysRequest, v1.GetRegisteredPasskeysResponse](
			httpClient,
			baseURL+SelfServiceServiceGetRegisteredPasskeysProcedure,
			opts...,
		),
		removePasskey: connect_go.NewClient[v1.RemovePasskeyRequest, v1.RemovePasskeyResponse](
			httpClient,
			baseURL+SelfServiceServiceRemovePasskeyProcedure,
			opts...,
		),
		enroll2FA: connect_go.NewClient[v1.Enroll2FARequest, v1.Enroll2FAResponse](
			httpClient,
			baseURL+SelfServiceServiceEnroll2FAProcedure,
			opts...,
		),
		remove2FA: connect_go.NewClient[v1.Remove2FARequest, v1.Remove2FAResponse](
			httpClient,
			baseURL+SelfServiceServiceRemove2FAProcedure,
			opts...,
		),
		generateRecoveryCodes: connect_go.NewClient[v1.GenerateRecoveryCodesRequest, v1.GenerateRecoveryCodesResponse](
			httpClient,
			baseURL+SelfServiceServiceGenerateRecoveryCodesProcedure,
			opts...,
		),
	}
}

// selfServiceServiceClient implements SelfServiceServiceClient.
type selfServiceServiceClient struct {
	changePassword           *connect_go.Client[v1.ChangePasswordRequest, v1.ChangePasswordResponse]
	updateProfile            *connect_go.Client[v1.UpdateProfileRequest, v1.UpdateProfileResponse]
	addEmailAddress          *connect_go.Client[v1.AddEmailAddressRequest, v1.AddEmailAddressResponse]
	deleteEmailAddress       *connect_go.Client[v1.DeleteEmailAddressRequest, v1.DeleteEmailAddressResponse]
	markEmailAsPrimary       *connect_go.Client[v1.MarkEmailAsPrimaryRequest, v1.MarkEmailAsPrimaryResponse]
	validateEmail            *connect_go.Client[v1.ValidateEmailRequest, v1.ValidateEmailResponse]
	addAddress               *connect_go.Client[v1.AddAddressRequest, v1.AddAddressResponse]
	deleteAddress            *connect_go.Client[v1.DeleteAddressRequest, v1.DeleteAddressResponse]
	updateAddress            *connect_go.Client[v1.UpdateAddressRequest, v1.UpdateAddressResponse]
	addPhoneNumber           *connect_go.Client[v1.AddPhoneNumberRequest, v1.AddPhoneNumberResponse]
	deletePhoneNumber        *connect_go.Client[v1.DeletePhoneNumberRequest, v1.DeletePhoneNumberResponse]
	markPhoneNumberAsPrimary *connect_go.Client[v1.MarkPhoneNumberAsPrimaryRequest, v1.MarkPhoneNumberAsPrimaryResponse]
	validatePhoneNumber      *connect_go.Client[v1.ValidatePhoneNumberRequest, v1.ValidatePhoneNumberResponse]
	getRegisteredPasskeys    *connect_go.Client[v1.GetRegisteredPasskeysRequest, v1.GetRegisteredPasskeysResponse]
	removePasskey            *connect_go.Client[v1.RemovePasskeyRequest, v1.RemovePasskeyResponse]
	enroll2FA                *connect_go.Client[v1.Enroll2FARequest, v1.Enroll2FAResponse]
	remove2FA                *connect_go.Client[v1.Remove2FARequest, v1.Remove2FAResponse]
	generateRecoveryCodes    *connect_go.Client[v1.GenerateRecoveryCodesRequest, v1.GenerateRecoveryCodesResponse]
}

// ChangePassword calls tkd.idm.v1.SelfServiceService.ChangePassword.
func (c *selfServiceServiceClient) ChangePassword(ctx context.Context, req *connect_go.Request[v1.ChangePasswordRequest]) (*connect_go.Response[v1.ChangePasswordResponse], error) {
	return c.changePassword.CallUnary(ctx, req)
}

// UpdateProfile calls tkd.idm.v1.SelfServiceService.UpdateProfile.
func (c *selfServiceServiceClient) UpdateProfile(ctx context.Context, req *connect_go.Request[v1.UpdateProfileRequest]) (*connect_go.Response[v1.UpdateProfileResponse], error) {
	return c.updateProfile.CallUnary(ctx, req)
}

// AddEmailAddress calls tkd.idm.v1.SelfServiceService.AddEmailAddress.
func (c *selfServiceServiceClient) AddEmailAddress(ctx context.Context, req *connect_go.Request[v1.AddEmailAddressRequest]) (*connect_go.Response[v1.AddEmailAddressResponse], error) {
	return c.addEmailAddress.CallUnary(ctx, req)
}

// DeleteEmailAddress calls tkd.idm.v1.SelfServiceService.DeleteEmailAddress.
func (c *selfServiceServiceClient) DeleteEmailAddress(ctx context.Context, req *connect_go.Request[v1.DeleteEmailAddressRequest]) (*connect_go.Response[v1.DeleteEmailAddressResponse], error) {
	return c.deleteEmailAddress.CallUnary(ctx, req)
}

// MarkEmailAsPrimary calls tkd.idm.v1.SelfServiceService.MarkEmailAsPrimary.
func (c *selfServiceServiceClient) MarkEmailAsPrimary(ctx context.Context, req *connect_go.Request[v1.MarkEmailAsPrimaryRequest]) (*connect_go.Response[v1.MarkEmailAsPrimaryResponse], error) {
	return c.markEmailAsPrimary.CallUnary(ctx, req)
}

// ValidateEmail calls tkd.idm.v1.SelfServiceService.ValidateEmail.
func (c *selfServiceServiceClient) ValidateEmail(ctx context.Context, req *connect_go.Request[v1.ValidateEmailRequest]) (*connect_go.Response[v1.ValidateEmailResponse], error) {
	return c.validateEmail.CallUnary(ctx, req)
}

// AddAddress calls tkd.idm.v1.SelfServiceService.AddAddress.
func (c *selfServiceServiceClient) AddAddress(ctx context.Context, req *connect_go.Request[v1.AddAddressRequest]) (*connect_go.Response[v1.AddAddressResponse], error) {
	return c.addAddress.CallUnary(ctx, req)
}

// DeleteAddress calls tkd.idm.v1.SelfServiceService.DeleteAddress.
func (c *selfServiceServiceClient) DeleteAddress(ctx context.Context, req *connect_go.Request[v1.DeleteAddressRequest]) (*connect_go.Response[v1.DeleteAddressResponse], error) {
	return c.deleteAddress.CallUnary(ctx, req)
}

// UpdateAddress calls tkd.idm.v1.SelfServiceService.UpdateAddress.
func (c *selfServiceServiceClient) UpdateAddress(ctx context.Context, req *connect_go.Request[v1.UpdateAddressRequest]) (*connect_go.Response[v1.UpdateAddressResponse], error) {
	return c.updateAddress.CallUnary(ctx, req)
}

// AddPhoneNumber calls tkd.idm.v1.SelfServiceService.AddPhoneNumber.
func (c *selfServiceServiceClient) AddPhoneNumber(ctx context.Context, req *connect_go.Request[v1.AddPhoneNumberRequest]) (*connect_go.Response[v1.AddPhoneNumberResponse], error) {
	return c.addPhoneNumber.CallUnary(ctx, req)
}

// DeletePhoneNumber calls tkd.idm.v1.SelfServiceService.DeletePhoneNumber.
func (c *selfServiceServiceClient) DeletePhoneNumber(ctx context.Context, req *connect_go.Request[v1.DeletePhoneNumberRequest]) (*connect_go.Response[v1.DeletePhoneNumberResponse], error) {
	return c.deletePhoneNumber.CallUnary(ctx, req)
}

// MarkPhoneNumberAsPrimary calls tkd.idm.v1.SelfServiceService.MarkPhoneNumberAsPrimary.
func (c *selfServiceServiceClient) MarkPhoneNumberAsPrimary(ctx context.Context, req *connect_go.Request[v1.MarkPhoneNumberAsPrimaryRequest]) (*connect_go.Response[v1.MarkPhoneNumberAsPrimaryResponse], error) {
	return c.markPhoneNumberAsPrimary.CallUnary(ctx, req)
}

// ValidatePhoneNumber calls tkd.idm.v1.SelfServiceService.ValidatePhoneNumber.
func (c *selfServiceServiceClient) ValidatePhoneNumber(ctx context.Context, req *connect_go.Request[v1.ValidatePhoneNumberRequest]) (*connect_go.Response[v1.ValidatePhoneNumberResponse], error) {
	return c.validatePhoneNumber.CallUnary(ctx, req)
}

// GetRegisteredPasskeys calls tkd.idm.v1.SelfServiceService.GetRegisteredPasskeys.
func (c *selfServiceServiceClient) GetRegisteredPasskeys(ctx context.Context, req *connect_go.Request[v1.GetRegisteredPasskeysRequest]) (*connect_go.Response[v1.GetRegisteredPasskeysResponse], error) {
	return c.getRegisteredPasskeys.CallUnary(ctx, req)
}

// RemovePasskey calls tkd.idm.v1.SelfServiceService.RemovePasskey.
func (c *selfServiceServiceClient) RemovePasskey(ctx context.Context, req *connect_go.Request[v1.RemovePasskeyRequest]) (*connect_go.Response[v1.RemovePasskeyResponse], error) {
	return c.removePasskey.CallUnary(ctx, req)
}

// Enroll2FA calls tkd.idm.v1.SelfServiceService.Enroll2FA.
func (c *selfServiceServiceClient) Enroll2FA(ctx context.Context, req *connect_go.Request[v1.Enroll2FARequest]) (*connect_go.Response[v1.Enroll2FAResponse], error) {
	return c.enroll2FA.CallUnary(ctx, req)
}

// Remove2FA calls tkd.idm.v1.SelfServiceService.Remove2FA.
func (c *selfServiceServiceClient) Remove2FA(ctx context.Context, req *connect_go.Request[v1.Remove2FARequest]) (*connect_go.Response[v1.Remove2FAResponse], error) {
	return c.remove2FA.CallUnary(ctx, req)
}

// GenerateRecoveryCodes calls tkd.idm.v1.SelfServiceService.GenerateRecoveryCodes.
func (c *selfServiceServiceClient) GenerateRecoveryCodes(ctx context.Context, req *connect_go.Request[v1.GenerateRecoveryCodesRequest]) (*connect_go.Response[v1.GenerateRecoveryCodesResponse], error) {
	return c.generateRecoveryCodes.CallUnary(ctx, req)
}

// SelfServiceServiceHandler is an implementation of the tkd.idm.v1.SelfServiceService service.
type SelfServiceServiceHandler interface {
	ChangePassword(context.Context, *connect_go.Request[v1.ChangePasswordRequest]) (*connect_go.Response[v1.ChangePasswordResponse], error)
	UpdateProfile(context.Context, *connect_go.Request[v1.UpdateProfileRequest]) (*connect_go.Response[v1.UpdateProfileResponse], error)
	// E-Mails
	AddEmailAddress(context.Context, *connect_go.Request[v1.AddEmailAddressRequest]) (*connect_go.Response[v1.AddEmailAddressResponse], error)
	DeleteEmailAddress(context.Context, *connect_go.Request[v1.DeleteEmailAddressRequest]) (*connect_go.Response[v1.DeleteEmailAddressResponse], error)
	MarkEmailAsPrimary(context.Context, *connect_go.Request[v1.MarkEmailAsPrimaryRequest]) (*connect_go.Response[v1.MarkEmailAsPrimaryResponse], error)
	ValidateEmail(context.Context, *connect_go.Request[v1.ValidateEmailRequest]) (*connect_go.Response[v1.ValidateEmailResponse], error)
	// Addresses
	AddAddress(context.Context, *connect_go.Request[v1.AddAddressRequest]) (*connect_go.Response[v1.AddAddressResponse], error)
	DeleteAddress(context.Context, *connect_go.Request[v1.DeleteAddressRequest]) (*connect_go.Response[v1.DeleteAddressResponse], error)
	UpdateAddress(context.Context, *connect_go.Request[v1.UpdateAddressRequest]) (*connect_go.Response[v1.UpdateAddressResponse], error)
	// Phone Numbers
	AddPhoneNumber(context.Context, *connect_go.Request[v1.AddPhoneNumberRequest]) (*connect_go.Response[v1.AddPhoneNumberResponse], error)
	DeletePhoneNumber(context.Context, *connect_go.Request[v1.DeletePhoneNumberRequest]) (*connect_go.Response[v1.DeletePhoneNumberResponse], error)
	MarkPhoneNumberAsPrimary(context.Context, *connect_go.Request[v1.MarkPhoneNumberAsPrimaryRequest]) (*connect_go.Response[v1.MarkPhoneNumberAsPrimaryResponse], error)
	ValidatePhoneNumber(context.Context, *connect_go.Request[v1.ValidatePhoneNumberRequest]) (*connect_go.Response[v1.ValidatePhoneNumberResponse], error)
	// WebAuthN
	GetRegisteredPasskeys(context.Context, *connect_go.Request[v1.GetRegisteredPasskeysRequest]) (*connect_go.Response[v1.GetRegisteredPasskeysResponse], error)
	RemovePasskey(context.Context, *connect_go.Request[v1.RemovePasskeyRequest]) (*connect_go.Response[v1.RemovePasskeyResponse], error)
	// Two-Factor authentication
	Enroll2FA(context.Context, *connect_go.Request[v1.Enroll2FARequest]) (*connect_go.Response[v1.Enroll2FAResponse], error)
	Remove2FA(context.Context, *connect_go.Request[v1.Remove2FARequest]) (*connect_go.Response[v1.Remove2FAResponse], error)
	GenerateRecoveryCodes(context.Context, *connect_go.Request[v1.GenerateRecoveryCodesRequest]) (*connect_go.Response[v1.GenerateRecoveryCodesResponse], error)
}

// NewSelfServiceServiceHandler builds an HTTP handler from the service implementation. It returns
// the path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewSelfServiceServiceHandler(svc SelfServiceServiceHandler, opts ...connect_go.HandlerOption) (string, http.Handler) {
	selfServiceServiceChangePasswordHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceChangePasswordProcedure,
		svc.ChangePassword,
		opts...,
	)
	selfServiceServiceUpdateProfileHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceUpdateProfileProcedure,
		svc.UpdateProfile,
		opts...,
	)
	selfServiceServiceAddEmailAddressHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceAddEmailAddressProcedure,
		svc.AddEmailAddress,
		opts...,
	)
	selfServiceServiceDeleteEmailAddressHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceDeleteEmailAddressProcedure,
		svc.DeleteEmailAddress,
		opts...,
	)
	selfServiceServiceMarkEmailAsPrimaryHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceMarkEmailAsPrimaryProcedure,
		svc.MarkEmailAsPrimary,
		opts...,
	)
	selfServiceServiceValidateEmailHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceValidateEmailProcedure,
		svc.ValidateEmail,
		opts...,
	)
	selfServiceServiceAddAddressHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceAddAddressProcedure,
		svc.AddAddress,
		opts...,
	)
	selfServiceServiceDeleteAddressHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceDeleteAddressProcedure,
		svc.DeleteAddress,
		opts...,
	)
	selfServiceServiceUpdateAddressHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceUpdateAddressProcedure,
		svc.UpdateAddress,
		opts...,
	)
	selfServiceServiceAddPhoneNumberHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceAddPhoneNumberProcedure,
		svc.AddPhoneNumber,
		opts...,
	)
	selfServiceServiceDeletePhoneNumberHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceDeletePhoneNumberProcedure,
		svc.DeletePhoneNumber,
		opts...,
	)
	selfServiceServiceMarkPhoneNumberAsPrimaryHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceMarkPhoneNumberAsPrimaryProcedure,
		svc.MarkPhoneNumberAsPrimary,
		opts...,
	)
	selfServiceServiceValidatePhoneNumberHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceValidatePhoneNumberProcedure,
		svc.ValidatePhoneNumber,
		opts...,
	)
	selfServiceServiceGetRegisteredPasskeysHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceGetRegisteredPasskeysProcedure,
		svc.GetRegisteredPasskeys,
		opts...,
	)
	selfServiceServiceRemovePasskeyHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceRemovePasskeyProcedure,
		svc.RemovePasskey,
		opts...,
	)
	selfServiceServiceEnroll2FAHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceEnroll2FAProcedure,
		svc.Enroll2FA,
		opts...,
	)
	selfServiceServiceRemove2FAHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceRemove2FAProcedure,
		svc.Remove2FA,
		opts...,
	)
	selfServiceServiceGenerateRecoveryCodesHandler := connect_go.NewUnaryHandler(
		SelfServiceServiceGenerateRecoveryCodesProcedure,
		svc.GenerateRecoveryCodes,
		opts...,
	)
	return "/tkd.idm.v1.SelfServiceService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case SelfServiceServiceChangePasswordProcedure:
			selfServiceServiceChangePasswordHandler.ServeHTTP(w, r)
		case SelfServiceServiceUpdateProfileProcedure:
			selfServiceServiceUpdateProfileHandler.ServeHTTP(w, r)
		case SelfServiceServiceAddEmailAddressProcedure:
			selfServiceServiceAddEmailAddressHandler.ServeHTTP(w, r)
		case SelfServiceServiceDeleteEmailAddressProcedure:
			selfServiceServiceDeleteEmailAddressHandler.ServeHTTP(w, r)
		case SelfServiceServiceMarkEmailAsPrimaryProcedure:
			selfServiceServiceMarkEmailAsPrimaryHandler.ServeHTTP(w, r)
		case SelfServiceServiceValidateEmailProcedure:
			selfServiceServiceValidateEmailHandler.ServeHTTP(w, r)
		case SelfServiceServiceAddAddressProcedure:
			selfServiceServiceAddAddressHandler.ServeHTTP(w, r)
		case SelfServiceServiceDeleteAddressProcedure:
			selfServiceServiceDeleteAddressHandler.ServeHTTP(w, r)
		case SelfServiceServiceUpdateAddressProcedure:
			selfServiceServiceUpdateAddressHandler.ServeHTTP(w, r)
		case SelfServiceServiceAddPhoneNumberProcedure:
			selfServiceServiceAddPhoneNumberHandler.ServeHTTP(w, r)
		case SelfServiceServiceDeletePhoneNumberProcedure:
			selfServiceServiceDeletePhoneNumberHandler.ServeHTTP(w, r)
		case SelfServiceServiceMarkPhoneNumberAsPrimaryProcedure:
			selfServiceServiceMarkPhoneNumberAsPrimaryHandler.ServeHTTP(w, r)
		case SelfServiceServiceValidatePhoneNumberProcedure:
			selfServiceServiceValidatePhoneNumberHandler.ServeHTTP(w, r)
		case SelfServiceServiceGetRegisteredPasskeysProcedure:
			selfServiceServiceGetRegisteredPasskeysHandler.ServeHTTP(w, r)
		case SelfServiceServiceRemovePasskeyProcedure:
			selfServiceServiceRemovePasskeyHandler.ServeHTTP(w, r)
		case SelfServiceServiceEnroll2FAProcedure:
			selfServiceServiceEnroll2FAHandler.ServeHTTP(w, r)
		case SelfServiceServiceRemove2FAProcedure:
			selfServiceServiceRemove2FAHandler.ServeHTTP(w, r)
		case SelfServiceServiceGenerateRecoveryCodesProcedure:
			selfServiceServiceGenerateRecoveryCodesHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedSelfServiceServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedSelfServiceServiceHandler struct{}

func (UnimplementedSelfServiceServiceHandler) ChangePassword(context.Context, *connect_go.Request[v1.ChangePasswordRequest]) (*connect_go.Response[v1.ChangePasswordResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.ChangePassword is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) UpdateProfile(context.Context, *connect_go.Request[v1.UpdateProfileRequest]) (*connect_go.Response[v1.UpdateProfileResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.UpdateProfile is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) AddEmailAddress(context.Context, *connect_go.Request[v1.AddEmailAddressRequest]) (*connect_go.Response[v1.AddEmailAddressResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.AddEmailAddress is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) DeleteEmailAddress(context.Context, *connect_go.Request[v1.DeleteEmailAddressRequest]) (*connect_go.Response[v1.DeleteEmailAddressResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.DeleteEmailAddress is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) MarkEmailAsPrimary(context.Context, *connect_go.Request[v1.MarkEmailAsPrimaryRequest]) (*connect_go.Response[v1.MarkEmailAsPrimaryResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.MarkEmailAsPrimary is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) ValidateEmail(context.Context, *connect_go.Request[v1.ValidateEmailRequest]) (*connect_go.Response[v1.ValidateEmailResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.ValidateEmail is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) AddAddress(context.Context, *connect_go.Request[v1.AddAddressRequest]) (*connect_go.Response[v1.AddAddressResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.AddAddress is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) DeleteAddress(context.Context, *connect_go.Request[v1.DeleteAddressRequest]) (*connect_go.Response[v1.DeleteAddressResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.DeleteAddress is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) UpdateAddress(context.Context, *connect_go.Request[v1.UpdateAddressRequest]) (*connect_go.Response[v1.UpdateAddressResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.UpdateAddress is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) AddPhoneNumber(context.Context, *connect_go.Request[v1.AddPhoneNumberRequest]) (*connect_go.Response[v1.AddPhoneNumberResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.AddPhoneNumber is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) DeletePhoneNumber(context.Context, *connect_go.Request[v1.DeletePhoneNumberRequest]) (*connect_go.Response[v1.DeletePhoneNumberResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.DeletePhoneNumber is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) MarkPhoneNumberAsPrimary(context.Context, *connect_go.Request[v1.MarkPhoneNumberAsPrimaryRequest]) (*connect_go.Response[v1.MarkPhoneNumberAsPrimaryResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.MarkPhoneNumberAsPrimary is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) ValidatePhoneNumber(context.Context, *connect_go.Request[v1.ValidatePhoneNumberRequest]) (*connect_go.Response[v1.ValidatePhoneNumberResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.ValidatePhoneNumber is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) GetRegisteredPasskeys(context.Context, *connect_go.Request[v1.GetRegisteredPasskeysRequest]) (*connect_go.Response[v1.GetRegisteredPasskeysResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.GetRegisteredPasskeys is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) RemovePasskey(context.Context, *connect_go.Request[v1.RemovePasskeyRequest]) (*connect_go.Response[v1.RemovePasskeyResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.RemovePasskey is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) Enroll2FA(context.Context, *connect_go.Request[v1.Enroll2FARequest]) (*connect_go.Response[v1.Enroll2FAResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.Enroll2FA is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) Remove2FA(context.Context, *connect_go.Request[v1.Remove2FARequest]) (*connect_go.Response[v1.Remove2FAResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.Remove2FA is not implemented"))
}

func (UnimplementedSelfServiceServiceHandler) GenerateRecoveryCodes(context.Context, *connect_go.Request[v1.GenerateRecoveryCodesRequest]) (*connect_go.Response[v1.GenerateRecoveryCodesResponse], error) {
	return nil, connect_go.NewError(connect_go.CodeUnimplemented, errors.New("tkd.idm.v1.SelfServiceService.GenerateRecoveryCodes is not implemented"))
}
