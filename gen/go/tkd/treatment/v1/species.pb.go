// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: tkd/treatment/v1/species.proto

package treatmentv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/tierklinik-dobersberg/apis/gen/go/tkd/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IconType int32

const (
	IconType_ICON_TYPE_UNSPECIFIED IconType = 0
	IconType_ICON_TYPE_UNICODE     IconType = 1
	IconType_ICON_TYPE_URL         IconType = 2
	IconType_ICON_TYPE_IMAGE_WEBP  IconType = 3
)

// Enum value maps for IconType.
var (
	IconType_name = map[int32]string{
		0: "ICON_TYPE_UNSPECIFIED",
		1: "ICON_TYPE_UNICODE",
		2: "ICON_TYPE_URL",
		3: "ICON_TYPE_IMAGE_WEBP",
	}
	IconType_value = map[string]int32{
		"ICON_TYPE_UNSPECIFIED": 0,
		"ICON_TYPE_UNICODE":     1,
		"ICON_TYPE_URL":         2,
		"ICON_TYPE_IMAGE_WEBP":  3,
	}
)

func (x IconType) Enum() *IconType {
	p := new(IconType)
	*p = x
	return p
}

func (x IconType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IconType) Descriptor() protoreflect.EnumDescriptor {
	return file_tkd_treatment_v1_species_proto_enumTypes[0].Descriptor()
}

func (IconType) Type() protoreflect.EnumType {
	return &file_tkd_treatment_v1_species_proto_enumTypes[0]
}

func (x IconType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IconType.Descriptor instead.
func (IconType) EnumDescriptor() ([]byte, []int) {
	return file_tkd_treatment_v1_species_proto_rawDescGZIP(), []int{0}
}

type Icon struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Data holds the actual icon data. It's interpretation depends
	// on the value of IconType type field.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Type defines the type of the icon and how the data field needs to
	// be parsed/interpreted.
	Type          IconType `protobuf:"varint,2,opt,name=type,proto3,enum=tkd.treatment.v1.IconType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Icon) Reset() {
	*x = Icon{}
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Icon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Icon) ProtoMessage() {}

func (x *Icon) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Icon.ProtoReflect.Descriptor instead.
func (*Icon) Descriptor() ([]byte, []int) {
	return file_tkd_treatment_v1_species_proto_rawDescGZIP(), []int{0}
}

func (x *Icon) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Icon) GetType() IconType {
	if x != nil {
		return x.Type
	}
	return IconType_ICON_TYPE_UNSPECIFIED
}

// Species is a well-known species for which treatments are available.
type Species struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the unique name of the species.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// DisplayName is a human readable name for the species to be used in the
	// self-booking user interface.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// RequestCastrationStatus can be set to true if the self-booking user interface
	// should request the castration status of the patient.
	RequestCastrationStatus bool `protobuf:"varint,3,opt,name=request_castration_status,json=requestCastrationStatus,proto3" json:"request_castration_status,omitempty"`
	// Since species are not always entered correctly, the following field
	// is used to match multiple values to a given species.
	// When used together with the tkd.customer.v1.Patient message,
	// it's species and breed values will be compared.
	MatchWords []string `protobuf:"bytes,4,rep,name=match_words,json=matchWords,proto3" json:"match_words,omitempty"`
	// Icon holds a small icon for the species.
	Icon          *Icon `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Species) Reset() {
	*x = Species{}
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Species) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Species) ProtoMessage() {}

func (x *Species) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Species.ProtoReflect.Descriptor instead.
func (*Species) Descriptor() ([]byte, []int) {
	return file_tkd_treatment_v1_species_proto_rawDescGZIP(), []int{1}
}

func (x *Species) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Species) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Species) GetRequestCastrationStatus() bool {
	if x != nil {
		return x.RequestCastrationStatus
	}
	return false
}

func (x *Species) GetMatchWords() []string {
	if x != nil {
		return x.MatchWords
	}
	return nil
}

func (x *Species) GetIcon() *Icon {
	if x != nil {
		return x.Icon
	}
	return nil
}

type DetectSpeciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetectSpeciesRequest) Reset() {
	*x = DetectSpeciesRequest{}
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetectSpeciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectSpeciesRequest) ProtoMessage() {}

func (x *DetectSpeciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectSpeciesRequest.ProtoReflect.Descriptor instead.
func (*DetectSpeciesRequest) Descriptor() ([]byte, []int) {
	return file_tkd_treatment_v1_species_proto_rawDescGZIP(), []int{2}
}

func (x *DetectSpeciesRequest) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type ListSpeciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Names         []string               `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpeciesRequest) Reset() {
	*x = ListSpeciesRequest{}
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpeciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpeciesRequest) ProtoMessage() {}

func (x *ListSpeciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpeciesRequest.ProtoReflect.Descriptor instead.
func (*ListSpeciesRequest) Descriptor() ([]byte, []int) {
	return file_tkd_treatment_v1_species_proto_rawDescGZIP(), []int{3}
}

func (x *ListSpeciesRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type ListSpeciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Species       []*Species             `protobuf:"bytes,1,rep,name=species,proto3" json:"species,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpeciesResponse) Reset() {
	*x = ListSpeciesResponse{}
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpeciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpeciesResponse) ProtoMessage() {}

func (x *ListSpeciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpeciesResponse.ProtoReflect.Descriptor instead.
func (*ListSpeciesResponse) Descriptor() ([]byte, []int) {
	return file_tkd_treatment_v1_species_proto_rawDescGZIP(), []int{4}
}

func (x *ListSpeciesResponse) GetSpecies() []*Species {
	if x != nil {
		return x.Species
	}
	return nil
}

type UpdateSpeciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Species       *Species               `protobuf:"bytes,2,opt,name=species,proto3" json:"species,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSpeciesRequest) Reset() {
	*x = UpdateSpeciesRequest{}
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSpeciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpeciesRequest) ProtoMessage() {}

func (x *UpdateSpeciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpeciesRequest.ProtoReflect.Descriptor instead.
func (*UpdateSpeciesRequest) Descriptor() ([]byte, []int) {
	return file_tkd_treatment_v1_species_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSpeciesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSpeciesRequest) GetSpecies() *Species {
	if x != nil {
		return x.Species
	}
	return nil
}

func (x *UpdateSpeciesRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeleteSpeciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSpeciesRequest) Reset() {
	*x = DeleteSpeciesRequest{}
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSpeciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpeciesRequest) ProtoMessage() {}

func (x *DeleteSpeciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tkd_treatment_v1_species_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpeciesRequest.ProtoReflect.Descriptor instead.
func (*DeleteSpeciesRequest) Descriptor() ([]byte, []int) {
	return file_tkd_treatment_v1_species_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSpeciesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_tkd_treatment_v1_species_proto protoreflect.FileDescriptor

const file_tkd_treatment_v1_species_proto_rawDesc = "" +
	"\n" +
	"\x1etkd/treatment/v1/species.proto\x12\x10tkd.treatment.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1etkd/common/v1/descriptor.proto\"J\n" +
	"\x04Icon\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12.\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1a.tkd.treatment.v1.IconTypeR\x04type\"\xc9\x01\n" +
	"\aSpecies\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12:\n" +
	"\x19request_castration_status\x18\x03 \x01(\bR\x17requestCastrationStatus\x12\x1f\n" +
	"\vmatch_words\x18\x04 \x03(\tR\n" +
	"matchWords\x12*\n" +
	"\x04icon\x18\x05 \x01(\v2\x16.tkd.treatment.v1.IconR\x04icon\".\n" +
	"\x14DetectSpeciesRequest\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"*\n" +
	"\x12ListSpeciesRequest\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"J\n" +
	"\x13ListSpeciesResponse\x123\n" +
	"\aspecies\x18\x01 \x03(\v2\x19.tkd.treatment.v1.SpeciesR\aspecies\"\xae\x01\n" +
	"\x14UpdateSpeciesRequest\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x04name\x12<\n" +
	"\aspecies\x18\x02 \x01(\v2\x19.tkd.treatment.v1.SpeciesB\a\xfa\xf7\x18\x03\xc8\x01\x01R\aspecies\x12;\n" +
	"\vupdate_mask\x18\x03 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"3\n" +
	"\x14DeleteSpeciesRequest\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfa\xf7\x18\x03\xc8\x01\x01R\x04name*i\n" +
	"\bIconType\x12\x19\n" +
	"\x15ICON_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11ICON_TYPE_UNICODE\x10\x01\x12\x11\n" +
	"\rICON_TYPE_URL\x10\x02\x12\x18\n" +
	"\x14ICON_TYPE_IMAGE_WEBP\x10\x032\xdb\x03\n" +
	"\x0eSpeciesService\x12L\n" +
	"\rCreateSpecies\x12\x19.tkd.treatment.v1.Species\x1a\x19.tkd.treatment.v1.Species\"\x05\xb2~\x02\b\x01\x12a\n" +
	"\vListSpecies\x12$.tkd.treatment.v1.ListSpeciesRequest\x1a%.tkd.treatment.v1.ListSpeciesResponse\"\x05\xb2~\x02\b\x01\x12Y\n" +
	"\rUpdateSpecies\x12&.tkd.treatment.v1.UpdateSpeciesRequest\x1a\x19.tkd.treatment.v1.Species\"\x05\xb2~\x02\b\x01\x12V\n" +
	"\rDeleteSpecies\x12&.tkd.treatment.v1.DeleteSpeciesRequest\x1a\x16.google.protobuf.Empty\"\x05\xb2~\x02\b\x01\x12e\n" +
	"\rDetectSpecies\x12&.tkd.treatment.v1.DetectSpeciesRequest\x1a%.tkd.treatment.v1.ListSpeciesResponse\"\x05\xb2~\x02\b\x01B\xd1\x01\n" +
	"\x14com.tkd.treatment.v1B\fSpeciesProtoP\x01ZIgithub.com/tierklinik-dobersberg/apis/gen/go/tkd/treatment/v1;treatmentv1\xa2\x02\x03TTX\xaa\x02\x10Tkd.Treatment.V1\xca\x02\x10Tkd\\Treatment\\V1\xe2\x02\x1cTkd\\Treatment\\V1\\GPBMetadata\xea\x02\x12Tkd::Treatment::V1b\x06proto3"

var (
	file_tkd_treatment_v1_species_proto_rawDescOnce sync.Once
	file_tkd_treatment_v1_species_proto_rawDescData []byte
)

func file_tkd_treatment_v1_species_proto_rawDescGZIP() []byte {
	file_tkd_treatment_v1_species_proto_rawDescOnce.Do(func() {
		file_tkd_treatment_v1_species_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tkd_treatment_v1_species_proto_rawDesc), len(file_tkd_treatment_v1_species_proto_rawDesc)))
	})
	return file_tkd_treatment_v1_species_proto_rawDescData
}

var file_tkd_treatment_v1_species_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tkd_treatment_v1_species_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_tkd_treatment_v1_species_proto_goTypes = []any{
	(IconType)(0),                 // 0: tkd.treatment.v1.IconType
	(*Icon)(nil),                  // 1: tkd.treatment.v1.Icon
	(*Species)(nil),               // 2: tkd.treatment.v1.Species
	(*DetectSpeciesRequest)(nil),  // 3: tkd.treatment.v1.DetectSpeciesRequest
	(*ListSpeciesRequest)(nil),    // 4: tkd.treatment.v1.ListSpeciesRequest
	(*ListSpeciesResponse)(nil),   // 5: tkd.treatment.v1.ListSpeciesResponse
	(*UpdateSpeciesRequest)(nil),  // 6: tkd.treatment.v1.UpdateSpeciesRequest
	(*DeleteSpeciesRequest)(nil),  // 7: tkd.treatment.v1.DeleteSpeciesRequest
	(*fieldmaskpb.FieldMask)(nil), // 8: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),         // 9: google.protobuf.Empty
}
var file_tkd_treatment_v1_species_proto_depIdxs = []int32{
	0,  // 0: tkd.treatment.v1.Icon.type:type_name -> tkd.treatment.v1.IconType
	1,  // 1: tkd.treatment.v1.Species.icon:type_name -> tkd.treatment.v1.Icon
	2,  // 2: tkd.treatment.v1.ListSpeciesResponse.species:type_name -> tkd.treatment.v1.Species
	2,  // 3: tkd.treatment.v1.UpdateSpeciesRequest.species:type_name -> tkd.treatment.v1.Species
	8,  // 4: tkd.treatment.v1.UpdateSpeciesRequest.update_mask:type_name -> google.protobuf.FieldMask
	2,  // 5: tkd.treatment.v1.SpeciesService.CreateSpecies:input_type -> tkd.treatment.v1.Species
	4,  // 6: tkd.treatment.v1.SpeciesService.ListSpecies:input_type -> tkd.treatment.v1.ListSpeciesRequest
	6,  // 7: tkd.treatment.v1.SpeciesService.UpdateSpecies:input_type -> tkd.treatment.v1.UpdateSpeciesRequest
	7,  // 8: tkd.treatment.v1.SpeciesService.DeleteSpecies:input_type -> tkd.treatment.v1.DeleteSpeciesRequest
	3,  // 9: tkd.treatment.v1.SpeciesService.DetectSpecies:input_type -> tkd.treatment.v1.DetectSpeciesRequest
	2,  // 10: tkd.treatment.v1.SpeciesService.CreateSpecies:output_type -> tkd.treatment.v1.Species
	5,  // 11: tkd.treatment.v1.SpeciesService.ListSpecies:output_type -> tkd.treatment.v1.ListSpeciesResponse
	2,  // 12: tkd.treatment.v1.SpeciesService.UpdateSpecies:output_type -> tkd.treatment.v1.Species
	9,  // 13: tkd.treatment.v1.SpeciesService.DeleteSpecies:output_type -> google.protobuf.Empty
	5,  // 14: tkd.treatment.v1.SpeciesService.DetectSpecies:output_type -> tkd.treatment.v1.ListSpeciesResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_tkd_treatment_v1_species_proto_init() }
func file_tkd_treatment_v1_species_proto_init() {
	if File_tkd_treatment_v1_species_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tkd_treatment_v1_species_proto_rawDesc), len(file_tkd_treatment_v1_species_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tkd_treatment_v1_species_proto_goTypes,
		DependencyIndexes: file_tkd_treatment_v1_species_proto_depIdxs,
		EnumInfos:         file_tkd_treatment_v1_species_proto_enumTypes,
		MessageInfos:      file_tkd_treatment_v1_species_proto_msgTypes,
	}.Build()
	File_tkd_treatment_v1_species_proto = out.File
	file_tkd_treatment_v1_species_proto_goTypes = nil
	file_tkd_treatment_v1_species_proto_depIdxs = nil
}
